--->|<!DOCTYPE doctype html >
<html lang="en-US">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="http://english.koreadaily.com/wp-content/uploads/2019/07/Copy-of-Featured-Image-2.png" property="og:image"/>
 </head>
 <body class="post-template-default single single-post postid-3293 single-format-standard --- global-block-template-1 single_template_3 td-full-layout" itemscope="itemscope" itemtype="http://schema.org/WebPage">
  <div class="td-scroll-up">
   <i class="td-icon-menu-up">
   </i>
  </div>
  <div class="td-menu-background">
  </div>
  <div id="td-mobile-nav">
   <div class="td-mobile-container">
    [ahref][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][pkeyx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][ahref][area1][keywordx][area1][keywordx][ahref][linkx]
   </div>
   <div class="td-register-section" id="login-form-mobile">
    <div class="td-login-animation td-login-hide-mob" id="td-login-mob">
     <div class="td-login-close">
      <a class="td-back-button" href="#">
       <i class="td-icon-read-down">
       </i>
      </a>
      <div class="td-login-title">
       Sign in
      </div>
      <div class="td-mobile-close">
       [ahref]
       
      </div>
     </div>
     <div class="td-login-form-wrap">
      <div class="td-login-panel-title">
       <span>
        Welcome!
       </span>
       Log into your account
      </div>
      <div class="td_display_err">
      </div>
      <div class="td-login-inputs">
       <label>
        your username
       </label>
      </div>
      <div class="td-login-inputs">
       <label>
        your password
       </label>
      </div>
      <div class="td-login-info-text">
       [ahref]
       
      </div>
     </div>
    </div>
    <div class="td-login-animation td-login-hide-mob" id="td-forgot-pass-mob">
     <div class="td-forgot-pass-close">
      <a class="td-back-button" href="#">
       <i class="td-icon-read-down">
       </i>
      </a>
      <div class="td-login-title">
       Password recovery
      </div>
     </div>
     <div class="td-login-form-wrap">
      <div class="td-login-panel-title">
       Recover your password
      </div>
      <div class="td_display_err">
      </div>
      <div class="td-login-inputs">
       <label>
        your email
       </label>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="td-search-background">
  </div>
  <div class="td-search-wrap-mob">
   <div aria-labelledby="td-header-search-button" class="td-drop-down-search">
    <form action="/" class="td-search-form" method="get">
     <div class="td-search-close">
      <a href="#">
       <i class="td-icon-close-mobile">
       </i>
      </a>
     </div>
     <div class="td-search-input" role="search">
      <span>
       Search
      </span>
     </div>
    </form>
    <div id="td-aj-search-mob">
    </div>
   </div>
  </div>
  <div class="td-theme-wrap" id="td-outer-wrap">
   <div class="tdc-header-wrap">
    <div class="td-header-wrap td-header-style-1">
     <div class="td-header-top-menu-full td-container-wrap">
      <div class="td-container td-header-row td-header-top-menu">
       <div class="white-popup-block mfp-hide mfp-with-anim" id="login-form">
        <div class="td-login-wrap">
         [linkx]
         
         <div class="td-login-form-div td-display-block" id="td-login-div">
          <div class="td-login-panel-title">
           Sign in[area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][ahref][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][ahref][area1][keywordx][pkeyx][linkx][area1][keywordx][area1][keywordx]
          </div>
          <div class="td-login-panel-descr">
           Welcome! Log into your account
          </div>
          <div class="td_display_err">
          </div>
          <div class="td-login-inputs">
           <label>
            your username
           </label>
          </div>
          <div class="td-login-inputs">
           <label>
            your password
           </label>
          </div>
          <div class="td-login-info-text">
           [linkx]
           
          </div>
         </div>
         <div class="td-login-form-div td-display-none" id="td-forgot-pass-div">
          <div class="td-login-panel-title">
           Password recovery
          </div>
          <div class="td-login-panel-descr">
           Recover your password
          </div>
          <div class="td_display_err">
          </div>
          <div class="td-login-inputs">
           <label>
            your email
           </label>
          </div>
          <div class="td-login-info-text">
           A password will be e-mailed to you.
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="td-banner-wrap-full td-logo-wrap-full td-container-wrap">
      <div class="td-container td-header-row td-header-header">
       <div class="td-header-sp-logo">
        <a class="td-main-logo" href="/">
         <span class="td-visual-hidden">
          English
         </span>
        </a>
       </div>
       <div class="td-header-sp-recs">
        <div class="td-header-rec-wrap">
         <div class="td-g-rec td-g-rec-id-header td_uid_1_5d527ff0a9ae2_rand td_block_template_1">
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="td-header-menu-wrap-full td-container-wrap">
      <div class="td-header-menu-wrap td-header-gradient">
       <div class="td-container td-header-row td-header-main-menu">
        <div id="td-header-menu" role="navigation">
         <div id="td-top-mobile-toggle">
          <a href="#">
           <i class="td-icon-font td-icon-mobile">
           </i>
          </a>
         </div>
         <div class="td-main-menu-logo td-logo-in-header">
          <a class="td-mobile-logo td-sticky-header" href="/">
          </a>
          [ahref]
          
         </div>
         <div class="menu-td-demo-header-menu-container">
          <ul class="sf-menu" id="menu-td-demo-header-menu-1">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-first td-menu-item td-normal-menu menu-item-2299">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-281">
            <a href="/category/%EC%98%A4%EB%8A%98%EC%9D%98-%EC%83%9D%ED%99%9C%EC%98%81%EC%96%B4/">
             오늘의 생활영어
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-2387">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-278">
            <a href="/category/%ED%95%B4%EC%99%B8-%EC%9D%B8%EA%B8%B0%EC%98%81%EC%83%81/">
             해외 인기영상
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-2236">
            <a href="m">
             미주중앙일보 홈
            </a>
           </li>
          </ul>
         </div>
        </div>
        <div class="header-search-wrap">
         <div class="td-search-btns-wrap">
          [linkx]
          
          <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="td-header-search-button-mob">
           <i class="td-icon-search">
           </i>
          </a>
         </div>
         <div aria-labelledby="td-header-search-button" class="td-drop-down-search">
          <form action="/" class="td-search-form" method="get">
           <div class="td-head-form-search-wrap" role="search">
           </div>
          </form>
          <div id="td-aj-search">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <article class="td-post-template-3 post-3293 post type-post status-publish format-standard has-post-thumbnail category-20 tag-22 tag-31 td-container-wrap" id="post-3293" itemscope="" itemtype="http://schema.org/Article">
    <div class="td-post-header td-container">
     <div class="td-crumb-container">
      <div class="entry-crumbs">
       <span>
        <a class="entry-crumb" href="/" title="">
         Home
        </a>
       </span>
       <i class="td-icon-right td-bread-sep">
       </i>
       <span>
        <a class="entry-crumb" href="/category/%ec%98%a4%eb%8a%98%ec%9d%98-%ec%83%9d%ed%99%9c%ec%98%81%ec%96%b4/" title="View all posts in 오늘의 생활영어">
         오늘의 생활영어
        </a>
       </span>
       <i class="td-icon-right td-bread-sep td-bred-no-url-last">
       </i>
       <span class="td-bred-no-url-last">
        미국에서 살찌지 않는 방법은?
       </span>
      </div>
     </div>
     <div class="td-post-header-holder td-image-gradient">
      <div class="td-post-featured-image">
       <a data-caption="" href="/wp-content/uploads/2019/07/Copy-of-Featured-Image-2.png">
       </a>
      </div>
      <header class="td-post-title">
       <ul class="td-category">
        <li class="entry-category">
         [linkx]
         
        </li>
       </ul>
       <h1 class="entry-title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
       <div class="td-module-meta-info">
        <li>[area1][mkey1]</li>[area1][keywordx]<li>[area1][mkey1]</li><li>[linkx]</li>
       </div>
      </header>
     </div>
    </div>
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span8 td-main-content" role="main">
       <div class="td-ss-main-content">
        <div class="td-post-sharing-top">
         <div class="td-post-sharing td-ps-bg td-ps-notext td-post-sharing-style1" id="td_social_sharing_article_top">
          <div class="td-post-sharing-visible">
           [linkx]
           
           <a class="td-social-sharing-button td-social-sharing-button-js td-social-network td-social-twitter" href="/intent/tweet?text=%EB%AF%B8%EA%B5%AD%EC%97%90%EC%84%9C+%EC%82%B4%EC%B0%8C%EC%A7%80+%EC%95%8A%EB%8A%94+%EB%B0%A9%EB%B2%95%EC%9D%80%3F&amp;url=http%3A%2F%2Fenglish.koreadaily.com%2F%25eb%25af%25b8%25ea%25b5%25ad%25ec%2597%2590%25ec%2584%259c-%25ec%2582%25b4%25ec%25b0%258c%25ec%25a7%2580-%25ec%2595%258a%25eb%258a%2594-%25eb%25b0%25a9%25eb%25b2%2595%25ec%259d%2580%2F&amp;via=English">
            <div class="td-social-but-icon">
             <i class="td-icon-twitter">
             </i>
            </div>
            <div class="td-social-but-text">
             Twitter
            </div>
           </a>
           [ahref]
           
           <a class="td-social-sharing-button td-social-sharing-button-js td-social-network td-social-whatsapp" href="/%eb%af%b8%ea%b5%ad%ec%97%90%ec%84%9c-%ec%82%b4%ec%b0%8c%ec%a7%80-%ec%95%8a%eb%8a%94-%eb%b0%a9%eb%b2%95%ec%9d%80/">
            <div class="td-social-but-icon">
             <i class="td-icon-whatsapp">
             </i>
            </div>
            <div class="td-social-but-text">
             WhatsApp
            </div>
           </a>
          </div>
          <div class="td-social-sharing-hidden">
           <ul class="td-pulldown-filter-list">
           </ul>
           <a class="td-social-sharing-button td-social-handler td-social-expand-tabs" data-block-uid="td_social_sharing_article_top" href="#">
            <div class="td-social-but-icon">
             <i class="td-icon-plus td-social-expand-tabs-icon">
             </i>
            </div>
           </a>
          </div>
         </div>
        </div>
        <div class="td-post-content tagdiv-type">
         <p>
          <iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="392" src="https://www.youtube.com/embed/ZKmzaBzUVd8?feature=oembed" width="696">
          </iframe>
         </p>
         <p>
          어딜 가나 달고 기름진 음식 천지인 미국! 이곳에서 건강한 체중을 유지하며 살아갈 방법, 과연 무엇일까요? 미국에서 생활하는 유튜버의 조언을 참고하여 유용한 생활 팁과 영어 표현을 동시에 배워볼까요?<li>[pkeyx]</li>[area1][keywordx]<li>[pkeyx]</li>[pkeyx]
         </p>
         <p>
         </p>
         <p>
          <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>[area1][keywordx]
         </p>
         <p>
          <strong>
           During the weekdays
          </strong>
          , we eat pretty much
          <strong>
           at work
          </strong>
          , right?
          <br/>
          <span style="text-decoration: underline;">
           주중에는
          </span>
          <span style="text-decoration: underline;">
           회사에서
          </span>
          밥을 많이 먹잖아?
         </p>
         <p>
          Usually, it’s pasta, ribs, chicken wings, orange chicken…
          <strong>
           those kinda stuffs
          </strong>
          .
          <br/>
          대체로는 파스타, 립, 치킨윙, 오렌지 치킨
          <span style="text-decoration: underline;">
           같은 것들이야
          </span>
          .
         </p>
         <p>
          <strong>
           I’d end up<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>[area1][mkey1]
          </strong>
          eating pizza, or some corndog, then I’d feel bad, I’d worry I’m gonna get fat.
          <br/>
          <span style="text-decoration: underline;">
           결국
          </span>
          피자나 핫도그 같은 걸 먹
          <span style="text-decoration: underline;">
           게 되는데<li>[area1][keywordx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li><li>[area1][keywordx]</li>
          </span>
          그럴 때면 살 찌겠다는 걱정에 기분이 안좋아지지.
         </p>
         <p>
          That’s a lot of energy and
          <strong>
           time-consuming
          </strong>
          .
          <br/>
          에너지랑
          <span style="text-decoration: underline;">
           시간을 소모
          </span>
          하게 되는 거야.
         </p>
         <p>
          I wanted to develop a food routine that I can make it
          <strong>
           sustainable
          </strong>
          , that works for my body, that works for me.
          <br/>
          내 몸에 잘 맞고 오래
          <span style="text-decoration: underline;">
           지속할 수 있는
          </span>
          식사 습관을 만들고 싶었어.
         </p>
         <p>
          <strong>
           I’m not saying that
          </strong>
          we should kill all the joy of eating.
          <br/>
          식사의 즐거움을 아예 없애버리
          <span style="text-decoration: underline;">
           자는 게 아니야
          </span>
          .
         </p>
         <p>
          I really
          <strong>
           wanted to try it and see if it works
          </strong>
          for my body.
          <br/>
          내가
          <span style="text-decoration: underline;">
           직접 먹어보고 실제로
          </span>
          내 몸에
          <span style="text-decoration: underline;">
           맞는지 보고 싶었어
          </span>
          .
         </p>
         <p>
          I
          <strong>
           personally cannot stand
          </strong>
          that scent of celery.
          <br/>
          <span style="text-decoration: underline;">
           개인적으로
          </span>
          난 샐러리 특유의 향을
          <span style="text-decoration: underline;">
           못견디겠어
          </span>
          .
         </p>
         <p>
          But I can eat brussel sprouts
          <strong>
           three times a day.
          </strong>
          <br/>
          그치만 방울 양배추는
          <span style="text-decoration: underline;">
           하루에 세 번도
          </span>
          먹을 수 있거든.
         </p>
         <p>
          It’s
          <strong>
           super easy
          </strong>
          to make.
          <br/>
          만들기
          <span style="text-decoration: underline;">
           너무 쉬워.
          </span>
         </p>
         <p>
          So you can
          <strong>
           notice a difference
          </strong>
          in one week?
          <br/>
          한 주만에
          <span style="text-decoration: underline;">
           변화가 느껴진다
          </span>
          는 거야?
         </p>
         <p>
          <strong>
           I cannot really tell
          </strong>
          , because it’s been only a week.
          <br/>
          아직 한 주 밖에 안돼서
          <[keywordx]>
          </[keywordx]>
         </p>
         <p>
          <strong>
           It can be anything.
          </strong>
          <br/>
          <span style="text-decoration: underline;">
           아닐 수도 있지
          </span>
          (이럴 수도 있고 저럴 수도 있지).
         </p>
         <p>
          Muscle mass got dropped a bit, so I
          <strong>
           should work on that.
          </strong>
          <br/>
          근육량도 조금 떨어져서
          <span style="text-decoration: underline;">
           신경 좀 써야겠네요.
          </span>
         </p>
         <p>
          <strong>
           We’ll see
          </strong>
          how that changes.
          <br/>
          어떤 변화가 있을지
          <span style="text-decoration: underline;">
           두고 볼게.
          </span>
         </p>
         <p>
          <strong>
           I didn’t mean to cut off
          </strong>
          any sugar or flour.
          <br/>
          딱히 설탕이나 밀가루를
          <span style="text-decoration: underline;">
           끊을 생각은 안했거든.
          </span>
         </p>
         <p>
          Both of us have
          <strong>
           a sweet tooth
          </strong>
          and we’re
          <strong>
           big fans of
          </strong>
          ice cream.
          <br/>
          우리 둘 다
          <span style="text-decoration: underline;">
           단 걸 좋아하고
          </span>
          아이스크림도
          <span style="text-decoration: underline;">
           정말 좋아하거든요.
          </span>
         </p>
         <p>
          I’ll try one more week and
          <strong>
           update
          </strong>
          you guys
          <strong>
           on that.
          </strong>
          <br/>
          한 주 더 해보고 어떤지
          <span style="text-decoration: underline;">
           알려 드릴게요.
          </span>
         </p>
         <p>
          <strong>
           One time
          </strong>
          , I
          <strong>
           cut off
          </strong>
          all the sugar for some time.
          <br/>
          <span style="text-decoration: underline;">
           예전에
          </span>
          한 번 설탕을 아예
          <span style="text-decoration: underline;">
           끊어 본 적
          </span>
          이 있어요.
         </p>
         <p>
          <strong>
           The goal here is
          </strong>
          not eating added sugar.
          <br/>
          첨가 설탕을 안 먹는 게
          <span style="text-decoration: underline;">
           목표니까요
          </span>
          .
         </p>
         <p>
          <strong>
           Let’s see if I can make it.
          </strong>
          <br/>
          <span style="text-decoration: underline;">
           <h2>
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h2>
           제가 해낼지 두고 보자구요.
          </span>
         </p>
         <div class="td-a-rec td-a-rec-id-content_bottom td-rec-hide-on-p td_uid_2_5d527ff0af5c3_rand td_block_template_1">
          <div id="div-gpt-ad-1413928217157-6" style="width:728px; height:90px;">
          </div>
         </div>
        </div>
        <footer>
         <div class="td-post-source-tags">
          <ul class="td-tags td-post-small-box clearfix">
           <li>
            <span>
             TAGS
            </span>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <div class="td-post-sharing-bottom">
          <div class="td-post-sharing-classic">
           <iframe frameborder="0" src="http://www.facebook.com/plugins/like.php?href=http://english.koreadaily.com/%eb%af%b8%ea%b5%ad%ec%97%90%ec%84%9c-%ec%82%b4%ec%b0%8c%ec%a7%80-%ec%95%8a%eb%8a%94-%eb%b0%a9%eb%b2%95%ec%9d%80/&amp;layout=button_count&amp;show_faces=false&amp;width=105&amp;action=like&amp;colorscheme=light&amp;height=21" style="border:none; overflow:hidden; width:105px; height:21px; background-color:transparent;">
           </iframe>
          </div>
          <div class="td-post-sharing td-ps-bg td-ps-notext td-post-sharing-style1" id="td_social_sharing_article_bottom">
           <div class="td-post-sharing-visible">
            <a class="td-social-sharing-button td-social-sharing-button-js td-social-network td-social-facebook" href="/sharer.php?u=http%3A%2F%2Fenglish.koreadaily.com%2F%25eb%25af%25b8%25ea%25b5%25ad%25ec%2597%2590%25ec%2584%259c-%25ec%2582%25b4%25ec%25b0%258c%25ec%25a7%2580-%25ec%2595%258a%25eb%258a%2594-%25eb%25b0%25a9%25eb%25b2%2595%25ec%259d%2580%2F">
             <div class="td-social-but-icon">
              <i class="td-icon-facebook">
              </i>
             </div>
             <div class="td-social-but-text">
              Facebook
             </div>
            </a>
            [ahref]
            
            [linkx]
            
            [ahref]
            
           </div>
           <div class="td-social-sharing-hidden">
            <ul class="td-pulldown-filter-list">
            </ul>
            <a class="td-social-sharing-button td-social-handler td-social-expand-tabs" data-block-uid="td_social_sharing_article_bottom" href="#">
             <div class="td-social-but-icon">
              <i class="td-icon-plus td-social-expand-tabs-icon">
              </i>
             </div>
            </a>
           </div>
          </div>
         </div>
         <div class="td-block-row td-post-next-prev">
          <div class="td-block-span6 td-post-prev-post">
           <div class="td-post-next-prev-content">
            <span>
             Previous article
            </span>
            [linkx]
            
           </div>
          </div>
          <div class="td-next-prev-separator">
          </div>
          <div class="td-block-span6 td-post-next-post">
           <div class="td-post-next-prev-content">
            <span>
             Next article
            </span>
            [linkx]
            
           </div>
          </div>
         </div>
         <div class="td-author-name vcard author" style="display: none">
          <span class="fn">
           [ahref]
           
          </span>
         </div>
         <span class="td-page-meta" itemprop="author" itemscope="" itemtype="https://schema.org/Person">
          <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
         </span>
         <meta content="2019-07-17T05:05:13+00:00" itemprop="datePublished"/>
         <meta content="2019-07-17T05:05:13-07:00" itemprop="dateModified"/>
         <meta itemid="http://english.koreadaily.com/%eb%af%b8%ea%b5%ad%ec%97%90%ec%84%9c-%ec%82%b4%ec%b0%8c%ec%a7%80-%ec%95%8a%eb%8a%94-%eb%b0%a9%eb%b2%95%ec%9d%80/" itemprop="mainEntityOfPage" itemscope="" itemtype="https://schema.org/WebPage">
          <span class="td-page-meta" itemprop="publisher" itemscope="" itemtype="https://schema.org/Organization">
           <span class="td-page-meta" itemprop="logo" itemscope="" itemtype="https://schema.org/ImageObject">
            <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
           </span>
           <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
          </span>
          <meta content="미국에서 살찌지 않는 방법은?" itemprop="headline "/>
          <span class="td-page-meta" itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
           <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
           <meta content="1000" itemprop="width"/>
           <meta content="750" itemprop="height"/>
          </span>
         </meta>
        </footer>
        <div class="td_block_wrap td_block_related_posts td_uid_3_5d527ff0b0b6b_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_3_5d527ff0b0b6b">
         <h4 class="td-related-title td-block-title">
          <a class="td-related-left td-cur-simple-item" data-td_block_id="td_uid_3_5d527ff0b0b6b" data-td_filter_value="" href="#" id="td_uid_4_5d527ff0b6807">
           RELATED ARTICLES
          </a>
          <a class="td-related-right" data-td_block_id="td_uid_3_5d527ff0b0b6b" data-td_filter_value="td_related_more_from_author" href="#" id="td_uid_5_5d527ff0b6812">
           MORE FROM AUTHOR
          </a>
         </h4>
         <div class="td_block_inner" id="td_uid_3_5d527ff0b0b6b">
          <div class="td-related-row">
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [linkx]
               
              </div>
              <a class="td-post-category" href="/category/%ec%98%a4%eb%8a%98%ec%9d%98-%ec%83%9d%ed%99%9c%ec%98%81%ec%96%b4/">
               오늘의 생활영어
              </a>
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               <a class="td-image-wrap" href="/youre-good-%ec%a0%95%ed%99%95%ed%95%9c-%ec%9d%98%eb%af%b8-%eb%b0%b0%ec%9a%b0%ea%b8%b0/" rel="bookmark" title="‘You’re good’ 정확한 의미 배우기">
               </a>
              </div>
              <a class="td-post-category" href="/category/%ec%98%a4%eb%8a%98%ec%9d%98-%ec%83%9d%ed%99%9c%ec%98%81%ec%96%b4/">
               오늘의 생활영어
              </a>
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li>[area1][keywordx]<li>[linkx]</li>
           </div>
          </div>
         </div>
         <div class="td-next-prev-wrap">
          [linkx]
           <li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[linkx]<li>[ahref]</li>
          
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
      <div class="td-pb-span4 td-main-sidebar" role="complementary">
       <div class="td-ss-main-sidebar">
        <div class="td-g-rec td-g-rec-id-sidebar td_uid_6_5d527ff0b9f76_rand td_block_template_1">
        </div>
        <div class="td_block_wrap td_block_7 td_block_widget td_uid_7_5d527ff0ba6f6_rand td_with_ajax_pagination td-pb-border-top td_block_template_1 td-column-1 td_block_padding" data-td-block-uid="td_uid_7_5d527ff0ba6f6">
         <div class="td-block-title-wrap">
          <h4 class="block-title td-block-title">
           <span class="td-pulldown-size">
            MOST POPULAR
           </span>
          </h4>
         </div>
         <div class="td_block_inner" id="td_uid_7_5d527ff0ba6f6">
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             <a class="td-image-wrap" href="/im-going-to-home%ec%9d%b4-%ec%99%9c-%ed%8b%80%eb%a6%b4%ea%b9%8c%ec%9a%94/" rel="bookmark" title="‘I’m going to home’이 왜 틀릴까요?">
              <span class="td-video-play-ico td-video-small">
              </span>
             </a>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
              <span class="td-post-date">
               <time class="entry-date updated td-module-date" datetime="2016-08-18T10:11:59+00:00">
                2016-08-18
               </time>
              </span>
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             [ahref]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
              <span class="td-post-date">
               <time class="entry-date updated td-module-date" datetime="2019-03-25T15:14:06+00:00">
                2019-03-25[linkx]<li>[pkeyx]</li><li>[area1][mkey1]</li>
               </time>
              </span>
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             <a class="td-image-wrap" href="/%ec%95%8c%eb%8b%a4%eb%a5%bc-%eb%a7%90%ed%95%98%eb%8a%94-9%ea%b0%80%ec%a7%80-%ed%91%9c%ed%98%84/" rel="bookmark" title="‘알다’를 말하는 9가지 표현">
             </a>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
              <span class="td-post-date">
               <time class="entry-date updated td-module-date" datetime="2019-05-07T05:43:31+00:00">
                2019-05-07
               </time>
              </span>
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             [linkx]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
              <span class="td-post-date">
               <time class="entry-date updated td-module-date" datetime="2019-08-06T19:23:22+00:00">
                2019-08-06
               </time>
              </span>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="td-load-more-wrap">
          [ahref]
           [linkx]<li>[ahref]</li>[area1][mkey1][linkx]<li>[ahref]</li>
          
         </div>
        </div>
        <div class="td-g-rec td-g-rec-id-custom_ad_1 td_uid_8_5d527ff0c15d5_rand td_block_template_1">
        </div>
       </div>
      </div>
     </div>
    </div>
   </article>
   <div class="td-sub-footer-container td-container-wrap">
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span td-sub-footer-menu">
       <div class="menu-td-demo-footer-menu-container">
        <ul class="td-subfooter-menu" id="menu-td-demo-footer-menu">
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-first td-menu-item td-normal-menu menu-item-36" id="menu-item-36">
          <a href="/policy/terms.html">
           Terms of Use
          </a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-37" id="menu-item-37">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-38" id="menu-item-38">
          <a href="/etc/customer/ad.asp">
           Advertisement[linkx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][ahref][pkeyx][area1][mkey1][area1][keywordx][area1][mkey1][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][pkeyx][ahref]<li>[ahref]</li><li>[ahref]</li><li>[pkeyx]</li>[area1][mkey1]
          </a>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-39" id="menu-item-39">
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="td-pb-span td-sub-footer-copy">
       © Copyright - The Korea Daily
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0043
  </b>
 </body>
</html>
|<---