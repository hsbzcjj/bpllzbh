--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="zh-Hant">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.17" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer">
   <li>[linkx]</li><li>[linkx]</li>[area1][keywordx][area1][keywordx]<li>[pkeyx]</li>
  </meta>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-자다 rootpage-자다 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [linkx]
   
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="zh-Hant">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     維基詞典，自由的多語言詞典
    </div>
    <div dir="ltr" id="contentSub" lang="zh-Hant">
    </div>
    <div id="jump-to-nav">
    </div>
    [linkx]
    
    [ahref]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="zh-Hant">
     <div class="mw-parser-output">
      <h2>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <dl>
       <dd>
        <span style="padding-right: .5em; color: #8F390A; font-weight: bold;" title="漢字詞">
         <b>
          漢字詞
         </b>
        </span>
        ： 〈
        <span style="width: 30px; border: 1px solid #CEDFF2; background: #F5FAFF; font-size:110%; cursor:help;" title="对应汉字">
         <span lang="ko">
          [ahref]
          
         </span>
        </span>
        〉
       </dd>
      </dl>
      <div lang="ko" style="font-size:160%;margin: 0 1em .5em 1.6em;border:1px solid black;display:inline-block;height:38px;padding:2px;text-align:center;">
       <p style="margin:0px;padding:0px;">
        <span style="font-family:batang,unbatang,serif">
         <a href="/wiki/%EC%9E%90" title="자">
          자
         </a>
         [linkx]
         
        </span>
       </p>
      </div>
      <table style="margin: 0 1em .5em 1.6em;">
       <tbody>
        <tr>
         <td>
          <table cellpadding="1" style="border: 1px solid #DFDFDF; line-height: 14pt;">
           <tbody>
            <li>[linkx]</li>[pkeyx][area1][keywordx]
           </tbody>
          </table>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx][pkeyx][linkx]<li>[pkeyx]</li>
      </p>
      <hr/>
      <p>
       <span style="padding-right: .5em; color: #8F390A; font-weight: bold;" title="動詞">
        <b>
         〔動〕
        </b>
       </span>
       名詞形：
       <b>
        [linkx]
        
       </b>
       。 使役形：
       <b>
        [linkx]
        
       </b>
       。 敬語：
       <b>
        [ahref]
        
       </b>
       。
      </p>
      <ol>
       <li>
        睡覺，睡
        <dl>
         <dd>
          近義詞：
          [ahref]
          
          ，
          [ahref]
          
          (就寢)하다
         </dd>
         <dd>
          反義詞：
          [linkx]
          
         </dd>
         <dd>
          派生詞：
          [linkx]
          
          <dl>
           <dd>
            [ahref]
            
            [linkx]
            
            잤다　　睡了一覺
           </dd>
           <dd>
            잘
            <a href="/wiki/%EC%88%98" title="수">
             수
            </a>
            [ahref]
            
            睡不着覺
           </dd>
           <dd>
            [linkx]
            
            자다　　舒服地睡覺
           </dd>
           <dd>
            그는 자고 있어요.　　他睡覺呢。
           </dd>
           <dd>
            <a href="/wiki/%EC%9D%BC%EC%B0%8D" title="일찍">
             일찍
            </a>
            자고
            [ahref]
            
            [ahref]
            
            早睡早起
           </dd>
           <dd>
            [ahref]
            
            자지
            [ahref]
            
            高興得睡不着覺
           </dd>
          </dl>
         </dd>
        </dl>
       </li>
       <li>
        停，平息，平靜
        <dl>
         <dd>
          <dl>
           <dd>
            [linkx]
            
            이 자다　　風停了
           </dd>
          </dl>
         </dd>
        </dl>
       </li>
      </ol>
      <p>
       <br/>
      </p>
      <table align="left" cellpadding="2" cellspacing="1" class="wikitable mw-collapsible mw-collapsed" style="width:100%; border:1px solid #AAAAAA; color:rgb(0%,0%,30%); text-align:center">
       <tbody>
        <tr>
         <th colspan="5" style="background:#ccccff; font-size:105%">
          朝鮮語動詞
          <span style="font-size:105%">
           <span class="Kore KO" lang="ko">
            <span style="color: black;border: 1px solid black;">
             <tt>
              자다
             </tt>
            </span>
           </span>
          </span>
          <small>
           (
           <i>
            jada
           </i>
           )
          </small>
          活用形舉隅
         </th>
        </tr>
        [linkx]
        
        <tr>
         <td colspan="5" style="background:#C0C0C0">
          <b>
           終結詞尾
          </b>
         </td>
        </tr>
        <tr style="background:#E0E0E0">
         <td style="width:8em">
         </td>
         <th>
          卑階（
          <span class="Kore KO" lang="ko">
           [ahref]
           
          </span>
          ）
         </th>
         <th>
          不定階（
          <span class="Kore KO" lang="ko">
           [linkx]
           
          </span>
          ）
         </th>
         <th>
          准尊敬階（
          <span class="Kore KO" lang="ko">
           [ahref]
           
          </span>
          ）
         </th>
         <th>
          尊敬階（
          <span class="Kore KO" lang="ko">
           [linkx]
           
          </span>
          ）
         </th>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          陳述式
         </th>
         <td>
          <span style="cursor:help" title="janda">
           <span class="Kore KO" lang="ko">
            잔다
           </span>
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="jatda">
            <span class="Kore KO" lang="ko">
             잤다
            </span>
           </span>
          </p>
         </td>
         <td>
          <span style="cursor:help" title="ja">
           <span class="Kore KO" lang="ko">
            자
           </span>
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="jasseo">
            <span class="Kore KO" lang="ko">
             잤어
            </span>
           </span>
          </p>
         </td>
         <td>
          <span style="cursor:help" title="jayo">
           <span class="Kore KO" lang="ko">
            자요
           </span>
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="jasseoyo">
            <span class="Kore KO" lang="ko">
             잤어요
            </span>
           </span>
          </p>
         </td>
         <td>
          <span style="cursor:help" title="jamnida">
           <span class="Kore KO" lang="ko">
            잡니다
           </span>
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="jasseumnida">
            <span class="Kore KO" lang="ko">
             잤습니다
            </span>
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          疑問式
         </th>
         <td>
          <span style="cursor:help" title="janeunya">
           자느냐[linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][linkx][area1][mkey1][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][mkey1][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="janneunya">
            <span class="Kore KO" lang="ko">
             잤느냐
            </span>
           </span>
          </p>
         </td>
         <td>
          <span style="cursor:help" title="ja">
           <span class="Kore KO" lang="ko">
            자
           </span>
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="jasseo">
            <span class="Kore KO" lang="ko">
             잤어
            </span>
           </span>
          </p>
         </td>
         <td>
          <span style="cursor:help" title="jayo">
           <span class="Kore KO" lang="ko">
            자요
           </span>
          </span>
          <p>
           <small>
            (過去)[ahref][area1][keywordx][linkx]<li>[linkx]</li>
           </small>
           <span style="cursor:help" title="jasseoyo">
            <span class="Kore KO" lang="ko">
             잤어요
            </span>
           </span>
          </p>
         </td>
         <td>
          <span style="cursor:help" title="jamnikka">
           <span class="Kore KO" lang="ko">
            잡니까
           </span>
          </span>
          <p>
           <small>
            (過去)
           </small>
           <span style="cursor:help" title="jasseumnikka">
            <span class="Kore KO" lang="ko">
             잤습니까
            </span>
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          共動式
         </th>
         <td>
          <span style="cursor:help" title="jaja">
           <span class="Kore KO" lang="ko">
            자자
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="ja">
           <span class="Kore KO" lang="ko">
            자
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jayo">
           자요[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx]
          </span>
         </td>
         <td>
          <span style="cursor:help" title="japsida">
           <span class="Kore KO" lang="ko">
            잡시다
           </span>
          </span>
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          命令式
         </th>
         <td>
          <span style="cursor:help" title="jara">
           <span class="Kore KO" lang="ko">
            자라
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="ja">
           <span class="Kore KO" lang="ko">
            자
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jayo">
           <span class="Kore KO" lang="ko">
            자요
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="japsio">
           <span class="Kore KO" lang="ko">
            잡시오
           </span>
          </span>
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          定言式
         </th>
         <td>
          <span style="cursor:help" title="jagetda">
           <span class="Kore KO" lang="ko">
            자겠다
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jagesseo">
           <span class="Kore KO" lang="ko">
            자겠어
           </span>
          </span>
         </td>
         <td>
          <li>[linkx]</li><li>[area1][mkey1]</li>[ahref]
         </td>
         <td>
          <span style="cursor:help" title="jagesseumnida">
           <span class="Kore KO" lang="ko">
            자겠습니다
           </span>
          </span>
         </td>
        </tr>
        <tr>
         <td align="center" colspan="5" style="background:#C0C0C0">
          [linkx]<li>[ahref]</li>[area1][mkey1]
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          表原因
         </th>
         <td>
          <span style="cursor:help" title="ja">
           <span class="Kore KO" lang="ko">
            자
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jaseo">
           <span class="Kore KO" lang="ko">
            자서
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jani">
           자니[area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[pkeyx][linkx]
          </span>
         </td>
         <td>
          <span style="cursor:help" title="janikka">
           <span class="Kore KO" lang="ko">
            자니까
           </span>
          </span>
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          表對立
         </th>
         <td>
          <li>[area1][keywordx]</li>[area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
         </td>
         <td>
          <span style="cursor:help" title="janeunde">
           <span class="Kore KO" lang="ko">
            자는데
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jadeoni">
           <span class="Kore KO" lang="ko">
            자더니
           </span>
          </span>
         </td>
         <td>
          <b>
           表平列
          </b>
          <br/>
          <span style="cursor:help" title="jago">
           <span class="Kore KO" lang="ko">
            자고
           </span>
          </span>
         </td>
        </tr>
        <tr>
         <th style="background:#E0E0E0">
          表條件
         </th>
         <td>
          <span style="cursor:help" title="jamyeon">
           <span class="Kore KO" lang="ko">
            자면
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jaya">
           <span class="Kore KO" lang="ko">
            자야
           </span>
          </span>
         </td>
         <td>
         </td>
         <td>
          <b>
           表意圖
          </b>
          <br/>
          <span style="cursor:help" title="jaryeogo">
           <span class="Kore KO" lang="ko">
            자려고
           </span>
          </span>
         </td>
        </tr>
        <tr>
         <td align="center" colspan="5" style="background:#C0C0C0">
          <b>
           其他詞形
          </b>
         </td>
        </tr>
        <tr>
         <th colspan="2" style="background:#E0E0E0">
          名詞形
         </th>
         <td>
          <span style="cursor:help" title="jam">
           <span class="Kore KO" lang="ko">
            잠
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jagi">
           <span class="Kore KO" lang="ko">
            자기
           </span>
          </span>
         </td>
         <td>
         </td>
        </tr>
        <tr>
         <th colspan="2" style="background:#E0E0E0">
          過去時名詞形
         </th>
         <td>
          <span style="cursor:help" title="jasseum">
           <span class="Kore KO" lang="ko">
            잤음
           </span>
          </span>
         </td>
         <td>
          <span style="cursor:help" title="jatgi">
           <span class="Kore KO" lang="ko">
            잤기
           </span>
          </span>
         </td>
         <td>
         </td>
        </tr>
        <tr>
         <th colspan="2" style="background:#E0E0E0">
          定語形
         </th>
         <td>
          <small>
           (過去)
          </small>
          <span style="cursor:help" title="jan">
           <span class="Kore KO" lang="ko">
            잔
           </span>
          </span>
         </td>
         <td>
          <small>
           (現在)
          </small>
          <span style="cursor:help" title="janeun">
           <span class="Kore KO" lang="ko">
            자는
           </span>
          </span>
         </td>
         <td>
          <small>
           (將來)
          </small>
          <span style="cursor:help" title="jal">
           <span class="Kore KO" lang="ko">
            잘
           </span>
          </span>
         </td>
        </tr>
        <tr align="center" style="background:#C0C0C0; font-size:smaller">
         <td colspan="5">
          敬語形：
          <span class="Kore KO" lang="ko">
           주무시다
          </span>
          （
          <i>
           jumusida
          </i>
          ）
         </td>
        </tr>
       </tbody>
      </table>
      <div style="clear: both; height: 1em">
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     取自「
     <a dir="ltr" href="/w/index.php?title=자다&amp;oldid=5365574">
      https://zh.wiktionary.org/w/index.php?title=자다&amp;oldid=5365574
     </a>
     」
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [linkx]
      
      ：
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <ul dir="ltr" lang="zh-Hant">
      <li id="pt-anonuserpage">
       尚未登入[linkx][area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
      </li>
      <li id="pt-anontalk">
       [ahref]
       
      </li>
      <li id="pt-anoncontribs">
       <a accesskey="y" href="/wiki/Special:%E6%88%91%E7%9A%84%E8%B4%A1%E7%8C%AE" title="由此 IP 位址編輯的清單[y]">
        貢獻
       </a>
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul dir="ltr" lang="zh-Hant">
       <li class="selected" id="ca-nstab-main">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         <a accesskey="t" href="/w/index.php?title=Talk:%EC%9E%90%EB%8B%A4&amp;action=edit&amp;redlink=1" rel="discussion" title="有關頁面內容的討論（頁面不存在）[t]">
          討論
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu" id="p-variants" role="navigation">
      <li>[area1][mkey1]</li>[pkeyx]<li>[pkeyx]</li>[ahref]
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul dir="ltr" lang="zh-Hant">
       <li class="collapsible selected" id="ca-view">
        [linkx][area1][keywordx][ahref][pkeyx][ahref][ahref][area1][mkey1][ahref][linkx][linkx][area1][keywordx][linkx][pkeyx][area1][mkey1][area1][mkey1][pkeyx][linkx][linkx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][ahref]
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul class="menu" dir="ltr" lang="zh-Hant">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3 dir="ltr" lang="zh-Hant">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [linkx]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 dir="ltr" id="p-navigation-label" lang="zh-Hant">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpagedisplay">
        [ahref]
        
       </li>
       <li id="n-portal">
        [linkx]
        
       </li>
       <li id="n-recentchanges">
        [linkx]
        
       </li>
       <li id="n-randompage">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-help-label" class="portal" id="p-help" role="navigation">
     <h3 dir="ltr" id="p-help-label" lang="zh-Hant">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="n-help">
        [ahref]
        
       </li>
       <li id="n-Beerparlour">
        [ahref]
        
       </li>
       <li id="n-Tearoom">
        <a href="/wiki/Wiktionary:%E8%8C%B6%E5%AE%A4">
         茶室
        </a>
       </li>
       <li id="n-policy">
        <a href="/wiki/Wiktionary:%E6%96%B9%E9%92%88%E4%B8%8E%E6%8C%87%E5%BC%95">
         方針與指引
        </a>
       </li>
       <li id="n-wanted-text">
        [linkx]
        
       </li>
       <li id="n-allpages">
        [ahref]
        
       </li>
       <li id="n-contact">
        [ahref]
        
       </li>
       <li id="n-about">
        關於[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][ahref][linkx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][ahref][area1][keywordx][area1][keywordx][linkx][area1][keywordx][pkeyx][linkx]
       </li>
       <li id="n-sitesupport">
        <a href="/wiki/Special:FundraiserRedirector?utm_source=donate&amp;utm_medium=sidebar&amp;utm_campaign=C13_zh.wiktionary.org&amp;uselang=zh" title="支持我們">
         贊助
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-electronPdfService-sidebar-portlet-heading-label" class="portal" id="p-electronPdfService-sidebar-portlet-heading" role="navigation">
     <h3 dir="ltr" id="p-electronPdfService-sidebar-portlet-heading-label" lang="zh-Hant">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="electron-print_pdf">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 dir="ltr" id="p-tb-label" lang="zh-Hant">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [ahref]
        
       </li>
       <li id="t-recentchangeslinked">
        [ahref]
        
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        [linkx]
        
       </li>
       <li id="t-print">
        [ahref]
        
       </li>
       <li id="t-permalink">
        [linkx]
        
       </li>
       <li id="t-info">
        <a href="/w/index.php?title=%EC%9E%90%EB%8B%A4&amp;action=info" title="更多關於此頁面的資訊">
         頁面資訊
        </a>
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 dir="ltr" id="p-lang-label" lang="zh-Hant">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-az">
        <a class="interlanguage-link-target" href="/wiki/%EC%9E%90%EB%8B%A4" hreflang="az" lang="az" title="자다 – 亞塞拜然文">
         Azərbaycanca
        </a>
       </li>
       <li class="interlanguage-link interwiki-chr">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-de">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-el">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-en">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-eu">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-fi">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-fj">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-fr">
        <a class="interlanguage-link-target" href="/wiki/%EC%9E%90%EB%8B%A4" hreflang="fr" lang="fr" title="자다 – 法文">
         Français
        </a>
       </li>
       <li class="interlanguage-link interwiki-kn">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ko">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ku">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ky">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-li">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-lt">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-mg">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-pl">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-tr">
        <a class="interlanguage-link-target" href="/wiki/%EC%9E%90%EB%8B%A4" hreflang="tr" lang="tr" title="자다 – 土耳其文">
         Türkçe
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div dir="ltr" id="footer" lang="zh-Hant" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     此頁面最後編輯於 2018年4月25日 (星期三) 14:04。
    </li>
    <li id="footer-info-copyright">
     本站的全部文字在
     [ahref]
     
     <a href="/licenses/by-sa/3.0/deed.zh_TW" rel="license" style="display:none;">
     </a>
     之條款下提供，附加條款亦可能應用（請參閱
     [ahref]
     
     ）。
     <br/>
     Wiktionary®和維基詞典標誌是
     <a href="g">
      維基媒體基金會
     </a>
     的註冊商標；維基™是維基媒體基金會的商標。
     <br/>
     維基媒體基金會是在美國佛羅里達州登記的501(c)(3)
     [linkx]
     
     、非營利/非牟利、慈善機構。
     <br/>
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [ahref]
     
    </li>
    <li id="footer-places-about">
     [ahref]
     
    </li>
    <li id="footer-places-disclaimer">
     <a href="/wiki/Wiktionary:%E5%85%8D%E8%B4%A3%E5%A3%B0%E6%98%8E" title="Wiktionary:免责声明">
      免責聲明
     </a>
    </li>
    <li id="footer-places-developers">
     [linkx]
     
    </li>
    <li id="footer-places-cookiestatement">
     [linkx]
     
    </li>
    <li id="footer-places-mobileview">
     [linkx]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     [ahref]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0014
  </b>
 </body>
</html>
|<---