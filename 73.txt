--->|<!DOCTYPE html>
<html itemscope="" itemtype="http://schema.org/Organization" lang="ko" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:og="http://opengraphprotocol.org/schema/">
 <head prefix="og: http://ogp.me/ns# khanacademy:
                        http://ogp.me/ns/apps/khanacademy#">
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0" name="viewport"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
   <meta content="160249463991765" property="fb:app_id"/>
   <meta content="100000121497109,1305017,100001572496923" property="fb:admins"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
   <meta content="@khanacademy" name="twitter:site"/>
   <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
   <meta content="https://cdn.kastatic.org/images/khan-logo-dark-background.new.png" name="twitter:image"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
   <meta content="https://cdn.kastatic.org/images/khan-logo-dark-background.new.png" itemprop="image"/>
  </meta>
 </head>
 <body class="lang-ko">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-WSX5PBP" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="external-styles-missing" style='
        background: #f2dede;
        font: 14px "Helvetica Neue", Arial, Helvetica;
        margin-bottom: 40px;
        padding: 10px 20px;
    '>
   <p>
    이 메시지는 외부 자료를 칸 아카데미에 로딩하는 데 문제가 있는 경우에 표시됩니다.
   </p>
   <p>
    웹 필터가 올바르게 작동하지 않으면 도메인
    <strong>
     *. kastatic.org
    </strong>
    과
    <strong>
     *.kasandbox.org
    </strong>
    이 차단되어 있는지 확인하세요.
    <span id="inaccurate-clock-warning">
    </span>
   </p>
  </div>
  <div class="clearfix bibliotron-header white-outer-wrapper" id="outer-wrapper" style="position:relative;z-index:0;">
   <nav class="clearfix athena-big-menu" id="page_sub_nav">
    <b>
    </b>
   </nav>
   <div class="full-bleed" id="page-container" role="main">
    <div id="page-container-inner">
     <div id="fb-root">
     </div>
     <noscript>
      <div class="noscript-warning">
       <p>
        <i class="icon-warning-sign">
        </i>
        칸아카데미에 로그인하고 모든 기능을 사용하려면 브라우저에서  자바스크립트를 활성화하세요.
       </p>
      </div>
     </noscript>
     <div class="box-sizing-border-box-reset">
      <div id="app-shell-root">
       <div class="_1dc2fu2">
        <div style="height:62px;background-color:#0a2a66">
        </div>
        <div class="_s217esa" id="main-content" tabindex="-1">
         주요 내용
        </div>
        <div class="_3hmsj">
         <div data-test-id="curation-page">
          <div class="" style="background-color:#0a2a66">
           <div class="_1hnhjoh">
            <div class="_t0tx82">
             [area1][keywordx][pkeyx][linkx][ahref][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][area1][mkey1][area1][mkey1]
            </div>
           </div>
           <div aria-hidden="true" class="_1lve43w">
            <div class="header_beginSticky">
            </div>
            <div class="_1t9s97v" style="will-change:transform;position:absolute">
             <div>
              <div>
               <div class="_tg9e1ct" style="opacity:0">
                <div class="_pcq78pb">
                 <a class="_5ud1k7f" href="/math" tabindex="0">
                  <span class="_11bfxfy">
                   <svg aria-hidden="true" focusable="false" height="1em" role="img" viewbox="0 0 10 10" width="1em">
                    <path d="M6.7,8.8L3,5l3.6-3.8c0.3-0.3,0.2-0.7,0-1c-0.2-0.3-0.7
    -0.2-1,0l-4,4.3c-0.2,0.3-0.2,0.7,0,0.9l4.1,4.3c0.3,0.3,0.7,0.3,1,0
    C7,9.5,7,9.1,6.7,8.8z" fill="currentColor">
                    </path>
                   </svg>
                  </span>
                  수학
                 </a>
                </div>
                [linkx]
                
                <h1 class="_u0zi7y">
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h1>
                <div class="_pcq78pb">
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="_refaskb">
           <div class="_2l65xfy">
            <span class="_1lbcxvfr">
             미션을 찾고 계신가요?
             미국 6학년
             미션을 시작하거나 계속하시려면 다음을 클릭하세요.
             <span class="_148k7y8s">
              [linkx]
              
             </span>
            </span>
           </div>
          </div>
          <div>
           <div class="_e296pg" style="background-color:#FFFFFF">
            <div class="_xu2jcg" id="topic-progress">
             <span>
              <div class="_fss88w4">
               <div class="_e9you9d">
                <div class="_1fjpreec">
                 <div class="_85gotc3">
                  <div class="_1m09btgf">
                  </div>
                  <nav aria-labelledby="subject-progress-sidebar-title" class="_s08qb0" role="navigation">
                   <div class="_11dj4vig">
                    <ul class="_1cojsvit">
                     <li>
                      <h2 class="_1dmmxzrw" id="subject-progress-sidebar-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h2>
                     </li>
                     <div class="_n6ca2wu">
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="96" viewbox="0 0 96 96" width="96" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M88.38 46.91a3.818 3.818 0 1 1 7.602 0h.006c.008.362.012.725.012 1.09 0 26.51-21.49 48-48 48S0 74.51 0 48 21.49 0 48 0c.365 0 .728.004 1.09.012v.005a3.818 3.818 0 1 1 0 7.602v.032c-.362-.01-.725-.015-1.09-.015C25.708 7.636 7.636 25.708 7.636 48c0 22.292 18.072 40.364 40.364 40.364 22.292 0 40.364-18.072 40.364-40.364 0-.365-.005-.728-.015-1.09h.032z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                    </ul>
                   </div>
                  </nav>
                 </div>
                </div>
                <div style="-ms-flex-basis:16px;-ms-flex-preferred-size:16px;-webkit-flex-basis:16px;flex-basis:16px;flex-shrink:0">
                </div>
                <div class="_lhvgag5" data-slug="topic-progress" tabindex="-1">
                 <div class="_xu2jcg">
                  <div class="_1nicslx5">
                  </div>
                  <div class="_12yfx4j4" data-slug="table-of-contents">
                   <div class="_12yy6f6l" data-slug="cc-6th-ratios-prop-topic" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       [ahref]
                       
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M7.237.741C7.165.393 6.95.154 6.656.053A1.01 1.01 0 0 0 6.18.01c-.053.009-.053.009-.087.017C2.553.949 0 4.214 0 7.91 0 12.36 3.598 16 8 16c4.4 0 8-3.647 8-8.112a1.02 1.02 0 0 0-.118-.423.877.877 0 0 0-.808-.48.909.909 0 0 0-.81.46c-.09.151-.13.296-.146.455-.08 3.493-2.737 6.207-6.118 6.207-3.41 0-6.118-2.74-6.118-6.196 0-2.843 1.936-5.291 4.644-6.022.1-.028.224-.082.352-.177a.928.928 0 0 0 .36-.97z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="그림을 이용한 비" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-ratios-prop-topic#visualize-ratios" title="그림을 이용한 비">
                         그림을 이용한 비
                         <span class="sr-only">
                          :
                          비율, 비, 백분율 (초등6학년 1학기 4단원)
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="백분율이란? (초등6학년 1학기 4단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-ratios-prop-topic#cc-6th-percentages" title="백분율이란? (초등6학년 1학기 4단원)">
                         백분율이란? (초등6학년 1학기 4단원)
                         <span class="sr-only">
                          :
                          비율, 비, 백분율 (초등6학년 1학기 4단원)
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                     [area1][keywordx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][mkey1][ahref][area1][mkey1][area1][mkey1][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                    </div>
                   </div>
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   <div class="_12yy6f6l" data-slug="cc-6th-arithmetic-operations" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       <a class="_dwmetq" data-test-id="unit-header" href="/math/cc-sixth-grade-math/cc-6th-arithmetic-operations">
                        <h3 class="_k50sd54">
                         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                        </h3>
                       </a>
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M7.237.741C7.165.393 6.95.154 6.656.053A1.01 1.01 0 0 0 6.18.01c-.053.009-.053.009-.087.017C2.553.949 0 4.214 0 7.91 0 12.36 3.598 16 8 16c4.4 0 8-3.647 8-8.112a1.02 1.02 0 0 0-.118-.423.877.877 0 0 0-.808-.48.909.909 0 0 0-.81.46c-.09.151-.13.296-.146.455-.08 3.493-2.737 6.207-6.118 6.207-3.41 0-6.118-2.74-6.118-6.196 0-2.843 1.936-5.291 4.644-6.022.1-.028.224-.082.352-.177a.928.928 0 0 0 .36-.97z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="소수의 덧셈과 뺄셈 문제 해결하기 (초등4학년 2학기 1단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-arithmetic-operations#cc-6th-add-sub-decimals-word-problems" title="소수의 덧셈과 뺄셈 문제 해결하기 (초등4학년 2학기 1단원)">
                         소수의 덧셈과 뺄셈 문제 해결하기 (초등4학년 2학기 1단원)
                         <span class="sr-only">
                          :
                          연산
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="소수의 나눗셈 (초등5학년 2학기 4단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-arithmetic-operations#cc-6th-dividing-decimals" title="소수의 나눗셈 (초등5학년 2학기 4단원)">
                         소수의 나눗셈 (초등5학년 2학기 4단원)
                         <span class="sr-only">
                          :
                          연산
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        <a aria-label="분수의 나눗셈 (초등6학년 1학기 2단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-arithmetic-operations#cc-6th-dividing-fractions" title="분수의 나눗셈 (초등6학년 1학기 2단원)">
                         분수의 나눗셈 (초등6학년 1학기 2단원)
                         <span class="sr-only">
                          :
                          연산
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                    </div>
                   </div>
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   <div class="_12yy6f6l" data-slug="cc-6th-negative-number-topic" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       <a class="_dwmetq" data-test-id="unit-header" href="/math/cc-sixth-grade-math/cc-6th-negative-number-topic">
                        <h3 class="_k50sd54">
                         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                        </h3>
                       </a>
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M7.237.741C7.165.393 6.95.154 6.656.053A1.01 1.01 0 0 0 6.18.01c-.053.009-.053.009-.087.017C2.553.949 0 4.214 0 7.91 0 12.36 3.598 16 8 16c4.4 0 8-3.647 8-8.112a1.02 1.02 0 0 0-.118-.423.877.877 0 0 0-.808-.48.909.909 0 0 0-.81.46c-.09.151-.13.296-.146.455-.08 3.493-2.737 6.207-6.118 6.207-3.41 0-6.118-2.74-6.118-6.196 0-2.843 1.936-5.291 4.644-6.022.1-.028.224-.082.352-.177a.928.928 0 0 0 .36-.97z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="수직선 위의 음의 소수와 음의 분수" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-negative-number-topic#cc-6th-neg-dec-frac-number-line" title="수직선 위의 음의 소수와 음의 분수">
                         수직선 위의 음의 소수와 음의 분수
                         <span class="sr-only">
                          :
                          음의 정수 (중등1학년)
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        <a aria-label="음수의 비교" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-negative-number-topic#cc-6th-comparing-negative-numbers" title="음수의 비교">
                         음수의 비교
                         <span class="sr-only">
                          :
                          음의 정수 (중등1학년)
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="절댓값 (중등1학년)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-negative-number-topic#cc-6th-absolute-value" title="절댓값 (중등1학년)">
                         [linkx]<li>[area1][mkey1]</li><li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
                        </a>
                       </span>
                       <span class="_twomc80">
                        <a aria-label="좌표평면 (중등1학년)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-negative-number-topic#cc-6th-coordinate-plane" title="좌표평면 (중등1학년)">
                         좌표평면 (중등1학년)
                         <span class="sr-only">
                          :
                          음의 정수 (중등1학년)
                         </span>
                        </a>
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                    </div>
                   </div>
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   <div class="_12yy6f6l" data-slug="cc-6th-factors-and-multiples" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       [linkx]
                       
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M7.237.741C7.165.393 6.95.154 6.656.053A1.01 1.01 0 0 0 6.18.01c-.053.009-.053.009-.087.017C2.553.949 0 4.214 0 7.91 0 12.36 3.598 16 8 16c4.4 0 8-3.647 8-8.112a1.02 1.02 0 0 0-.118-.423.877.877 0 0 0-.808-.48.909.909 0 0 0-.81.46c-.09.151-.13.296-.146.455-.08 3.493-2.737 6.207-6.118 6.207-3.41 0-6.118-2.74-6.118-6.196 0-2.843 1.936-5.291 4.644-6.022.1-.028.224-.082.352-.177a.928.928 0 0 0 .36-.97z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       [ahref][area1][mkey1][pkeyx][pkeyx]<li>[area1][keywordx]</li>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        <a aria-label="최대공약수 (초등5학년 1학기 1단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-factors-and-multiples#cc-6th-gcf" title="최대공약수 (초등5학년 1학기 1단원)">
                         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][pkeyx][linkx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx][pkeyx][linkx][pkeyx][pkeyx][area1][mkey1][area1][mkey1][area1][keywordx]
                        </a>
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                    </div>
                   </div>
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   <div class="_12yy6f6l" data-slug="cc-6th-expressions-and-variables" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       [linkx]
                       
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M7.237.741C7.165.393 6.95.154 6.656.053A1.01 1.01 0 0 0 6.18.01c-.053.009-.053.009-.087.017C2.553.949 0 4.214 0 7.91 0 12.36 3.598 16 8 16c4.4 0 8-3.647 8-8.112a1.02 1.02 0 0 0-.118-.423.877.877 0 0 0-.808-.48.909.909 0 0 0-.81.46c-.09.151-.13.296-.146.455-.08 3.493-2.737 6.207-6.118 6.207-3.41 0-6.118-2.74-6.118-6.196 0-2.843 1.936-5.291 4.644-6.022.1-.028.224-.082.352-.177a.928.928 0 0 0 .36-.97z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       <[keywordx]>
                       </[keywordx]>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="식의 값 (중등1학년)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables#expression-value-intuition" title="식의 값 (중등1학년)">
                         식의 값 (중등1학년)
                         <span class="sr-only">
                          :
                          변수와 식
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        <a aria-label="식 세우기란? (중등1학년)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables#cc-6th-writing-expressions" title="식 세우기란? (중등1학년)">
                         식 세우기란? (중등1학년)
                         <span class="sr-only">
                          :
                          변수와 식
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        <a aria-label="식 세우기 문제 해결하기 (중등1학년)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables#cc-6th-alg-expression-word-problems" title="식 세우기 문제 해결하기 (중등1학년)">
                         식 세우기 문제 해결하기 (중등1학년)
                         <span class="sr-only">
                          :
                          변수와 식
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        <li>[ahref]</li>[ahref][linkx]
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                    </div>
                   </div>
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   [pkeyx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][pkeyx][pkeyx][area1][mkey1][linkx][area1][mkey1][ahref][ahref][linkx][area1][keywordx][area1][keywordx][ahref][area1][keywordx]
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   <div class="_12yy6f6l" data-slug="cc-6th-geometry-topic" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       [linkx]
                       
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       <div class="_1utzloin">
                        <svg height="16" viewbox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg">
                         <path class="_12r4ewyx" d="M7.237.741C7.165.393 6.95.154 6.656.053A1.01 1.01 0 0 0 6.18.01c-.053.009-.053.009-.087.017C2.553.949 0 4.214 0 7.91 0 12.36 3.598 16 8 16c4.4 0 8-3.647 8-8.112a1.02 1.02 0 0 0-.118-.423.877.877 0 0 0-.808-.48.909.909 0 0 0-.81.46c-.09.151-.13.296-.146.455-.08 3.493-2.737 6.207-6.118 6.207-3.41 0-6.118-2.74-6.118-6.196 0-2.843 1.936-5.291 4.644-6.022.1-.028.224-.082.352-.177a.928.928 0 0 0 .36-.97z" fill-rule="nonzero">
                         </path>
                        </svg>
                       </div>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="다각형의 넓이" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-geometry-topic#cc-6th-area" title="다각형의 넓이">
                         다각형의 넓이
                         <span class="sr-only">
                          :
                          기하학
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        <a aria-label="모서리의 길이가 분수인 직육면체의 부피 구하기 (초등6학년 1학기 6단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-geometry-topic#cc-6th-volume-with-fractions" title="모서리의 길이가 분수인 직육면체의 부피 구하기 (초등6학년 1학기 6단원)">
                         모서리의 길이가 분수인 직육면체의 부피 구하기 (초등6학년 1학기 6단원)
                         <span class="sr-only">
                          :
                          기하학
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        <a aria-label="입체도형의 겉넓이 (초등6학년 1학기 6단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-geometry-topic#cc-6th-surface-area" title="입체도형의 겉넓이 (초등6학년 1학기 6단원)">
                         입체도형의 겉넓이 (초등6학년 1학기 6단원)
                         <span class="sr-only">
                          :
                          기하학
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="삼각형 넓이 구하기 (초등5학년 1학기 5단원)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-geometry-topic#cc-6th-area-shapes-grid" title="삼각형 넓이 구하기 (초등5학년 1학기 5단원)">
                         삼각형 넓이 구하기 (초등5학년 1학기 5단원)
                         <span class="sr-only">
                          [linkx]<li>[area1][keywordx]</li><li>[linkx]</li><li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                    </div>
                   </div>
                  </div>
                  <div class="_xmja1e8" data-slug="false">
                   <div class="_12yy6f6l" data-slug="cc-6th-data-statistics" tabindex="-1">
                    <div class="_xu2jcg">
                     <div class="_1jkfus0z">
                      <div class="_1msivsfn">
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_xu2jcg">
                       <a class="_dwmetq" data-test-id="unit-header" href="/math/cc-sixth-grade-math/cc-6th-data-statistics">
                        <h3 class="_k50sd54">
                         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                        </h3>
                       </a>
                      </div>
                      <div style="-ms-flex-basis:8px;-ms-flex-preferred-size:8px;-webkit-flex-basis:8px;flex-basis:8px;flex-shrink:0">
                      </div>
                      <div class="_t0tx82">
                      </div>
                      <div class="_1hmx89oj">
                       [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>
                      </div>
                     </div>
                     <div class="_14kisdro">
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="히스토그램 (중등1학년)" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-data-statistics#histograms" title="히스토그램 (중등1학년)">
                         히스토그램 (중등1학년)
                         <span class="sr-only">
                          :
                          자료와 통계
                         </span>
                        </a>
                       </span>
                       <span class="_twomc80">
                        [area1][keywordx]<li>[area1][mkey1]</li>[ahref][area1][mkey1]
                       </span>
                       <span class="_twomc80">
                        <li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][mkey1]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
                       </span>
                      </div>
                      <div style="-ms-flex-basis:24px;-ms-flex-preferred-size:24px;-webkit-flex-basis:24px;flex-basis:24px;flex-shrink:0">
                      </div>
                      <div class="_1rbo3nd6">
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [ahref]
                        
                       </span>
                       <span class="_twomc80">
                        [linkx]
                        
                       </span>
                       <span class="_twomc80">
                        <a aria-label="자료의 분포 형태" class="_dwmetq" data-test-id="lesson-link" href="/math/cc-sixth-grade-math/cc-6th-data-statistics#cc-6-shape-of-data" title="자료의 분포 형태">
                         자료의 분포 형태
                         <span class="sr-only">
                          :
                          자료와 통계
                         </span>
                        </a>
                       </span>
                      </div>
                     </div>
                    </div>
                    <div class="_t0tx82">
                    </div>
                   </div>
                  </div>
                  <div class="_f1r4uxc" data-position-slug="subject-challenge" data-slug="cc-sixth-grade-math-subject-challenge" tabindex="-1">
                   <div class="_1398zhdl">
                    <div class="_1hmx89oj">
                     <div class="_1utzloin">
                      <svg height="96" viewbox="0 0 96 96" width="96" xmlns="http://www.w3.org/2000/svg">
                       <path class="_12r4ewyx" d="M88.38 46.91a3.818 3.818 0 1 1 7.602 0h.006c.008.362.012.725.012 1.09 0 26.51-21.49 48-48 48S0 74.51 0 48 21.49 0 48 0c.365 0 .728.004 1.09.012v.005a3.818 3.818 0 1 1 0 7.602v.032c-.362-.01-.725-.015-1.09-.015C25.708 7.636 7.636 25.708 7.636 48c0 22.292 18.072 40.364 40.364 40.364 22.292 0 40.364-18.072 40.364-40.364 0-.365-.005-.728-.015-1.09h.032z" fill-rule="nonzero">
                       </path>
                      </svg>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </span>
             <div class="_xu2jcg">
             </div>
            </div>
            <div class="_b6nl2n">
             <h2 class="_1qdie679">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h2>
             <div class="_bh8dnx">
              <div class="_1onccmov">
               <a aria-hidden="true" class="_ildzy11" href="/math/cc-sixth-grade-math/cc-6th-ratios-prop-topic/cc-6th-rates/v/introduction-to-rates?ref=6th_grade_staff_picks" tabindex="-1">
                <div class="_1wwwy3o">
                 <div class="_8g2ngq" style="border-radius:4px;height:100%;width:100%">
                  <div class="_9gzjss">
                  </div>
                  <div class="_9gzjss" style="border-radius:4px;height:100%;width:100%">
                  </div>
                  <div class="_1q9oahy" style="border-bottom-left-radius:4px;border-bottom-right-radius:4px">
                   <span>
                    <span aria-hidden="true" class="_sao1yr">
                     <svg aria-hidden="true" focusable="false" height="8" role="img" viewbox="0 0 10 10" width="8">
                      <path d="M1.6,9.9C1.5,10,1.3,10,1.2,10C1.1,10,1,10,0.9,9.9C0.7,9.8,0.6,9.6,
    0.6,9.4V0.6c0-0.2,0.2-0.4,0.4-0.5C1.1,0,1.4,0,1.6,0.1l7.6,4.5c0.2,0.1,
    0.3,0.3,0.3,0.5c0,0.2-0.1,0.4-0.3,0.5L1.6,9.9z" fill="#fff">
                      </path>
                     </svg>
                    </span>
                    <span>
                    </span>
                    <span id="Video_duration_칸아카데미-추천_0">
                     <span>
                      <span class="_19bpjuy">
                       동영상5 분 30 초
                      </span>
                      <span aria-hidden="true">
                       5:30
                      </span>
                     </span>
                    </span>
                   </span>
                  </div>
                 </div>
                </div>
               </a>
               <div class="_rp4na6">
                [ahref]
                
                <div>
                 <span class="_3238e18">
                  [linkx]
                  
                 </span>
                </div>
               </div>
              </div>
              <div class="_1l8b7ye1">
               [linkx]
               
               <div class="_rp4na6">
                [linkx]
                
                <div>
                 <span class="_3238e18">
                  [ahref]
                   [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li><li>[area1][mkey1]</li><li>[ahref]</li>
                  
                 </span>
                </div>
               </div>
              </div>
              <div class="_1l8b7ye1">
               [ahref]
               
               <div class="_rp4na6">
                [ahref]
                
                <div>
                 <span class="_3238e18">
                  [linkx]
                  
                 </span>
                </div>
               </div>
              </div>
              <div class="_1l8b7ye1">
               <a aria-hidden="true" class="_ildzy11" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables/expression-value-intuition/e/expression-value-intuition?ref=6th_grade_staff_picks" tabindex="-1">
                <div class="_1wwwy3o">
                 <div class="_8g2ngq" style="border-radius:4px;height:100%;width:100%">
                  <div class="_9gzjss">
                  </div>
                  <div class="_9gzjss" style="border-radius:4px;height:100%;width:100%">
                  </div>
                  <div class="_1q9oahy" style="border-bottom-left-radius:4px;border-bottom-right-radius:4px">
                   <span>
                    <span aria-hidden="true" class="_sao1yr">
                     <svg aria-hidden="true" focusable="false" height="8" role="img" viewbox="0 0 100 95.373" width="8.388118230526459">
                      <path d="M100.806 37.259q0 1.325-1.59 2.915l-21.995 21.412 5.194 30.316q.265 2.279-.424 3.233-.795 1.007-1.961 1.007t-2.438-.742l-27.189-14.31-27.189 14.31q-1.378.742-2.544.742t-1.802-.901-.636-1.696.106-1.643l5.247-30.316-22.048-21.412q-1.537-1.643-1.537-2.915 0-2.226 3.392-2.809l30.422-4.399 13.621-27.56q1.166-2.491 2.968-2.491t2.968 2.491l13.621 27.56 30.422 4.399q3.392.583 3.392 2.809z" fill="#fff">
                      </path>
                     </svg>
                    </span>
                    <span>
                    </span>
                    <span id="Exercise_duration_칸아카데미-추천_3">
                     연습문제
                    </span>
                   </span>
                  </div>
                 </div>
                </div>
               </a>
               <div class="_rp4na6">
                <a aria-describedby="Exercise_duration_칸아카데미-추천_3" class="_jgb8jjh" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables/expression-value-intuition/e/expression-value-intuition?ref=6th_grade_staff_picks">
                 식의 값 (중등1학년)
                </a>
                <div>
                 <span class="_3238e18">
                  [linkx]
                  
                 </span>
                </div>
               </div>
              </div>
              <div class="_7g0upis">
               <a aria-hidden="true" class="_ildzy11" href="/math/cc-sixth-grade-math/cc-6th-equations-and-inequalities/cc-6th-intro-equations/a/introduction-to-equations?ref=6th_grade_staff_picks" tabindex="-1">
                <div class="_1wwwy3o">
                 <div class="_8g2ngq" style="border-radius:4px;height:100%;width:100%">
                  <div class="_9gzjss">
                  </div>
                  <div class="_9gzjss" style="border-radius:4px;height:100%;width:100%">
                  </div>
                  <div class="_1q9oahy" style="border-bottom-left-radius:4px;border-bottom-right-radius:4px">
                   <span>
                    <span aria-hidden="true" class="_sao1yr">
                     <svg aria-hidden="true" focusable="false" height="8" role="img" viewbox="0 0 83.362 100" width="6.668959999999999">
                      <path d="M16.701 81.282q0 1.995 2.052 2.109l45.885 0q.912 0 1.482-.57t.57-1.539l0-4.161q0-1.995-2.052-2.109l-45.885 0q-.912.057-1.482.627t-.57 1.482l0 4.161zm49.989-16.644l0-4.218q0-.912-.57-1.482t-1.482-.57l-45.885 0q-.912 0-1.482.57t-.57 1.482l0 4.218q0 .912.57 1.482t1.482.57l45.885 0q.912 0 1.482-.57t.57-1.482zm-16.644-31.293l0-33.174q5.358.969 8.607 4.275l20.292 20.292q3.249 3.249 4.218 8.607l-33.117 0zm33.345 8.322l0 52.155q0 2.565-1.824 4.389t-4.446 1.824l-70.851 0q-2.622 0-4.446-1.824t-1.824-4.389l0-87.552q0-2.622 1.824-4.446t4.446-1.824l35.397 0l0 35.454q0 2.565 1.824 4.389t4.446 1.824l35.454 0z" fill="#fff">
                      </path>
                     </svg>
                    </span>
                    <span>
                    </span>
                    <span id="Article_duration_칸아카데미-추천_4">
                     개념 이해하기
                    </span>
                   </span>
                  </div>
                 </div>
                </div>
               </a>
               <div class="_rp4na6">
                [linkx]
                
                <div>
                 <span class="_3238e18">
                  [linkx]
                  
                 </span>
                </div>
               </div>
              </div>
             </div>
            </div>
            <div class="_d84ngz">
             <div aria-hidden="true" class="_t0yns1z">
             </div>
            </div>
            <div class="_b6nl2n">
             <h2 class="_1qdie679">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h2>
             <div class="_bh8dnx">
              <div class="_1onccmov">
               [ahref]
               
               <div class="_rp4na6">
                [linkx]
                
                <div>
                 <span class="_3238e18">
                  <a class="_1ab5a1lu" href="/math/cc-sixth-grade-math/cc-6th-negative-number-topic#cc-6th-absolute-value" tabindex="0">
                   절댓값 (중등1학년)
                  </a>
                 </span>
                </div>
               </div>
              </div>
              <div class="_1l8b7ye1">
               [linkx]
               
               <div class="_rp4na6">
                <a aria-describedby="Article_duration_복습_1" class="_jgb8jjh" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables/cc-6th-evaluating-expressions/a/terms-factors-and-coefficients-review?ref=6th_articles">
                 항, 인수, 계수 복습
                </a>
                <div>
                 <span class="_3238e18">
                  <a class="_1ab5a1lu" href="/math/cc-sixth-grade-math/cc-6th-expressions-and-variables#cc-6th-evaluating-expressions" tabindex="0">
                   대수식
                  </a>
                 </span>
                </div>
               </div>
              </div>
              <div class="_1l8b7ye1">
               [linkx]
               
               <div class="_rp4na6">
                <a aria-describedby="Article_duration_복습_2" class="_jgb8jjh" href="/math/cc-sixth-grade-math/cc-6th-arithmetic-operations/cc-6th-exponents/a/exponents-review?ref=6th_articles">
                 지수 복습
                </a>
                <div>
                 <span class="_3238e18">
                  <a class="_1ab5a1lu" href="/math/cc-sixth-grade-math/cc-6th-arithmetic-operations#cc-6th-exponents" tabindex="0">
                   지수 (중등1학년)
                  </a>
                 </span>
                </div>
               </div>
              </div>
              <div class="_7g0upis">
               [ahref]
               
               <div class="_rp4na6">
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li><li>[area1][mkey1]</li>
               </div>
              </div>
             </div>
            </div>
            <div class="_d84ngz">
             <div aria-hidden="true" class="_t0yns1z">
             </div>
            </div>
            <div class="_34fojv" style="position:relative;z-index:1">
             <div>
              <h2 class="_1p2pl82" style="color:inherit;font-family:inherit;font-size:inherit;margin-bottom:0">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h2>
             </div>
             <div>
              <div class="_1xxbrjb">
               비는 스포츠, 금융, 약, 요리 등 일상 생활에서 항상 사용됩니다. 이 단원에선, 비가 무엇인지 알아보고 어떻게 사용하는지 배워 봅시다.[linkx][ahref][pkeyx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][ahref][pkeyx][pkeyx][ahref][linkx][ahref][pkeyx][area1][keywordx][area1][keywordx][linkx][area1][keywordx][linkx][ahref][area1][mkey1][area1][keywordx][linkx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </div>
              <a aria-label="학습 시작하기: 비란? (초등6학년 1학기 4단원)" class="_1impv5u4" href="/math/cc-sixth-grade-math/cc-6th-ratios-prop-topic/intro-to-ratios/v/ratios-intro" role="button" tabindex="0">
               <span class="_1wylm4ef">
                학습 시작하기
               </span>
              </a>
             </div>
            </div>
            <div aria-hidden="true" class="_1j2vvju">
            </div>
            <div class="_slx8m8">
             <div class="_1ex3v1b">
              [linkx]
              
             </div>
             <div class="_1ra1nru">
             </div>
             <div class="_1ex3v1b">
              <a class="_dwmetq" href="/mission/cc-sixth-grade-math">
               <span>
                미션
                <span aria-hidden="true" class="_1won4ly">
                 <svg aria-hidden="true" focusable="false" height="10" role="img" viewbox="0 0 10 10" width="10">
                  <path d="M6.7,8.8L3,5l3.6-3.8c0.3-0.3,0.2-0.7,0-1c-0.2-0.3-0.7
    -0.2-1,0l-4,4.3c-0.2,0.3-0.2,0.7,0,0.9l4.1,4.3c0.3,0.3,0.7,0.3,1,0
    C7,9.5,7,9.1,6.7,8.8z" fill="#21242C">
                  </path>
                 </svg>
                </span>
               </span>
              </a>
             </div>
            </div>
           </div>
           <span>
            <span>
             [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
            </span>
           </span>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0082
  </b>
 </body>
</html>|<---