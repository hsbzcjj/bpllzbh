--->|<!DOCTYPE html>
<head>
 <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
 <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
 <meta content="sketchbook5_elkha" name="module_skin"/>
 <meta content="no" http-equiv="imagetoolbar"/>
 <title>
  [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
 </title>
 <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
 <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="description"/>
 <meta content="ko_KR" property="og:locale"/>
 <meta content="article" property="og:type"/>
 <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
 <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
 <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
</head>
<body>
 <div class="ce center ko_">
  <div id="wrap">
   <header id="header">
    <div class="Wrapper">
     <div class="logo">
      <h1 class="mpReset">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h1>
      <p class="mpReset about">
       에펨코리아 - 유머, 축구, 게임, 풋볼매니저 통합 커뮤니티
      </p>
      <hr/>
     </div>
     <nav class="mpReset" id="gnb">
      <div class="ul1">
       <ul class="ul1">
        <li class="li1 on on1">
         <a class="a1 on on1" href="/best">
          <span>
           포텐터짐
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 on on2">
            <a class="a2 on on2" href="/best">
             <span>
              포텐터진 게시판
             </span>
            </a>
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            <a class="a2" href="/index.php?mid=gallery_entertainment&amp;sort_index=pop&amp;order_type=desc">
             <span>
              - 수용소 인기글
             </span>
            </a>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1">
         [linkx]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <a class="a2" href="/humor">
             <span>
              유머/이슈/정보
             </span>
            </a>
           </li>
           <li class="li2">
            <a class="a2" href="/mystery">
             <span>
              미스터리/공포
             </span>
            </a>
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            [linkx]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <a class="a2" href="/football_news">
             <span>
              축구 소식통
             </span>
            </a>
           </li>
           <li class="li2">
            [linkx]
            
           </li>
           <li class="li2">
            [ahref]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1">
         <a class="a1" href="/hotdeal">
          <span>
           쇼핑
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            [ahref]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <a class="a2" href="/gallery_girlgroup">
             <span>
              걸그룹
             </span>
            </a>
           </li>
           <li class="li2">
            <a class="a2" href="/gallery_entertainment">
             <span>
              수용소
             </span>
            </a>
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            <a class="a2" href="/gallery_foods">
             <span>
              음식/여행
             </span>
            </a>
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            [linkx]
            
           </li>
           <li class="li2">
            <a class="a2" href="/pictures">
             <span>
              사진
             </span>
            </a>
           </li>
           <li class="li2">
            [linkx]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         [linkx]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <span style="display:block; height:1px; margin:-8px 0 0;">
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               <a class="a3" href="/fashion">
                <span>
                 패션
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               <a class="a3" href="/car">
                <span>
                 자동차
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               <a class="a3" href="/study">
                <span>
                 공부
                </span>
               </a>
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               <a class="a3" href="/job">
                <span>
                 직장/알바/사업
                </span>
               </a>
              </li>
             </ul>
            </div>
           </li>
           <li class="li2">
            <span style="display:block; height:1px; margin:-8px 0 0;">
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               <a class="a3" href="/suggest">
                <span>
                 문의/신고
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               <a class="a3" href="/suggest2">
                <span>
                 건의 게시판
                </span>
               </a>
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1">
         <a class="a1" href="/ib">
          <span>
           기타
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <a class="a2" href="/ib">
             <span>
              인터넷방송
             </span>
            </a>
           </li>
           <li class="li2">
            <a class="a2" href="/baseball">
             <span>
              야구
             </span>
            </a>
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            <a class="a2" href="/assapig">
             <span>
              건강/아싸/돼지
             </span>
            </a>
           </li>
           <li class="li2">
            [linkx]
            
           </li>
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            <a class="a2" href="/personacon">
             <span>
              퍼스나콘/로고
             </span>
            </a>
           </li>
           <li class="li2">
            <a class="a2" href="/writing">
             <span>
              창작/도서
             </span>
            </a>
           </li>
           <li class="li2">
            [linkx]
            
           </li>
           <li class="li2">
            <a class="a2" href="/music">
             <span>
              음악
             </span>
            </a>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         <a class="a1" href="/fm19free">
          <span>
           풋볼매니저
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 menu_ext_mid">
            [ahref]
            
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               <a class="a3" href="/fm19free">
                <span>
                 에펨자유
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/fmm">
                <span>
                 모바일/FMM
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/fm19data">
                <span>
                 스킨/일반자료
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               <a class="a3" href="/fm19tips">
                <span>
                 플레이팁
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/fm19tqna">
                <span>
                 전술토론
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/1238854982">
                <span>
                 [2019자료안내]
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/1598251840">
                <span>
                 [패치 자동설치]
                </span>
               </a>
              </li>
             </ul>
            </div>
           </li>
           <li class="li2">
            <span class="a2">
             <span>
              FM2018
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3">
               <a class="a3" href="/fm18free">
                <span>
                 에펨자유
                </span>
               </a>
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               [linkx]<li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               <a class="a3" href="/fm18tqna">
                <span>
                 전술토론
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/813406449">
                <span>
                 [2018자료안내]
                </span>
               </a>
              </li>
             </ul>
            </div>
           </li>
           <li class="li2">
            <span class="a2">
             <span>
              통합/자료실
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3">
               <a class="a3" href="/fmfacepack">
                <span>
                 페이스팩
                </span>
               </a>
              </li>
              <li class="li3">
               <a class="a3" href="/fmgraphics">
                <span>
                 로고/그래픽
                </span>
               </a>
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1">
         [linkx]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            [ahref]
            
           </li>
           <li class="li2">
            [ahref]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <span class="a2">
             <span>
              PC/기타
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               [ahref]
               
              </li>
              <li class="li3">
               [ahref]
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][linkx][linkx][linkx][linkx][ahref][ahref][linkx][area1][keywordx][pkeyx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][mkey1][area1][keywordx][pkeyx][area1][mkey1][pkeyx]
               
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               <a class="a3" href="/totalwar">
                <span>
                 토탈워삼국
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               <a class="a3" href="/other_game">
                <span>
                 기타게임
                </span>
               </a>
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               <a class="a3" href="/lostark">
                <span>
                 로스트아크
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
              <li class="li3">
               [ahref]
               
              </li>
             </ul>
            </div>
           </li>
           <li class="li2">
            <span class="a2">
             <span>
              모바일
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3">
               <a class="a3" href="/gf">
                <span>
                 소녀전선
                </span>
               </a>
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               [linkx]
               
              </li>
              <li class="li3">
               [ahref]
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][area1][mkey1][linkx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         <a class="a1" href="/newboard">
          <span>
           2군
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <span style="display:block; height:1px; margin:-8px 0 0;">
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               <a class="a3" href="/newboard">
                <span>
                 2군 목록
                </span>
               </a>
              </li>
              <li class="li3">
               [ahref]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 li_bookmark">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <a class="a2" href="/index.php?act=dispMemberBookmark">
             <span>
              설정하기
             </span>
            </a>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 li_bookmark2">
         <a class="a1" href="/board">
          <span>
           전체 게시판
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            [linkx]
            
           </li>
          </ul>
         </div>
        </li>
       </ul>
      </div>
      <hr/>
     </nav>
     <div class="logged_info">
      <span class="li2">
       <a class="a" href="/index.php?mid=best&amp;document_srl=2083627057&amp;act=dispMemberSignUpForm">
        회원 가입
       </a>
      </span>
      <span class="li2">
       [ahref]
       
      </span>
      <span class="li2">
       <a class="a" href="/index.php?mid=best&amp;document_srl=2083627057&amp;act=dispMemberResendAuthMail">
        인증 메일 재발송
       </a>
      </span>
      <form action="/" class="li2 mpReset" method="post" onsubmit="return GS_LOGIN_FILTER(this)">
       <span class="keep">
        <label for="keepA">
         자동 로그인
        </label>
        <label class="title" for="keepA">
         창을 닫아도 로그인이 유지됩니다.
        </label>
       </span>
       <button type="submit">
        로그인
       </button>
      </form>
     </div>
     <div class="search mpReset">
      <form action="/" method="get">
      </form>
      <hr/>
     </div>
    </div>
   </header>
   <div class="content_padding_true" id="container">
    <div class="Wrapper">
     <div id="banner3">
      <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="4409588696" style="display:inline-block;width:160px;height:600px">
      </ins>
     </div>
     <div id="sidebar">
      <div class="padding">
       <div style="height:20px">
       </div>
       <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="9749548788" style="display:inline-block;width:160px;height:600px">
       </ins>
       <div class="fm_hot_key">
        <div class="title">
         단축키
        </div>
        <div class="more">
         [linkx]
         
        </div>
        <div class="ul">
         <div class="li li_alt">
          <span class="num">
           Alt+C
          </span>
          <span class="name">
           댓글 쓰기
          </span>
         </div>
         <div class="li li_alt">
          <a href="/index.php?mid=best&amp;act=dispBoardWrite">
           <span class="num">
            Alt+W
           </span>
           <span class="name">
            글 쓰기
           </span>
          </a>
         </div>
         <div class="li li_alt">
          <span class="num">
           Alt+Q
          </span>
          <span class="name">
           댓글 등록
          </span>
         </div>
         <div class="li">
          <a href=";" onclick="return go_to_next_('prev');">
           <span class="num">
            ,
           </span>
           <span class="name">
            이전
           </span>
          </a>
         </div>
         <div class="li">
          <a href=";" onclick="return go_to_next_('next');">
           <span class="num">
            .
           </span>
           <span class="name">
            다음
           </span>
          </a>
         </div>
         <div class="li">
          <a href="/best">
           <span class="num" style="font-family:verdana;">
            `
           </span>
           <span class="name">
            메인
           </span>
          </a>
         </div>
         <div class="li">
          <a href=";" onclick="return go_to_list();">
           <span class="num">
            /
           </span>
           <span class="name">
            목록
           </span>
          </a>
         </div>
         <div class="li" style="clear:both;">
          <a href="/best">
           <span class="num">
            1
           </span>
           <span class="name">
            포텐터짐
           </span>
          </a>
         </div>
         <div class="li">
          [ahref]
          
         </div>
         <div class="li">
          <a href="/football_news">
           <span class="num">
            3
           </span>
           <span class="name">
            축구소식
           </span>
          </a>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="content">
      <div class="content_dummy">
       <div style="clear:both;">
       </div>
       <div class="bd small_lst_btn1 bd_pc" data-bdfilestype="" data-default_style="webzine" id="bd_189545458_2083627057" style='font-family:돋움,Dotum,Arial,나눔고딕,"Malgun Gothic",맑은고딕,굴림,sans-serif;'>
        <div id="adpost" style="height:100px">
         [ahref]
         
        </div>
        <div class="tl_srch clear">
         <div class="bd_tl">
          <h1 class="ngeb clear" style="padding-left:0; opacity:.8;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h1>
          <div class="pop_more">
           <span class="a">
            <a class="mid" href="/mystery">
             미스터리/공포
            </a>
            -
            <a class="category" href="/index.php?mid=mystery&amp;category=486614">
             자연/생물
            </a>
           </span>
          </div>
          <div class="clear">
          </div>
         </div>
        </div>
        <div class="rd rd_nav_style2 clear" data-docsrl="2083627057">
         <div id="bd_capture">
          <div class="rd_hd clear" style="margin:0 -15px 20px">
           <div class="board clear" style=";">
            <div class="top_area ngeb" style=";">
             <span class="date m_no">
              2019.08.12 23:18
             </span>
             <h1 class="np_18px">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h1>
             <div class="clear">
             </div>
            </div>
            <div class="btm_area clear">
             <div class="side">
              <a class="nick member_1152796611" href="a" onclick="return false">
               RENE
              </a>
             </div>
             <div class="side fr">
              <span>
               조회 수
               <b>
                63178
               </b>
              </span>
              <span>
               추천 수
               <b>
                360
               </b>
              </span>
              <span>
               댓글
               <b>
                155
               </b>
              </span>
             </div>
            </div>
           </div>
           <div class="rd_nav_side">
            <div class="rd_nav img_tx fr m_btn_wrp">
             <div class="m_no_533">
              [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[ahref][area1][mkey1]<li>[ahref]</li>
             </div>
            </div>
           </div>
          </div>
          <div class="rd_body clear">
           <div class="document_address">
            [linkx]
            
            <span class="btn_pack small">
             <button data-clipboard-text="https://www.fmkorea.com/best/2083627057" id="copy-button">
              복사
             </button>
            </span>
           </div>
           <article>
            <div class="document_2083627057_1152796611 xe_content">
             <p class="pi__3683798325" id="pi_3683798325">
              <br class="pi__3683798325" id="pi__3683798325"/>
              <br/>
              <br/>
             </p>
             <p>
              출처: TED-Ed
             </p>
            </div>
           </article>
          </div>
         </div>
         <div class="rd_ft">
          <div class="fm_vote">
           <span class="vote">
            [ahref]
            
            <label for="fm_vote2083627057">
             포텐
            </label>
           </span>
           <span class="vote vote2">
            [linkx]
            
            <label for="fm_vote22083627057">
             방출
            </label>
           </span>
          </div>
          <div class="humor_history">
          </div>
          <div style="margin:-5px 0 5px">
           <div style="text-align:center">
            <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="2675697016" style="display:inline-block;width:728px;height:90px">
            </ins>
           </div>
          </div>
          <div class="prev_next_btns">
           [ahref][ahref][ahref][area1][mkey1][ahref][area1][keywordx][area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][linkx][linkx][linkx][ahref][area1][mkey1][area1][mkey1]
          </div>
          <div class="rd_fnt rd_file" id="files_2083627057">
           <table class="bd_tb">
            <caption class="blind">
             첨부 파일
            </caption>
            <tr>
             <th class="ui_font" scope="row">
              <strong>
               첨부파일
              </strong>
             </th>
             <td>
              <ul>
               <li>
                <a class="bubble" data-href="/?module=file&amp;act=procFileDownload&amp;file_srl=2083628278&amp;sid=8f3b9b051e939321da1d9a6e425853d4&amp;mid=best" href=";" onmousedown="this.href=jQuery(this).attr('data-href')" title="[크기:5.46MB/다운로드:3]">
                 지구상 최악의 벌레.png[area1][mkey1]<li>[area1][keywordx]</li>[ahref][linkx]
                </a>
                <span class="comma">
                 ,
                </span>
               </li>
              </ul>
             </td>
            </tr>
           </table>
          </div>
          <div class="rd_ft_nav clear">
           <div class="doc_sns">
            <a class="a facebook" href=";" onclick="doc_sns(0,2083627057,'%EC%A7%80%EA%B5%AC%EC%83%81+%EC%B5%9C%EC%95%85%EC%9D%98+%EB%B2%8C%EB%A0%88')" title="페이스북에서 공유하기!">
             페이스북에서 공유하기!
            </a>
            [ahref]
            
            <span class="a" data-url="https://www.fmkorea.com/2083627057" id="kakaostory-share-button" title="카카오 스토리 공유하기!">
            </span>
           </div>
           <div class="rd_nav img_tx fr m_btn_wrp">
            <div class="m_no_533">
             <a class="back_to bubble m_no" href="p" title="위로">
              <i class="fa fa-arrow-up">
              </i>
              <b class="tx">
               위로
              </b>
             </a>
             [linkx]
             
             [ahref]
             
             <a class="comment back_to bubble if_viewer m_no" href="t" title="댓글로 가기">
              <i class="fa fa-comment">
              </i>
              <b class="tx">
               댓글로 가기
              </b>
             </a>
             [linkx]
             
             <a class="document_2083627057 action bubble m_no" href="a" onclick="return false;" title="이 게시물을...">
              <i class="fa fa-ellipsis-h">
              </i>
              <b class="tx">
               이 게시물을...[area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              </b>
             </a>
            </div>
           </div>
          </div>
         </div>
         <div id="comment">
         </div>
         <div class="fdb_lst_wrp">
          <div class="fdb_lst clear cmt_wrt_btm" id="2083627057_comment">
           <div aria-live="polite" id="cmtPosition">
            <div class="fdb_tag bg_f_f9 css3pie">
             <a class="ui_font bubble" href="#" onclick="jQuery(this).parent().nextAll('ul,.bd_pg').slideToggle();return false" title="댓글 보기/숨기기">
              댓글
              <b>
               155
              </b>
              개
             </a>
            </div>
            <ul class="fdb_lst_ul">
             <li class="fdb_itm clear comment_best comment-2" id="comment_2084275159_">
              <div class="meta">
               <span class="icon-hit">
                <i class="fa fa-star">
                </i>
                BEST
               </span>
               [ahref]
               
               <span class="date">
                16 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2084275159_694099544 xe_content">
                최악의 벌레는 하나베충 아니냐
               </div>
              </div>
              <div class="fdb_nav img_tx">
               [ahref]
               
               <span class="vote ui_font">
                <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 2084275159, this);" title="추천">
                 <em>
                  <i class="fa fa-thumbs-o-up color">
                  </i>
                  <span class="voted_count">
                   215
                  </span>
                 </em>
                </a>
                [linkx]
                
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment_best comment-2" id="comment_2083851125_">
              <div class="meta">
               <span class="icon-hit">
                <i class="fa fa-star">
                </i>
                BEST
               </span>
               [ahref]
               
               <span class="date">
                19 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2083851125_1687954023 xe_content">
                그냥 생태계 인위적으로 건드리려는 시도는 안하는게.나을듯.
                <br/>
                <br/>
                그저 사냥용으로 몇마리 들여온 토끼가 호주 작살내고 인간의 생각없는 외래종 방생이 멸종을 초래한 도도새나(몰론 그것만 원인은 아니지만 인간이 대부분의 원인을 차지하긴 하니까..)
                <br/>
                <br/>
                생태계 생각없이.인위적으로 건들였다가 역사를 돌아봐도 존망하거나 할뻔한 사례가 너무 많음.
                <br/>
                <br>
                 [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
                </br>
                모기가 병을 옮기고 해마다 사람들을 정말.많이 병으로 죽이긴 하지만..
                <br/>
                <br/>
                글에서도 마지막에 지적하고 있는 부분이잖음.
                <br/>
                <br/>
                모기를 인위적으로 제거해서 더 나아질수도 있지만 오히려 더 존망할 가능성 또한 있다고.
               </div>
              </div>
              <div class="fdb_nav img_tx">
               [linkx]
               
               <span class="vote ui_font">
                [linkx]
                
                <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 2083851125, this);" title="비추천">
                 <i class="fa fa-thumbs-o-down">
                 </i>
                 <span class="blamed_count">
                  28
                 </span>
                </a>
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment_best comment-2" id="comment_2084342082_">
              <div class="meta">
               <span class="icon-hit">
                <i class="fa fa-star">
                </i>
                BEST
               </span>
               <a class="member_983699407" href="a" onclick="return false">
                핑키
               </a>
               <span class="date">
                16 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2084342082_983699407 xe_content">
                [ahref]
                
                전혀 관련 없는 이런 글에도 하나베 하나베 거려야되냐
               </div>
              </div>
              <div class="fdb_nav img_tx">
               [linkx]
               
               <span class="vote ui_font">
                <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 2084342082, this);" title="추천">
                 <em>
                  <i class="fa fa-thumbs-o-up color">
                  </i>
                  <span class="voted_count">
                   68
                  </span>
                 </em>
                </a>
                <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 2084342082, this);" title="비추천">
                 <i class="fa fa-thumbs-o-down">
                 </i>
                 <span class="blamed_count">
                  95
                 </span>
                </a>
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment_border comment-2084686389" id="comment_2084686386">
              <div class="meta">
               <a class="member_956486881" href="a" onclick="return false">
                크쿸킄
               </a>
               <span class="date">
                10 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2084686386_956486881 xe_content">
                근데 여즘 모기있음? 작년부터 모기한테 한번도 안물림;;
               </div>
              </div>
              <div class="fdb_nav img_tx">
               <span class="vote ui_font">
                <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 2084686386, this);" title="추천">
                 <em>
                  <i class="fa fa-thumbs-o-up color">
                  </i>
                  <span class="voted_count">
                  </span>
                 </em>
                </a>
                [linkx]
                
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment-2084731842" id="comment_2084731839">
              <div class="meta">
               [linkx]
               
               <span class="date">
                10 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2084731839_70468603 xe_content">
                ㄷ
               </div>
              </div>
              <div class="fdb_nav img_tx">
               <span class="vote ui_font">
                [ahref]
                
                [linkx]
                
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment-2084776388" id="comment_2084776385">
              <div class="meta">
               [linkx]
               
               <span class="date">
                9 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2084776385_796675110 xe_content">
                좆기 박멸해야함
               </div>
              </div>
              <div class="fdb_nav img_tx">
               <span class="vote ui_font">
                <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 2084776385, this);" title="추천">
                 <em>
                  <i class="fa fa-thumbs-o-up color">
                  </i>
                  <span class="voted_count">
                  </span>
                 </em>
                </a>
                [linkx]
                
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment-2084800150" id="comment_2084800147">
              <div class="meta">
               <a class="member_1846003853" href="a" onclick="return false">
                리얼2루다가
               </a>
               <span class="date">
                9 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2084800147_1846003853 xe_content">
                시도는 이미 하고 있음. 다만 효과가 별로 없을뿐
               </div>
              </div>
              <div class="fdb_nav img_tx">
               <span class="vote ui_font">
                <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 2084800147, this);" title="추천">
                 <em>
                  <i class="fa fa-thumbs-o-up color">
                  </i>
                  <span class="voted_count">
                  </span>
                 </em>
                </a>
                [linkx]
                
               </span>
              </div>
             </li>
             <li class="fdb_itm clear comment-2085291320" id="comment_2085291314">
              <div class="meta">
               <a class="member_16559900" href="a" onclick="return false">
                Leviata
               </a>
               <span class="date">
                6 시간 전
               </span>
              </div>
              <div>
               <div class="comment_2085291314_16559900 xe_content">
                오히려 여름보다 봄가을에 모기가 설침 요즘은 ㅋㅋ
               </div>
              </div>
              <div class="fdb_nav img_tx">
               <span class="vote ui_font">
                [linkx]
                
                [ahref]
                
               </span>
              </div>
             </li>
            </ul>
            <div class="bd_pg clear">
             [ahref]
             
             <a href="/index.php?mid=best&amp;document_srl=2083627057&amp;cpage=1#2083627057_comment">
              1
             </a>
             <a href="/index.php?mid=best&amp;document_srl=2083627057&amp;cpage=2#2083627057_comment">
              2
             </a>
             <a href="/index.php?mid=best&amp;document_srl=2083627057&amp;cpage=3#2083627057_comment">
              3
             </a>
             <strong class="this">
              4
             </strong>
             [linkx]
             
            </div>
            <div class="socket_button">
             <a href=";" onclick="return notify_comment_click(this);">
              <span>
              </span>
             </a>
            </div>
           </div>
           <div class="cmt_editor" style="margin-top:0px; ">
            <label class="cmt_editor_tl fl" for="editor_2083627057">
             <strong style="padding-left:5px;">
              댓글 쓰기
             </strong>
            </label>
            <div class="bd_wrt clear">
             <div class="simple_wrt">
              <div class="text">
               [linkx]
               
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <hr class="rd_end clear" id="rd_end_2083627057"/>
        <div style="text-align:center">
         <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="6796082386" style="display:inline-block;width:728px;height:90px">
         </ins>
        </div>
        <div class="bd_lst_wrp">
         <div class="tl_srch clear">
          <div class="bd_tl">
           <h1 class="ngeb clear">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h1>
           <div class="clear">
           </div>
          </div>
         </div>
         <div class="cnb_n_list">
          <div>
           <div class="bd_cnb clear css3pie pop_more0 category0 pop_on0 best1">
            [linkx]
             [linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]<li>[area1][mkey1]</li>[area1][keywordx]
            
            <div class="dummy_ie fr">
            </div>
            <ul class="bubble bg_f_f9 css3pie" style="overflow:visible;">
             <li class="cnbMore">
              <a class="bubble" href="#" title="더보기">
               <i class="fa fa-caret-down">
               </i>
              </a>
             </li>
            </ul>
           </div>
          </div>
          <div class="lst_btn fr">
           <ul>
            <li class="classic">
             [ahref]
             
            </li>
            <li class="zine on">
             <a class="bubble" href="/index.php?mid=best&amp;listStyle=webzine&amp;page=17" title="이미지 형식">
              <b>
               이미지 형식
              </b>
             </a>
            </li>
           </ul>
          </div>
         </div>
         <table class="bd_lst bd_tb_lst bd_tb common_notice">
         </table>
         <div class="fm_best_widget _bd_pc">
          <ul>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [linkx]
             
             [linkx]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               <a href="s">
                축구소식
               </a>
               -
               [ahref]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               15 시간 전
              </span>
              <span class="author">
               / 신털링
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/2084116569">
              <span class="label">
               추천
              </span>
              <span class="count">
               113
              </span>
             </a>
             [ahref]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               [ahref]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               15 시간 전
              </span>
              <span class="author">
               / 프리미어리그
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/2084113962">
              <span class="label">
               추천
              </span>
              <span class="count">
               122
              </span>
             </a>
             <a href="/best/2084113962">
             </a>
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               <a href="r">
                유머
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 아스날우승13회
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [linkx]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               [linkx]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 아이즈원영
              </span>
             </div>
            </div>
           </li>
           <[keywordx]>
           </[keywordx]>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [linkx]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               [linkx]
               
               -
               <a href="/index.php?mid=humor&amp;category=20814660">
                추억
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 오늘도빨갛다
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [linkx]
             
             <a href="/best/2084297585">
             </a>
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               <a href="r">
                유머
               </a>
               -
               [linkx]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 루키루키해
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][mkey1][linkx]
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             <a href="/best/2081247889">
             </a>
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               <a href="y">
                미스터리
               </a>
               -
               [ahref]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / akkusa
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/2083601517">
              <span class="label">
               추천
              </span>
              <span class="count">
               100
              </span>
             </a>
             [linkx]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               [linkx]
               
               -
               <a href="/index.php?mid=football_news&amp;category=49214627">
                번역기사
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 킬리안응답해
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [linkx]
             
             <a href="/best/2080261049">
             </a>
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               <a href="e">
                기타게임
               </a>
               -
               [linkx]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 취미맨
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [linkx]
             
             <a href="/best/2084237337">
             </a>
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               <a href="r">
                유머
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 빛구찌
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [linkx]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               [area1][keywordx][ahref][area1][keywordx][linkx]
              </span>
             </div>
             <div>
              <li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [linkx]
             
             [ahref]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               [linkx]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / 순정
              </span>
             </div>
            </div>
           </li>
           <li class="li on">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [ahref]
             
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               [linkx]
               
               -
               <a href="/index.php?mid=mystery&amp;category=486614">
                자연/생물
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               16 시간 전
              </span>
              <span class="author">
               / RENE
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/2080777887">
              <span class="label">
               추천
              </span>
              <span class="count">
               125
              </span>
             </a>
             [ahref]
             
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               [ahref]
               
               -
               <a href="/index.php?mid=football_world&amp;category=181831933">
                정보/SNS
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               17 시간 전
              </span>
              <span class="author">
               / 퍙아
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [linkx]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               <a href="r">
                유머
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               17 시간 전
              </span>
              <span class="author">
               / fiello
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [ahref]
             
             <h3 class="title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div>
              <span class="category">
               <a href="r">
                유머
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               17 시간 전
              </span>
              <span class="author">
               / 홍철없는홍철팀
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             [ahref]
             
             [linkx]
             
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               [ahref]
               
               -
               [linkx]
               
              </span>
             </div>
             <div>
              <span class="regdate">
               17 시간 전
              </span>
              <span class="author">
               / LG전자
              </span>
             </div>
            </div>
           </li>
           <li class="li">
            <div class="li" style="padding-left:120px;position:relative;">
             <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/2084056564">
              <span class="label">
               추천
              </span>
              <span class="count">
               389
              </span>
             </a>
             <a href="/best/2084056564">
             </a>
             <h3 class="title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div>
              <span class="category">
               <a href="r">
                유머
               </a>
              </span>
             </div>
             <div>
              <span class="regdate">
               17 시간 전
              </span>
              <span class="author">
               / 개코지코왕코펨코
              </span>
             </div>
            </div>
           </li>
          </ul>
         </div>
         <div class="btm_mn clear">
          <div class="fl">
           <form action="/" class="bd_srch_btm on" method="get" no-error-return-url="true">
            <span class="btn_img itx_wrp">
             <button class="ico_16px search" onclick="jQuery(this).parents('form.bd_srch_btm').submit();return false;" type="submit">
              Search
             </button>
             <label for="bd_srch_btm_itx_189545458">
              검색
             </label>
            </span>
            <span class="btn_img select">
             <li>[ahref]</li>[pkeyx]<li>[ahref]</li><li>[ahref]</li>
            </span>
           </form>
          </div>
         </div>
         <form action="/" class="bd_pg clear" method="get">
          <fieldset>
           <legend class="blind">
            게시판 목록 페이징[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]
           </legend>
           <a class="direction" href="/index.php?mid=best&amp;page=7">
            <i class="fa fa-angle-left">
            </i>
            이전
           </a>
           [ahref]
           
           <span class="bubble">
            <a class="tg_btn2" data-href=".bd_go_page" href="#" title="">
             ...<li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>
            </a>
           </span>
           [ahref]
           
           [linkx]
           
           [linkx]
           
           <a href="/index.php?mid=best&amp;page=15">
            15
           </a>
           [ahref]
           
           <strong class="this">
            17
           </strong>
           [ahref]
           
           <a href="/index.php?mid=best&amp;page=19">
            19
           </a>
           [linkx]
           
           [linkx]
           
           <span class="bubble">
            <a class="tg_btn2" data-href=".bd_go_page" href="#" title="">
             ...
            </a>
           </span>
           <a class="direction" href="/index.php?mid=best&amp;page=27">
            다음
            <i class="fa fa-angle-right">
            </i>
           </a>
           <div class="bd_go_page tg_cnt2 wrp">
            <button class="tg_blur2" type="button">
            </button>
            / 17,102
            <button class="bd_btn" type="submit">
             페이지
            </button>
            <span class="edge">
            </span>
            <i class="ie8_only bl">
            </i>
            <i class="ie8_only br">
            </i>
            <button class="tg_blur2" type="button">
            </button>
           </div>
          </fieldset>
         </form>
         <div style="padding-top:15px;">
          <div style="text-align:center">
           <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="5045910021" style="display:inline-block;width:728px;height:90px">
           </ins>
          </div>
         </div>
        </div>
       </div>
       <hr/>
      </div>
     </div>
    </div>
   </div>
   <footer id="footer">
    <div class="Wrapper">
     <div class="sta mpReset">
      <ul class="ul">
      </ul>
      <hr/>
     </div>
     <div class="copyright">
      <address>
       <span style="width:100%">
        Copyright © www.fmkorea.com All rights reserved.
        <span style="margin-left:400px">
         동시 접속자: 27,553명
        </span>
       </span>
      </address>
      <div id="about-us">
      </div>
     </div>
    </div>
   </footer>
  </div>
 </div>
 <div id="waitingforserverresponse">
 </div>
 <b style="color:black;background-color:#a0ffff">
  jnice08-ipp13-wa-za-0063
 </b>
</body>
|<---