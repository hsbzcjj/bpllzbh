--->|<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8">
   <li>[area1][mkey1]</li><li>[linkx]</li><li>[area1][keywordx]</li>[pkeyx]
  </meta>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.34.0-wmf.17" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Okonjima_Lioness_edited.jpg/1200px-Okonjima_Lioness_edited.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-암사자 rootpage-암사자 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   <a id="top">
   </a>
   <div class="mw-body-content" id="siteNotice">
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키낱말사전, 말과 글의 누리
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    <a class="mw-jump-link" href="d">
     둘러보기로 가기
    </a>
    [ahref]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <h2>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <div class="thumb tright">
       <div class="thumbinner" style="width:222px;">
        [ahref]
        
        <div class="thumbcaption">
         <div class="magnify">
          <a class="internal" href="/wiki/%ED%8C%8C%EC%9D%BC:Okonjima_Lioness_edited.jpg" title="실제 크기로">
          </a>
         </div>
         암사자
        </div>
       </div>
      </div>
      <ul>
       <li>
        어원:
        <a href="/wiki/%EC%95%94" title="암">
         암[ahref][pkeyx][area1][mkey1][linkx][linkx][ahref][area1][mkey1][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][area1][mkey1][pkeyx][pkeyx][area1][mkey1][area1][keywordx][linkx][pkeyx][area1][keywordx][ahref][area1][keywordx][pkeyx][ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][ahref][ahref][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx]
        </a>
        +
        <a href="/wiki/%EC%82%AC%EC%9E%90" title="사자">
         사자
        </a>
        (한자
        <a href="/wiki/%E7%8D%85%E5%AD%90" title="獅子">
         獅子
        </a>
        )
       </li>
      </ul>
      <dl>
       <dd>
        <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
         [ahref]
         
        </span>
        <span style="color: #000; font-size: 100%;">
         <span class="IPA">
          [ahref]
          
         </span>
        </span>
       </dd>
      </dl>
      <dd>
       <span style="padding-right: .5em; color: #8F390A; font-weight: bold;">
        발음
       </span>
       [
       <span style="font-size:110%">
        암
       </span>
       <span style="font-size:110%">
        사
       </span>
       <span style="font-size:110%">
        자
       </span>
       ]
      </dd>
      <table style="margin: 0 1em .5em 1.6em;">
       <tbody>
        <tr>
         <td>
          <li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx]<li>[ahref]</li>
         </td>
        </tr>
       </tbody>
      </table>
      <ul>
       <li>
        <b>
         1.[area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>[linkx][area1][keywordx]
        </b>
        [linkx]
        
        <a href="/wiki/%EC%82%AC%EC%9E%90" title="사자">
         사자
        </a>
        를 가리키는 말. 숫사자와는 달리
        [ahref]
        
        가 없는 게
        <a href="/wiki/%ED%8A%B9%EC%A7%95" title="특징">
         특징
        </a>
        이다.
       </li>
      </ul>
      <dl>
       <dd>
        <ul>
         <li>
          암사자가 새끼들에게 젖을 물리고 있다.
         </li>
        </ul>
       </dd>
      </dl>
      <ul>
       <li>
        반의어:
        [linkx]
        
       </li>
      </ul>
      <div class="NavFrame" style="clear: both; margin: .5em 0 1em 2em;">
       <div class="NavHead" style="border-bottom: 1.2px solid #c0c0c0; text-align: left; line-height: 18pt; background-color: transparent; font-size: 100%;">
        <b>
         번역
        </b>
       </div>
       <div class="NavContent">
        <table border="0" style="padding: 3px; background-color: #f5f5f5;" width="100%">
         <tbody>
          <tr>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              그리스어(el):
              <a class="new" href="/w/index.php?title=%CE%BB%CE%B9%CE%BF%CE%BD%CF%84%CE%B1%CF%81%CE%AF%CE%BD%CE%B1&amp;action=edit&amp;redlink=1" title="λιονταρίνα (없는 문서)">
               λιονταρίνα
              </a>
              (liondarína) (여성)
             </li>
             <li>
              네덜란드어(nl):
              <a href="/wiki/leeuwin" title="leeuwin">
               leeuwin
              </a>
             </li>
             <li>
              노르웨이어(no):
              [ahref]
              
             </li>
             <li>
              덴마크어(da):
              <a href="/wiki/hunl%C3%B8ve" title="hunløve">
               hunløve
              </a>
             </li>
             <li>
              독일어(de):
              [ahref]
              
             </li>
             <li>
              라틴어(la):
             </li>
             <li>
              러시아어(ru):
              [linkx]
              
              (l'vitsa)
             </li>
             <li>
              루마니아어(ro):
             </li>
             <li>
              몽골어(mn):
             </li>
             <li>
              불가리아어(bg):
              <a href="/wiki/%D0%BB%D1%8A%D0%B2%D0%B8%D1%86%D0%B0" title="лъвица">
               лъвица
              </a>
              (lăvica)
             </li>
             <li>
              스웨덴어(sv):
             </li>
             <li>
              슬로바키아어(sk):
              [ahref]
              
             </li>
             <li>
              슬로베니아어(sl):
              [ahref]
              
             </li>
             <li>
              아랍어(ar):
             </li>
             <li>
              아이슬란드어(is):
             </li>
             <li>
              스페인어(es):
             </li>
             <li>
              에스페란토(eo):
              <a href="/wiki/leonino" title="leonino">
               leonino
              </a>
             </li>
            </ul>
           </td>
           <td style="width:1%;" valign="top">
           </td>
           <td style="width:50%; padding: .5em; background-color: #FFF;" valign="top">
            <ul>
             <li>
              영어(en):
              <a href="/wiki/lioness" title="lioness">
               lioness
              </a>
             </li>
             <li>
              우크라이나어(uk):
             </li>
             <li>
              이도(io):
             </li>
             <li>
              이탈리아어(it):
              [linkx]
              
              (여성)
             </li>
             <li>
              인도네시아어(id):
             </li>
             <li>
              인터링구아(ia):
             </li>
             <li>
              일본어(ja):
              <span class="lang-ja" lang="ja">
              </span>
             </li>
             <li>
              중국어(zh):
              <a href="/wiki/%E6%AF%8D%E7%8B%AE%E5%AD%90" title="母狮子">
               母狮子[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>[linkx]
              </a>
              (간체)/
              [linkx]
              
              (번체자) (mǔshīzi)
             </li>
             <li>
              체코어(cs):
              [linkx]
              
             </li>
             <li>
              크로아티아어(hr):
              <a href="/wiki/lavica" title="lavica">
               lavica
              </a>
             </li>
             <li>
              터키어(tr):
             </li>
             <li>
              텔루구어(te):
              [ahref]
              
              (sivaMgi)
             </li>
             <li>
              포르투갈어(pt):
              [linkx]
              
             </li>
             <li>
              <li>[area1][mkey1]</li><li>[area1][keywordx]</li><li>[ahref]</li>
             </li>
             <li>
              프랑스어(fr):
              [linkx]
              
             </li>
             <li>
              핀란드어(fi):
              [linkx]
              
             </li>
             <li>
              헝가리어(hu):
              <a class="new" href="/w/index.php?title=oroszl%C3%A1nh%C3%B6lgy&amp;action=edit&amp;redlink=1" title="oroszlánhölgy (없는 문서)">
               oroszlánhölgy
              </a>
             </li>
             <li>
              히브리어(he):
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
       </div>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [ahref]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      <a href="/wiki/%ED%8A%B9%EC%88%98:%EB%B6%84%EB%A5%98" title="특수:분류">
       분류
      </a>
      :
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [linkx]
       
      </li>
      <li id="pt-anoncontribs">
       [linkx]
       
      </li>
      <li id="pt-createaccount">
       [linkx]
       
      </li>
      <li id="pt-login">
       <a accesskey="o" href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EB%A1%9C%EA%B7%B8%EC%9D%B8&amp;returnto=%EC%95%94%EC%82%AC%EC%9E%90" title="꼭 로그인해야 하는 것은 아니지만, 로그인을 권장합니다. [o]">
        로그인
       </a>
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [linkx]
          [linkx]<li>[ahref]</li><li>[pkeyx]</li>
         
        </span>
       </li>
       <li class="new" id="ca-talk">
        토론[area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         <a href="/wiki/%EC%95%94%EC%82%AC%EC%9E%90">
          읽기
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [linkx]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         <a accesskey="h" href="/w/index.php?title=%EC%95%94%EC%82%AC%EC%9E%90&amp;action=history" title="문서의 과거 판 [h]">
          역사 보기
         </a>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <ul class="menu">
       [linkx][linkx][area1][mkey1][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][linkx][ahref][area1][mkey1][area1][keywordx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[ahref]<li>[pkeyx]</li>[area1][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][pkeyx][area1][keywordx][ahref][ahref][area1][mkey1][linkx][area1][mkey1][linkx][pkeyx][ahref][linkx][ahref]
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li><li>[area1][mkey1]</li><li>[linkx]</li>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EC%B1%85&amp;bookcmd=book_creator&amp;referer=%EC%95%94%EC%82%AC%EC%9E%90">
         책 만들기
        </a>
       </li>
       <li id="coll-download-as-rl">
        [ahref]
        
       </li>
       <li id="t-print">
        <a accesskey="p" href="/w/index.php?title=%EC%95%94%EC%82%AC%EC%9E%90&amp;printable=yes" title="이 문서의 인쇄용 판 [p]">
         인쇄용 판
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [linkx]
        
       </li>
       <li id="t-recentchangeslinked">
        [linkx]
        
       </li>
       <li id="t-upload">
        <a accesskey="u" href="/wiki/Special:UploadWizard?uselang=ko" title="파일 올리기 [u]">
         파일 올리기
        </a>
       </li>
       <li id="t-specialpages">
        [linkx]
        
       </li>
       <li id="t-permalink">
        <a href="/w/index.php?title=%EC%95%94%EC%82%AC%EC%9E%90&amp;oldid=3927497" title="문서의 이 판에 대한 고유링크">
         고유 링크
        </a>
       </li>
       <li id="t-info">
        [linkx]
        
       </li>
       <li id="t-cite">
        [area1][mkey1][area1][mkey1][linkx][area1][keywordx][linkx][linkx][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][linkx][linkx]
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-fr">
        <a class="interlanguage-link-target" href="/wiki/%EC%95%94%EC%82%AC%EC%9E%90" hreflang="fr" lang="fr" title="암사자 – 프랑스어">
         Français
        </a>
       </li>
       <li class="interlanguage-link interwiki-li">
        [linkx]
        
       </li>
       <li class="interlanguage-link interwiki-mg">
        <a class="interlanguage-link-target" href="/wiki/%EC%95%94%EC%82%AC%EC%9E%90" hreflang="mg" lang="mg" title="암사자 – 말라가시어">
         Malagasy
        </a>
       </li>
       <li class="interlanguage-link interwiki-ro">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 7월 10일 (화) 23:06에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     내용은
     [ahref]
     
     에 따라 사용할 수 있으며 추가적인 조건이 적용될 수 있습니다.
자세한 내용은
     <a href="/wiki/Terms_of_Use/ko">
      이용 약관
     </a>
     을 참조하십시오.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     <a class="extiw" href="/wiki/Privacy_policy" title="wmf:Privacy policy">
      개인정보 정책
     </a>
    </li>
    <li id="footer-places-about">
     [linkx]
     
    </li>
    <li id="footer-places-disclaimer">
     <a href="/wiki/%EC%9C%84%ED%82%A4%EB%82%B1%EB%A7%90%EC%82%AC%EC%A0%84:%EC%9C%A0%EC%9D%98%EC%82%AC%ED%95%AD" title="위키낱말사전:유의사항">
      유의사항
     </a>
    </li>
    <li id="footer-places-developers">
     [linkx]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     <a class="noprint stopMobileRedirectToggle" href="/w/index.php?title=%EC%95%94%EC%82%AC%EC%9E%90&amp;mobileaction=toggle_view_mobile">
      모바일 보기
     </a>
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0207
  </b>
 </body>
</html>
|<---