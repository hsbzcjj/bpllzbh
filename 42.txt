--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="#000000" name="theme-color">
   <meta content="#000000" name="msapplication-navbutton-color"/>
   <meta content="black-translucent" name="apple-mobile-web-app-status-bar-style"/>
   <title>
    [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="벌레들의 세상 : 오드맥스" name="application-name">
    <meta content="벌레들의 세상 : 오드맥스" name="msapplication-tooltip">
     <meta content="2017-06-09T13:55:19+09:00" property="article:published_time"/>
     <meta content="article" property="og:type"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="Odd Max" property="og:article:author"/>
     <meta content="summary_large_image" property="twitter:card"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:title"/>
     <meta content="오드맥스" property="twitter:site"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="twitter:description"/>
     <meta content="https://cdn.imweb.me/thumbnail/20170925/59c888098ff01.jpg" property="og:image"/>
     <meta content="1200" property="og:image:width"/>
     <meta content="627" property="og:image:height"/>
     <meta content="https://cdn.imweb.me/thumbnail/20170925/59c888098ff01.jpg" property="twitter:image"/>
     <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="page_ready doz_sys _body_menu_m2016093057edea1e123ff mobile-nav-on mobile_nav_dep1 page new_header_site" id="doz_body" style=";">
  <div class="notification-canvas-container" id="site_alarm_slidemenu_container">
   <div class="notification-canvas-backdrop" id="site_alarm_slidemenu_backdrop" style="display: none">
   </div>
   <div class="notification-canvas alarm-pane alarm_slide" id="site_alarm_slidemenu" style="">
    <div class="tse-scrollable _scroll_wrap" id="site_alarm_menu_tap_wrap">
     <div class="tse-content tab-content _is_tse_content" style="padding-top: 60px;">
      <div class="site-alarm-head _alarm_header">
       <header id="site_alarm_title">
        알림
       </header>
       [ahref]
       
      </div>
      <div class="site-alarm-head _setting_header" style="display: none">
       [area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
      </div>
      <div class="site_alarm_list_wrap" id="site_alarm_list_wrap">
       <div class="notify-body" id="site_alarm_tab">
       </div>
       <div class="notify-body" id="site_alarm_more_btn" style="display: none;">
        [ahref]
        
       </div>
      </div>
      <div class="site_alarm_setting_wrap" id="site_alarm_setting_wrap" style="display: none;">
       <div class="offcanvas-block alarm-setting">
        <div class="_scroll_wrap" id="site_alarm_menu_tap_wrap">
         <div class="tab-content">
          <div class="tab-pane active">
           <div class="notify-body">
            [linkx]
            
            [ahref]
             [area1][mkey1][pkeyx][area1][mkey1]
            
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="site-alarm-body">
    </div>
   </div>
  </div>
  <div class="pc_slide_menu_container" id="pc_slide_menu_wrap" style="width: 0; visibility: hidden; display: none">
   <div class="pc_slide_menu slide_menu _slide_menu" id="pc_slide_menu">
    <button class="pc-navbar-toggle" onclick="PC_SLIDE_MENU.slideNavToggle();" type="button">
     <i class="btm bt-times">
     </i>
    </button>
    <div class="pc_slide_menu_logo">
     <a href="/">
     </a>
    </div>
    <ul class="nav navbar-nav">
     <div class="viewport-nav pc _menu_wrap" style="position:relative">
      <li class="depth-01" style="">
       [ahref]
       
      </li>
      <li class="depth-01" style="">
       [ahref]
       
      </li>
      <li class="depth-01" style="">
       [ahref]
       
      </li>
      <li class="depth-01 active active-real" style="">
       <a class="_fade_link" data-has_child="N" data-is_folder_menu="N" data-url="verso" href="/verso">
        <span class="plain_name" data-hover="">
         VERSO
        </span>
       </a>
      </li>
      <li class="depth-01" style="">
       [ahref]
       
      </li>
     </div>
    </ul>
   </div>
  </div>
  <div class="mobile_slide_menu_container" id="mobile_slide_menu_wrap">
   <div class="mobile_slide_menu slide_menu _slide_menu" id="mobile_slide_menu">
    <ul class="nav navbar-nav navbar-right">
     <div class="viewport-nav mobile _menu_wrap" style="position:relative">
     </div>
    </ul>
   </div>
   <button class="navbar-toggle close slide-close" onclick="MOBILE_SLIDE_MENU.slideNavToggle();" type="button">
    <i class="btm bt-times">
    </i>
   </button>
  </div>
  <ul class="dropdown-menu animation-dock member_profile" id="member_profile">
   <li class="dropdown-profile text-center">
    [ahref]
    
    <span class="profile-info">
     <div onclick="SITE_MEMBER.editProfile()">
     </div>
     <div class="sm-padding no-padding-bottom">
     </div>
    </span>
   </li>
   <li class="profile-footer btn-group-justified">
    [ahref]
    
    <a class="btn btn-flat right" href="/logout.cm?back_url=L3ZlcnNvLz9xPVlUb3hPbnR6T2pFeU9pSnJaWGwzYjNKa1gzUjVjR1VpTzNNNk16b2lZV3hzSWp0OSZibW9kZT12aWV3JmlkeD0xMTE5MzEmdD1ib2FyZA%3D%3D">
     로그아웃
    </a>
   </li>
  </ul>
  <header id="doz_header_wrap">
   <div data-newheader="Y" id="doz_header">
    <div class="new_org_header _new_org_header">
     <div class="" id="inline_header_normal" style="min-height: 30px;">
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s201803295abc8df753008">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
        <h1>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:#fff;  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s201803295abc8df753008">
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:512px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w201803295abc8df742283">
            <div class="_widget_data" data-widget-type="inline_button">
             [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx]
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:512px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w201803295abc8df744c7d">
            <div class="_widget_data" data-widget-type="inline_login_btn">
             <div class="widget inline_widget login_btn button button_text txt_l text-xx-small">
              <div>
               <div class="inline-blocked login_btn_item">
                <a class="_fade_link btn_text btn_704dnF384D btn_custom" href=";" onclick="SITE_MEMBER.openLogin('L3ZlcnNvLz9xPVlUb3hPbnR6T2pFeU9pSnJaWGwzYjNKa1gzUjVjR1VpTzNNNk16b2lZV3hzSWp0OSZibW9kZT12aWV3JmlkeD0xMTE5MzEmdD1ib2FyZA%3D%3D', 'null', null, 'Y');" style="border-radius:0px; ">
                 <span class="icon_class">
                  <i class="fixed_transform fa fa-user-o">
                  </i>
                 </span>
                 <span class="text fixed_transform no_text">
                 </span>
                </a>
               </div>
               <div class="inline-blocked login_btn_item">
                <a class="_fade_link btn_text btn_8KVFEN6SU6 btn_custom" href="/shop_cart" style="border-radius:0px; ">
                 <span class="icon_class">
                  <i class="fixed_transform simple icon-basket">
                  </i>
                 </span>
                 <span class="text fixed_transform no_text">
                 </span>
                 <span class="badge_wrap">
                  <sup class="badge _shop_cart_badge_cnt_wrap" style="top:auto; bottom:-5px; right: -5px">
                  </sup>
                 </span>
                </a>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s201803295abc8df7530b5">
       [area1][mkey1]<li>[linkx]</li><li>[area1][mkey1]</li>[area1][keywordx][area1][mkey1]
      </div>
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s201803295abc8df75315d">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:#fff;  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s201803295abc8df75315d">
         <div class="inline-col-group inline-col-group-center" data-col-group="center" data-type="col-group">
          <div class="inline-col" data-type="grid">
           <div class="inline-row" data-type="row">
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]<li>[area1][mkey1]</li>[ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
           </div>
           <div class="inline-row" data-type="row">
            <div class="inline-col" data-type="grid">
             <li>[area1][mkey1]</li><li>[area1][keywordx]</li>[area1][mkey1]<li>[linkx]</li>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="" id="inline_header_mobile" style="min-height: 30px;">
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s201803295abc8df766b91">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:#ffffff;  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s201803295abc8df766b91">
         <h2>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h2>
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:109px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w201803295abc8df75f809">
            <div class="_widget_data" data-widget-type="inline_menu_btn">
             <div class="widget inline_widget icon_type_menu st00" id="w201803295abc8df75f809">
              [linkx]
              
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-center" data-col-group="center" data-type="col-group">
          <div class="inline-col" data-type="grid">
           <div class="inline-row" data-type="row">
            <div class="inline-col" data-type="grid">
             <div class="inline-widget" data-type="widget" id="w201809185ba09836241b0">
              <div class="_widget_data" data-widget-type="inline_padding">
               <div class="widget inline_widget padding" data-height="34" data-width="30">
                <div id="padding_w201809185ba09836241b0" style="min-width:5px; min-height:5px; height:34px;">
                 <li>[linkx]</li><li>[linkx]</li><li>[pkeyx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="inline-row" data-type="row">
            <div class="inline-col" data-type="grid">
             <div class="inline-row" data-type="row">
              <div class="inline-col" data-type="grid">
               <div class="inline-widget" data-type="widget" id="w201803295abc8df75c8c0">
                <div class="_widget_data" data-widget-type="inline_logo">
                 <div class="widget inline_widget logo text_inline" id="logo_w201803295abc8df75c8c0">
                  <div class="img_box _img_box" style="position: relative;">
                   [ahref]
                   
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
             <div class="inline-row" data-type="row">
              <div class="inline-col" data-type="grid">
               <div class="inline-widget" data-type="widget" id="w201902235c70b0e124c88">
                <div class="_widget_data" data-widget-type="inline_padding">
                 <div class="widget inline_widget padding" data-height="34" data-width="30">
                  <div id="padding_w201902235c70b0e124c88" style="min-width:5px; min-height:5px; height:34px;">
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:109px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w201803295abc8df761ff1">
            <div class="_widget_data" data-widget-type="inline_login_btn">
             <div class="widget inline_widget login_btn button button_text txt_l text-xx-small">
              <div>
               <div class="inline-blocked login_btn_item">
                <a class="_fade_link btn_text btn_59e036883ad24 btn_custom" href="/shop_cart" style="border-radius:0px; ">
                 <span class="icon_class">
                  <i class="fixed_transform simple icon-basket">
                  </i>
                 </span>
                 <span class="text fixed_transform no_text">
                 </span>
                 <span class="badge_wrap">
                  <sup class="badge _shop_cart_badge_cnt_wrap" style="top:auto; bottom:-5px; right: -5px">
                  </sup>
                 </span>
                </a>
               </div>
               <div class="inline-blocked login_btn_item">
                [linkx]
                
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="inline-section-wrap" data-type="carousel_menu" id="mobile_carousel_menu">
       <div class="inline-inside _inline-inside">
        <div class="mobile_carousel_nav fixed_transform _mobile_nav" id="mobile_carousel_nav">
         <div class="mobile_nav_depth depth_0 depth_first st05 _mobile_navigation_menu" id="mobile_carousel_menu_0">
          <div class="nav-item _item" data-url="shop">
           <a class="_fade_link" href="/shop" style="">
            <span class="plain_name" data-hover="">
             SHOP
            </span>
           </a>
          </div>
          <div class="nav-item _item" data-url="about">
           <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx]
          </div>
          <div class="nav-item _item" data-url="customerservice">
           <a class="_fade_link" href="/customerservice" style="">
            <span class="plain_name" data-hover="">
             CUSTOMER SERVICE
            </span>
           </a>
          </div>
          <div class="nav-item _item active" data-url="verso">
           <a class="_fade_link" href="/verso" style="">
            <span class="plain_name" data-hover="">
             VERSO
            </span>
           </a>
          </div>
          <div class="nav-item _item" data-url="27">
           [linkx]
           
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </header>
  <div class="section_wrap pc_section section_first _section_first mobile_section_first side_ lr_margin_none" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s2016093057edea2de1696" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    [area1][mkey1][pkeyx][ahref][ahref]
   </main>
  </div>
  <footer id="doz_footer_wrap">
   <div id="doz_footer">
    <div class="footer-section footer-type05 _footer_font_preview footer_align_center footer_align_right">
     <div class="inside">
      <div class="doz_row">
       <div class="col-dz-12 col-xdz-12 col-dz">
        <div class="foot-custom">
         <div class="custom-text _footer_text">
          <div class="custom-text-info _text_editor fr-view">
           <p>
            © 2018  Studio Glue
           </p>
          </div>
         </div>
         <div class="foot-foot-nav _footer_menu_wrap">
          <ul class="nav nav-stacked footer-all-nav clearfix">
           <div class="_policy_menu policy_menu" style="">
            <li class="_use_policy_menu">
             [ahref]
             
            </li>
            <li class="_use_policy_menu">
             <a href="/?mode=privacy" onclick="SITE.openPrivacy(); return false;">
              개인정보처리방침
             </a>
            </li>
           </div>
           <div class="_tour_policy_menu policy_menu" style="display:none;">
           </div>
           <div class="_footer_menu footer_menu" style="display:none;">
           </div>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </footer>
  <iframe id="hidden_frame" name="hidden_frame" style="position: absolute; left: -9999px; width: 1px; height: 1px; top:-9999px;">
  </iframe>
  <div aria-hidden="true" class="modal" id="cocoaModal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal submodal" id="cocoaSubModal" role="dialog" style="z-index: 17001">
   <div class="modal-dialog">
    <div class="modal-content">
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0048
  </b>
 </body>
</html>
|<---