--->|<!DOCTYPE html>
<html class="recipe default cns-has-banner-top-size-initial" lang="en">
 <head>
 </head>
 <body class="page-recipe page-id-5d4992f7b54cd4000979ea4e">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-TLPN5X9" style="display:none;visibility:hidden" width="0">
    <li>[ahref]</li><li>[area1][keywordx]</li>[area1][keywordx]
   </iframe>
  </noscript>
  <div data-cns="cns-slot-out-of-page">
  </div>
  <div data-cns="cns-slot-modal">
  </div>
  <div class="cns--banner_top cns--banner_top_slideshow cns--banner_top_listicle">
  </div>
  <div id="react-app">
   <div class="page-container recipe" data-react-checksum="-1139660946" data-reactid="1" data-reactroot="">
    <nav class="side-nav" data-reactid="3">
     <div class="CloseIcon side-nav-close-btn" data-reactid="4">
      <svg aria-labelledby="CloseIconID" data-reactid="5" height="14" role="img" viewbox="0 0 14 14" width="14" xmlns="http://www.w3.org/2000/svg">
       <title data-reactid="6" id="CloseIconID">
        [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </title>
       <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
       <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
       <path d="M5.473 7l-5.473 5.473 1.527 1.527 5.473-5.473 5.473 5.473 1.527-1.527-5.473-5.473 5.473-5.473-1.527-1.527-5.473 5.473-5.473-5.473-1.527 1.527 5.473 5.473z" data-reactid="7">
       </path>
      </svg>
     </div>
     <div class="side-nav-logo-container" data-reactid="8">
      [ahref]
      
     </div>
     <div class="side-nav-scrollable" data-reactid="11">
      <div class="side-nav-container" data-reactid="12">
       <div class="side-nav-links" data-reactid="13">
        <span class="LogInOutLink" data-reactid="15">
         <a class="LoginLink" data-reactid="16" href="m" id="crd-login-elem">
          Login<li>[area1][keywordx]</li><li>[area1][mkey1]</li>[ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         </a>
        </span>
       </div>
       <ul data-reactid="18">
        <li class="side-nav-item" data-reactid="19">
         [ahref]
         
        </li>
        <li class="side-nav-item" data-reactid="21">
         [linkx]
         
        </li>
        <li class="side-nav-item" data-reactid="23">
         [ahref]
         
        </li>
        <li class="side-nav-item" data-reactid="25">
         [ahref]
         
        </li>
        <li class="side-nav-item" data-reactid="27">
         [linkx]
          [ahref][ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>
         
        </li>
        <li class="side-nav-item" data-reactid="29">
         [ahref]
         
        </li>
        <li class="side-nav-item" data-reactid="31">
         [ahref]
         
        </li>
        <li class="side-nav-item" data-reactid="33">
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="side-nav-footer" data-reactid="35">
       <div class="newsletter-copy" data-reactid="36">
        Subscribe to our newsletter
       </div>
       <div class="newsletter-form" data-reactid="37">
        <div class="" data-reactid="38" id="newsletter-enter-email">
         <button class="newsletter-enter-email-button" data-reactid="40" id="submit">
          Sign Up
         </button>
        </div>
        <div class="form-message newsletter-form--message" data-reactid="41">
        </div>
       </div>
       <div class="newsletter-tos" data-reactid="42">
        [linkx]
        
        and
        [ahref]
        
       </div>
       <ul class="social-links" data-reactid="46">
        <li class="follow-us-li follow-us-facebook" data-reactid="47">
         [ahref]
         
        </li>
        <li class="follow-us-li follow-us-instagram" data-reactid="50">
         [ahref]
         
        </li>
        <li class="follow-us-li follow-us-twitter" data-reactid="53">
         [linkx]
         
        </li>
        <li class="follow-us-li follow-us-pinterest" data-reactid="56">
         [linkx]
         
        </li>
        <li class="follow-us-li follow-us-youtube" data-reactid="59">
         <a data-reactid="60" href="/channel/UCbpMy0Fg74eXXkvxJrtEn3w" title="youtube">
          <span class="follow-us-icon" data-reactid="61">
          </span>
         </a>
        </li>
       </ul>
      </div>
     </div>
    </nav>
    <div class="site-overlay" data-reactid="63">
    </div>
    <span data-reactid="64">
    </span>
    <header class="site-header site-header--default" data-reactid="65">
     <div class="Header" data-reactid="66">
      <div class="Header__container" data-reactid="67">
       <div class="NavIcon" data-reactid="68">
        <svg aria-labelledby="NavIconID" data-reactid="69" height="10" viewbox="0 0 15 10" width="15" xmlns="http://www.w3.org/2000/svg">
         <title data-reactid="70" id="NavIconID">
          Main Navigation Icon
         </title>
         <path d="M0 10v-2h15v2h-15zm0-4v-2h15v2h-15zm0-4v-2h15v2h-15z" data-reactid="71">
         </path>
        </svg>
       </div>
       <header class="Header__logo" data-reactid="72">
        [linkx]
        
       </header>
       <div class="Header__text_links Header__text_links--default" data-reactid="86">
        <div class="header-engagement-links" data-reactid="87">
         <span class="LogInOutLink" data-reactid="88">
          [linkx]
          
         </span>
        </div>
       </div>
       <div class="SearchIcon" data-reactid="93">
        <li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]<li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
       </div>
      </div>
     </div>
    </header>
    <div class="post-layout" data-reactid="96">
     <header class="post__header_container theme--grey" data-reactid="97">
      <div class="max-width-container" data-reactid="98">
       [linkx]
       
       <h1 class="post__header__hed undefined" data-reactid="100" itemprop="name">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h1>
       <div class="ba-social-share default-social-share vertical no-labels horizontal-sm-and-below" data-reactid="104">
        <div class="component-social-share closed" data-component="SocialShare" data-reactid="105" role="list">
         <div class="share-item facebook" data-component="facebook" data-href="https://www.facebook.com/sharer/sharer.php?u=&amp;t=" data-reactid="106" role="listitem">
          [ahref]
           <li>[linkx]</li>[ahref][ahref]<li>[linkx]</li><li>[area1][mkey1]</li>
          
         </div>
         <div class="share-item pinterest" data-component="pinterest" data-href="https://www.pinterest.com/pin/create/button/?url=&amp;media=https%3A%2F%2Fassets.bonappetit.com%2Fphotos%2F5d4dc6a93bde88000879f7cc%2F16%3A9%2Fw_750%2Cc_limit%2FBA-0819-Go-Live-Grilled-Potato-Salad.jpg&amp;description=" data-reactid="110" role="listitem">
          [ahref]
          
         </div>
         <div class="share-item twitter" data-component="twitter" data-href="https://twitter.com/share?text=&amp;url=" data-reactid="114" role="listitem">
          <a aria-label="Tweet" data-reactid="115" href="/share?text=&amp;url=" rel="noopener" target="_blank">
           <span class="icon" data-reactid="116">
           </span>
           <span class="label" data-reactid="117">
            Twitter
           </span>
          </a>
         </div>
         <div class="share-item email" data-component="email" data-href="mailto:?subject=&amp;body=" data-reactid="118" role="listitem">
          [linkx]
          
         </div>
        </div>
       </div>
      </div>
     </header>
     <figure class="clearfix md-ratio-16x9 sm-ratio-1x1 xs-ratio-1x1 toutimagenarrow has-ba-social-share--media has-figcaption" data-reactid="122">
      <div class="expand-to-parent outset md-ratio-16x9 sm-ratio-1x1 xs-ratio-1x1 component-rendition ba-picture size_w940 size_h0 xl_w2560 xl_h0 lg_w1280 lg_h0 md_w1028 md_h0 sm_w768 sm_h768 xs_w414 xs_h414 ratio-size-16x9 ratio-xl-16x9 ratio-lg-16x9 ratio-md-16x9 ratio-sm-1x1 ratio-xs-1x1" data-component="Rendition" data-reactid="123" style="background-image:url(https://assets.bonappetit.com/photos/5d4dc6a93bde88000879f7cc/master/w_10,c_limit/BA-0819-Go-Live-Grilled-Potato-Salad.jpg);background-size:cover;background-repeat:no-repeat;">
       [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx]
      </div>
      <figcaption class="toutimagenarrow-credit" data-reactid="131">
       <cite class="credit align-to-container" data-reactid="132">
        Photo by Chelsie Craig, Food Styling by Pearl Jones, Plate by Heath Ceramics[linkx][area1][keywordx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][linkx][area1][keywordx][linkx][area1][mkey1][linkx][ahref][linkx][ahref][area1][mkey1][ahref][area1][mkey1][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1]
       </cite>
      </figcaption>
     </figure>
     <div class="row dek-section row--Main" data-component="Row" data-reactid="133">
      <div class="col col-xs-12 col-sm-12 col-md-12" data-component="Col" data-reactid="134">
       <div class="post-dek-meta" data-reactid="135">
        <span class="recipe__header__servings recipe__header__servings--basically" data-reactid="136">
         <span data-reactid="137">
          4 servings
         </span>
        </span>
        <span data-reactid="138">
        </span>
       </div>
       <h2 class="dek--basically" data-reactid="139">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <div class="print-row-container align-to-container" data-reactid="140">
        [linkx]
        
        <button class="basically_print_button" data-reactid="143">
         Print
        </button>
       </div>
      </div>
     </div>
     <div class="grid grid--post-layout" data-component="Grid" data-reactid="144">
      <div data-reactid="145">
       <div class="row row--MainWithSidebar" data-component="Row" data-reactid="146">
        <div class="col col-xs-4 col-sm-10 col-md-8 col--MainWithSidebar col--main-content" data-component="Col" data-reactid="147">
         <div class="content-group" data-reactid="148">
          <div class="row ingredients-area" data-component="Row" data-reactid="149">
           <div class="ingredients__inner" data-reactid="150">
            <h3 class="subhed" data-reactid="151">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="ingredients" data-reactid="152">
             <div class="ingredientsGroup" data-reactid="153">
              <h3 class="ingredients__group__header" data-reactid="154">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
              <ul class="ingredients__group" data-reactid="155">
               <li class="ingredient" data-reactid="156">
                <div class="ingredients__text" data-reactid="157">
                 2 lb. baby Yukon Gold potatoes
                </div>
               </li>
               <li class="ingredient" data-reactid="158">
                <div class="ingredients__text" data-reactid="159">
                 ½ cup kosher salt, plus more
                </div>
               </li>
               <li class="ingredient" data-reactid="160">
                <div class="ingredients__text" data-reactid="161">
                 ⅔ cup unseasoned rice vinegar
                </div>
               </li>
               <li class="ingredient" data-reactid="162">
                <div class="ingredients__text" data-reactid="163">
                 3 Tbsp. fish sauce
                </div>
               </li>
               <li class="ingredient" data-reactid="164">
                <div class="ingredients__text" data-reactid="165">
                 1 Tbsp. honey
                </div>
               </li>
               <li class="ingredient" data-reactid="166">
                <div class="ingredients__text" data-reactid="167">
                 ¼ cup plus 3 Tbsp. extra-virgin olive oil, plus more for drizzling
                </div>
               </li>
               <li class="ingredient" data-reactid="168">
                <div class="ingredients__text" data-reactid="169">
                 2 red Fresno chiles, thinly sliced
                </div>
               </li>
               <li class="ingredient" data-reactid="170">
                <div class="ingredients__text" data-reactid="171">
                 1 large red onion
                </div>
               </li>
               <li class="ingredient" data-reactid="172">
                <div class="ingredients__text" data-reactid="173">
                 3 garlic cloves
                </div>
               </li>
               <li class="ingredient" data-reactid="174">
                <div class="ingredients__text" data-reactid="175">
                 2 cups basil leaves
                </div>
               </li>
               <li class="ingredient" data-reactid="176">
                <div class="ingredients__text" data-reactid="177">
                 2 Tbsp. toasted sesame seeds
                </div>
               </li>
              </ul>
             </div>
            </div>
           </div>
          </div>
          <div class="cns--native-recipe-ad" data-reactid="178">
          </div>
          <div class="row steps-area" data-component="Row" data-reactid="179">
           <h3 class="subhed recipe-prep" data-reactid="180">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
           <div class="steps-wrapper" data-reactid="181">
            <ul class="steps" data-reactid="183">
             <li class="step" data-reactid="184">
              <div data-reactid="185">
               <p data-reactid="186">
                Cover potatoes with 3 qt. water in a large saucepan. Stir in ½ cup salt. Bring to a simmer over medium-high heat. Reduce heat to medium and continue to simmer until potatoes are just tender when pierced with a skewer or paring knife, about 12 minutes. Drain and let cool slightly.
               </p>
              </div>
             </li>
             <li class="step" data-reactid="187">
              <div data-reactid="188">
               <p data-reactid="189">
                Meanwhile, prepare a grill for medium heat. Whisk vinegar, fish sauce, honey, and 3 Tbsp. oil in a small bowl. Stir in chiles. Season dressing with salt; set aside.
               </p>
              </div>
             </li>
             <li class="step" data-reactid="190">
              <div data-reactid="191">
               <p data-reactid="192">
                Cut onion in half through the root, then cut each half into 5 wedges so that they’re still held together by the root.
               </p>
              </div>
             </li>
             <li class="step" data-reactid="193">
              <div data-reactid="194">
               [linkx]
               
              </div>
             </li>
             <li class="step" data-reactid="196">
              <div data-reactid="197">
               <p data-reactid="198">
                Grill potatoes and onion wedges, turning occasionally, until charred all over, 12–15 minutes. Wipe out bowl you tossed the potatoes in, then return potatoes and onions to bowl when they’re finished grilling.
               </p>
              </div>
             </li>
             <li class="step" data-reactid="199">
              <div data-reactid="200">
               <p data-reactid="201">
                Pour dressing over potatoes, tossing to coat. Add basil (tearing any large leaves in half) and sesame seeds. Taste and season with salt if needed, then toss again to combine.
               </p>
              </div>
             </li>
             <li class="step" data-reactid="202">
              Transfer potato salad to a serving bowl. Drizzle with oil.[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][mkey1][linkx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][mkey1][pkeyx]
             </li>
            </ul>
           </div>
          </div>
          <div class="row util-print-hide" data-component="Row" data-reactid="205">
           <div class="contributors" data-reactid="206">
            <div class="contributor contributor-recipe-author" data-reactid="207">
             <span class="contributor-type" data-reactid="208">
              Recipe by
             </span>
             <span class="contributor-name" data-reactid="209">
              Molly Baz
             </span>
            </div>
           </div>
          </div>
         </div>
         <span class="visuallyhidden" data-reactid="211" id="reviews">
          Reviews Section
         </span>
         <div class="review-section" data-reactid="212">
          <div class="row row--review-form" data-component="Row" data-reactid="213">
           <h3 class="subhed" data-reactid="214">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][pkeyx][area1][mkey1][linkx][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][linkx]
           </h3>
           <span class="LogInOutLink ReviewForm__textarea" data-reactid="215">
            [ahref]
            
           </span>
          </div>
          <div class="row row--reviews" data-component="Row" data-reactid="218">
          </div>
         </div>
        </div>
        <div class="col col-xs-4 col-sm-12 col-md-4 col--MainWithSidebar col--secondary" data-component="Col" data-reactid="219">
         <div data-reactid="220">
          <div class="component-stickybox component-stickybox-ba" data-component="Stickybox" data-reactid="221" style="height:auto;">
           <div class="inner" data-reactid="222" style="width:auto;">
            <div class="sticky-video-target" data-reactid="223">
            </div>
            <div class="cns--box_top" data-reactid="224">
            </div>
            <div class="secondary-content" data-reactid="225">
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="row" data-component="Row" data-reactid="227">
      <div class="col" data-component="Col" data-reactid="228">
       <div class="outbrain-section" data-reactid="229">
        <div class="component-outbrain" data-reactid="230">
         <div class="OUTBRAIN outbrain-content" data-ob-template="Bonappetit" data-reactid="231" data-src="https://www.bonappetit.com/recipe/grilled-potato-salad-with-chiles-and-basil" data-widget-id="AR_4">
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="row row--cm-nl" data-component="Row" data-reactid="232">
      <div class="card basically-cm CMCard placement basically-cm" data-reactid="233">
       <div class="placement_inner" data-reactid="234">
        <div class="cm-unit cm-unit--has-graphic" data-reactid="235">
         <p class="cm-copy" data-reactid="236">
          GET THE MAGAZINE
         </p>
         [ahref]
         
         [linkx]
         
        </div>
       </div>
      </div>
      <div class="card NewsletterCard placement NewsletterCard placement basically-newsletter" data-reactid="251">
       <div class="placement_inner placement_inner" data-reactid="252">
        <p class="placement__dek placement__dek" data-reactid="253">
         Sign up for the Bon Appétit
        </p>
        <h3 class="card-hed-xl placement__hed placement__hed" data-reactid="254">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        <div class="newsletter-form" data-reactid="255">
         <div class="" data-reactid="256" id="newsletter-enter-email">
          <button class="newsletter-enter-email-button" data-reactid="258" id="submit">
           Sign Up
          </button>
         </div>
         <div class="form-message newsletter-form--message" data-reactid="259">
         </div>
        </div>
        <p class="newsletter-tos" data-reactid="260">
         Will be used in accordance with our
         [ahref]
         
         and
         [ahref]
         
        </p>
       </div>
      </div>
     </div>
     <div class="keywords tag-bar" data-reactid="267">
      <h3 class="content-widget-header" data-reactid="268">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      [ahref]
      
      [ahref]
      
      [ahref]
      
      [linkx]
      
      [linkx]
       <li>[linkx]</li>[pkeyx][linkx]<li>[area1][keywordx]</li>[area1][mkey1]
      
      [ahref]
      
      [ahref]
      
      [linkx]
      
      [linkx]
      
      [ahref]
      
      [linkx]
      
      <a class="keyword" data-reactid="280" href="/ingredient/garlic">
       Garlic
      </a>
      [ahref]
      
      [ahref]
      
     </div>
    </div>
    <div data-reactid="283">
     <div class="riser ba-recirc-riser" data-reactid="284">
      <div class="riser-header-wrapper" data-reactid="285">
       <div class="riser-header-tab" data-reactid="286">
        <span class="riser-header-tab-text" data-reactid="287">
         More from Bon Appétit
        </span>
        <div aria-pressed="false" class="toggle-riser" data-reactid="288" role="button" tabindex="0">
        </div>
       </div>
      </div>
      <div class="riser-content-wrapper" data-reactid="289">
       <span class="riser-item-wrapper riser-item-wrapper--VIDEO" data-reactid="290">
        <div class="riser-item" data-reactid="291">
         [linkx]
         
        </div>
       </span>
       <span class="riser-item-wrapper riser-item-wrapper--RECIPE" data-reactid="299">
        <div class="riser-item" data-reactid="300">
         [ahref]
         
        </div>
       </span>
       <span class="riser-item-wrapper riser-item-wrapper--RECIPE" data-reactid="308">
        <div class="riser-item" data-reactid="309">
         <a data-reactid="310" href="/recipe/stir-fried-eggplant-with-pork#intcid=recommendations_ba-riser-similar_5dcd50bf-8a7d-465d-9206-7585e36e7040_cral1-1">
          <div class="riser-image-wrapper" data-reactid="311">
          </div>
          <div class="riser-text-wrapper" data-reactid="313">
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][pkeyx][ahref][pkeyx][linkx][pkeyx][area1][keywordx]
          </div>
         </a>
        </div>
       </span>
       <span class="riser-item-ad" data-reactid="317">
        <div class="cns--riser-ad" data-reactid="318">
        </div>
       </span>
      </div>
     </div>
    </div>
    <section class="site-footer site-footer" data-reactid="319">
     <div class="secondary-content" data-reactid="320">
      react-empty: 321 <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]<li>[area1][keywordx]</li>
     </div>
     <div class="site-footer-container" data-reactid="322" data-tracking-type="site-footer-nav">
      [ahref]
      
      <div class="social-links__container" data-reactid="336">
       <ul class="social-links" data-reactid="337">
        <li class="follow-us-li follow-us-instagram" data-reactid="338">
         [ahref]
         
        </li>
        <li class="follow-us-li follow-us-facebook" data-reactid="341">
         [ahref]
         
        </li>
        <li class="follow-us-li follow-us-twitter" data-reactid="344">
         [linkx]
         
        </li>
        <li class="follow-us-li follow-us-pinterest" data-reactid="347">
         [linkx]
         
        </li>
        <li class="follow-us-li follow-us-youtube" data-reactid="350">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="site-footer__nav" data-reactid="353">
       <ul class="site-footer-nav-container" data-reactid="354">
        <li class="site-footer-nav-item" data-reactid="355">
         [ahref]
         
        </li>
        <li class="site-footer-nav-item" data-reactid="357">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item" data-reactid="359">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item" data-reactid="361">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item" data-reactid="363">
         [linkx]
         
        </li>
        <li class="site-footer-nav-item" data-reactid="365">
         [ahref]
         
        </li>
        <li class="site-footer-nav-item" data-reactid="367">
         [ahref]
         
        </li>
       </ul>
       <div class="site-footer-corporate-links" data-reactid="369">
        <ul class="site-footer-conde-container" data-reactid="370">
         <li class="site-footer-nav-item" data-reactid="371">
          [ahref]
           [ahref][area1][mkey1]<li>[area1][keywordx]</li>[ahref]<li>[linkx]</li>
          
         </li>
         <li class="site-footer-nav-item" data-reactid="373">
          [ahref]
          
         </li>
         <li class="site-footer-nav-item" data-reactid="375">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      [linkx]
      
      <section class="site-footer-legal" data-reactid="378">
       <p data-reactid="379">
        Food Innovation Group:
        [ahref]
        
        and
        [linkx]
        
        <br data-reactid="384"/>
        © 2019 Condé Nast. All rights reserved.
        <br data-reactid="386"/>
        Use of and/or registration on any portion of this site constitutes acceptance of our
        [ahref]
        
        (updated 5/25/18) and
        [ahref]
        
        (updated 5/25/18).
        <br data-reactid="392"/>
        Bon Appétit may earn a portion of sales from products that are purchased through our site as part of our affiliate partnerships with retailers.
        <br data-reactid="394"/>
        [ahref]
        
        <br data-reactid="396"/>
        The material on this site may not be reproduced, distributed, transmitted, cached or otherwise used, except with the prior written permission of Condé Nast.
       </p>
       <div class="ad-choice" data-reactid="398">
        [linkx]
        
       </div>
      </section>
      <select class="site-footer-sites-dropdown" data-reactid="400">
       <option data-reactid="401" value="">
        Our Sites
       </option>
       <option data-reactid="402" disabled="" value="">
        - - - - - - - - - - - - - -
       </option>
       <option data-reactid="403" disabled="" value="">
        Condé Nast Digital
       </option>
       <option data-reactid="404" value="http://www.allure.com/">
        Allure
       </option>
       <option data-reactid="405" value="http://www.architecturaldigest.com/">
        Architectural Digest
       </option>
       <option data-reactid="406" value="http://www.arstechnica.com/">
        Ars Technica
       </option>
       <option data-reactid="407" value="http://www.backchannel.com/">
        Backchannel[area1][mkey1]<li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]
       </option>
       <option data-reactid="408" value="http://www.brides.com/">
        Brides
       </option>
       <option data-reactid="409" value="http://cntraveler.com">
        Condé Nast Traveler
       </option>
       <option data-reactid="410" value="http://www.epicurious.com/">
        Epicurious
       </option>
       <option data-reactid="411" value="http://www.glamour.com/">
        Glamour
       </option>
       <option data-reactid="412" value="http://www.golfdigest.com/">
        Golf Digest
       </option>
       <option data-reactid="413" value="http://www.golfworld.com/">
        Golf World
       </option>
       <option data-reactid="414" value="http://www.gq.com/">
        GQ
       </option>
       <option data-reactid="415" value="http://www.gqstyle.com/">
        GQ Style
       </option>
       <option data-reactid="416" value="http://www.pitchfork.com/">
        Pitchfork
       </option>
       <option data-reactid="417" value="http://www.self.com/">
        Self
       </option>
       <option data-reactid="418" value="http://www.teenvogue.com/">
        Teen Vogue
       </option>
       <option data-reactid="419" value="http://www.newyorker.com/">
        The New Yorker
       </option>
       <option data-reactid="420" value="http://thescene.com/">
        The Scene
       </option>
       <option data-reactid="421" value="http://www.vanityfair.com/">
        Vanity Fair
       </option>
       <option data-reactid="422" value="http://www.vogue.com/">
        Vogue
       </option>
       <option data-reactid="423" value="http://www.wmagazine.com/">
        W
       </option>
       <option data-reactid="424" value="http://www.wired.com/">
        Wired
       </option>
      </select>
     </div>
    </section>
    <div data-reactid="425" id="amzn-assoc-ad-b564d740-ff5e-49fe-bf49-faf18447a2e4">
    </div>
   </div>
  </div>
  <iframe height="0" scrolling="no" src="https://js-sec.indexww.com/um/ixmatch.html" style="display: none;" width="0">
  </iframe>
  <div id="parsely-root" style="display: none">
   <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref][linkx]<li>[ahref]</li><li>[area1][mkey1]</li>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0299
  </b>
 </body>
</html>
|<---