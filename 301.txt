--->|<!DOCTYPE html>
<html lang="ko">
 <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# books: http://ogp.me/ns/books#">
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <meta charset="utf-8">
   <meta content="telephone=no" name="format-detection"/>
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
    <meta content="208688205808637" property="fb:app_id"/>
    <meta content="summary_large_image" name="twitter:card"/>
    <meta content="@ridibooks" name="twitter:site"/>
    <meta content="books.book" property="og:type"/>
    <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
    <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
    <meta content="https://misc.ridibooks.com/cover/647000022/xxlarge" property="og:image"/>
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
    <meta content="1000000000" property="books:isbn"/>
    <meta content="4.5" property="books:rating:value"/>
    <meta content="5" property="books:rating:scale"/>
    <meta content="0.9" property="books:rating:normalized_value"/>
    <meta content="https://static.ridibooks.com/books/dist/favicon/favicon_win8.png" name="msapplication-TileImage"/>
    <meta content="#1f8ee6" name="msapplication-TileColor"/>
    <meta content="#ffffff" name="theme-color"/>
    <title>
     [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </title>
   </meta>
  </meta>
 </head>
 <body class="pc_device" id="ridi_books">
  <div id="base_tools_wrapper">
   [linkx]
   
   <p id="access_check" style="padding: 20px; text-align: center; border: 1px solid #dfdfdf; background: #fafafa; font-size: 14px; color: #333; line-height: 1.6em;">
    리디북스 접속이 원활하지 않습니다. 새로 고침(F5)해주세요.
    <br/>
    계속해서 문제가 발생한다면 리디북스 접속 테스트를 통해 원인을 파악하고 대응 방법을 안내드리겠습니다.
    <br/>
    [ahref]
    
   </p>
  </div>
  <div id="base_contents_wrapper">
   <header id="books_header">
    <nav class="GNBNavigation">
     <ul class="GNBNavigation_List">
      <li class="GNBNavigation_Item">
       [ahref]
       
      </li>
      <li class="GNBNavigation_Item">
       [ahref]
       
      </li>
     </ul>
    </nav>
    <div class="header_top">
     <div class="top_contents">
      <div class="top_left">
       <h1 id="main_logo">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
       <div class="search_wrap js_search_wrap">
        <form action="/search" class="search_input_box_wrapper" id="search_form">
         <fieldset class="search_field">
          <legend class="indent_hidden">
           리디북스 검색
          </legend>
          <label class="indent_hidden" for="book_search_input">
           서점 전체 검색어 입력
          </label>
          <span class="icon-search">
          </span>
          <button class="btn_reset_search_input js_btn_reset_search_input" type="button">
           <span class="icon-close_2 delete_icon">
           </span>
           <span class="indent_hidden">
            검색어 삭제
           </span>
          </button>
          <button class="indent_hidden" type="submit">
           검색
          </button>
         </fieldset>
        </form>
        <div class="search_preview" id="book_search_result">
        </div>
        <div class="search_history_wrap js_search_history_wrap">
         <p class="search_history_title">
          최근 검색어
         </p>
         <ul class="js_search_history" id="search_history">
          <li class="js_search_history_tmpl">
           [ahref]
           
           <button class="btn_del_history js_btn_del_history" type="button">
            <span class="icon-close_2 btn_clear_history_item">
            </span>
            <span class="indent_hidden">
             최근 검색어 제거
            </span>
           </button>
          </li>
         </ul>
         <p class="search_history_blankslate display_if_history_disabled">
          <span class="icon-exclamation_3">
          </span>
          '검색어 저장 끄기'로 설정되어 있습니다.
         </p>
         <div class="search_history_actions">
          <button class="btn_action js_btn_clear_history" type="button">
           전체 삭제
          </button>
          <div class="right">
           <button class="btn_action js_btn_turn_off_history" type="button">
            검색어 저장 끄기
           </button>
           <button class="btn_action display_if_history_disabled js_btn_turn_on_history" type="button">
            검색어 저장 켜기
           </button>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="top_right">
       <ul class="right_list_wrapper">
        <li class="top_right_item menu_join">
         [linkx]
         
        </li>
        <li class="top_right_item menu_login">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <hr class="clear_both"/>
    </div>
    <div class="Header_Middle_Wrapper" id="Header_Middle_Wrapper">
     <div class="Header_Middle">
      <nav class="Header_Middle_CategoryNav">
       <button class="CategoryNav_AllCategories_Button" id="show_all_menu_btn" type="button">
        <span class="CategoryNav_AllCategories_Icon">
        </span>
        카테고리
       </button>
       <ul class="CategoryNav_Category_List">
        <li class="CategoryNav_Category_Item">
         [ahref]
         
        </li>
        <li class="CategoryNav_Category_Item">
         [linkx]
         
        </li>
        <li class="CategoryNav_Category_Item">
         [ahref]
         
        </li>
        <li class="CategoryNav_Category_Item">
         [ahref]
         
        </li>
        <li class="CategoryNav_Category_Item">
         [ahref]
         
        </li>
       </ul>
      </nav>
      <ul class="Header_Middle_SpecialNav_List">
       <li class="SpecialNav_Item">
        [ahref]
        
       </li>
       <li class="SpecialNav_Item">
        [ahref]
        
       </li>
      </ul>
      <div id="all_menu">
       <h2 class="indent_hidden">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <div class="all_menu_wrapper">
        <button id="hide_all_menu_btn" type="button">
         <span class="hide_all_menu_icon icon-menu_2">
         </span>
         카테고리
         <span class="indent_hidden">
          닫기
         </span>
        </button>
        <div class="menu_column menu_general">
         <div class="column_box">
          <div class="list_wrap list_normal">
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_0 active">
            [ahref][area1][keywordx][linkx][area1][mkey1][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][linkx][area1][mkey1][linkx][area1][mkey1][linkx][pkeyx][area1][mkey1][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_1">
            <h3>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/210">
               경영일반
              </a>
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
               [area1][keywordx][ahref][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_2">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/410">
               인문
              </a>
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_3">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/320">
               기획/창의/리더십
              </a>
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <li>[area1][mkey1]</li><li>[area1][keywordx]</li>[linkx][pkeyx]
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_4">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
               [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][linkx][area1][mkey1][area1][mkey1][area1][keywordx][linkx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][pkeyx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_5">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/810">
               국내여행
              </a>
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/820">
               해외여행
              </a>
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_6">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_7">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_8">
            <h3>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_9">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [pkeyx][linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/1906">
               진로 탐색
              </a>
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/1907">
               유학/MBA
              </a>
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_10">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/2230">
               컴퓨터/앱 활용
              </a>
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_11">
            <h3>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/520">
               스타일/뷰티
              </a>
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_12">
            <h3>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/610">
               결혼/임신/출산
              </a>
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_13">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/1320">
               어린이
              </a>
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_14">
            <h3>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="pc_hover js_general_menu_wrapper general_menu_wrapper general_category_15">
            <h3>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="sub_category_wrapper">
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              <a class="sub_category_link" href="/category/2002">
               문학/교양
              </a>
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
             <li class="sub_category_list">
              [linkx]
              
             </li>
             <li class="sub_category_list">
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
        <div class="menu_column menu_general_sub">
         <div class="column_box">
         </div>
        </div>
        <div class="menu_column menu_etc">
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]<li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
        </div>
        <div class="menu_column menu_etc">
         <div class="column_box">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="sub_category_link" href="/category/1716">
             스포츠물
            </a>
           </li>
           <div class="category_separate">
           </div>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <ul>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="menu_column menu_etc">
         <div class="column_box">
          <h3>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="sub_category_link" href="/category/1519">
             드라마
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="sub_category_link" href="/category/1527">
             판타지/SF
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="menu_column menu_etc">
         <div class="column_box">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <ul>
           <li>
            <a class="sub_category_link" href="/category/4002">
             국내 소설
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
          <h3>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <hr class="clear_both"/>
      </div>
     </div>
     <hr class="clear_both"/>
    </div>
   </header>
   <div id="books_contents">
    <div>
     <div id="page_detail">
      <div class="detail_wrap">
       <div class="detail_body_wrap">
        <section class="detail_body">
         <h2 class="indent_hidden">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h2>
         <article class="detail_header trackable" data-track-params='{"section":"detail", "obj_id": "647000022", "type":"product", "tags":{"name": "[특별 무료공개] 이토 히로부미, 안중근을 쏘다"}}' data-track-type="ga,echo">
          <div class="header_info_wrap">
           <p class="info_category_wrap">
            <a href="/category/100">
             소설
            </a>
            <span aria-hidden="true" class="icon-arrow_2_right">
            </span>
            [linkx]
            
            ,
            [ahref]
            
            <span aria-hidden="true" class="icon-arrow_2_right">
            </span>
            [linkx]
            
           </p>
           <div class="info_title_wrap">
            <h3 class="info_title_wrap">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
           </div>
           <div class="info_metadata_wrap">
            <p class="metadata_rate">
             <span class="RSGBookMetadata_StarRate">
              <span class="StarRate_IconBox">
               <span class="StarRate_IconFill" style="width: 90%">
               </span>
              </span>
              <span class="StarRate_Score">
               4.5점
              </span>
              <span class="StarRate_ParticipantCount">
               2
               <span class="StarRate_ParticipantCount_Unit">
                명
               </span>
              </span>
              <span class="StarRate_HiddenElement">
               참여
              </span>
             </span>
            </p>
           </div>
           <div class="info_metadata_wrap">
            <p class="metadata metadata_writer">
             <span class="metadata_item author_item_wrapper">
              <a class="js_author_detail_link author_detail_link" href="/author/1461">
               조동성
              </a>
              ,
              [linkx]
              
              외
              <span class="js_scroll_to_author_section_button scroll_to_author_section_button">
               1명
              </span>
              저
             </span>
            </p>
            <p class="metadata file_info publisher_info">
             [ahref]
             
             출판
            </p>
           </div>
           <div id="select_info_component">
           </div>
           <div id="notice_component">
           </div>
           <div class="info_price_wrap">
            <div class="info_price_table">
             <div>
              <table class="price_table normal_price_table price_free">
               <tbody>
                <tr class="selling_price_row">
                 <td class="price_type">
                  판매가
                 </td>
                 <td class="book_price">
                  무료
                 </td>
                 <td class="discount_rate">
                 </td>
                </tr>
               </tbody>
              </table>
             </div>
            </div>
           </div>
           <div class="info_buttons_wrap">
            <ul class="info_buttons rui_button_group_6">
             <li class="rui_button_item">
              <button class="rui_button_white_50 btn_wish js_add_wishlist trackable" data-track-params='{"section":"detail", "obj_id": "647000022", "type":"wishlist",  "u_id": "", "tags":{"name": "[특별 무료공개] 이토 히로부미, 안중근을 쏘다", "price": "0", "brand": "IWELL", "quantity": "1", "action": "add"}}' data-track-type="ga" type="button">
               <span aria-hidden="true" class="icon-heart_1">
               </span>
               <span class="indent_hidden">
                위시리스트에 담기
               </span>
              </button>
             </li>
             <li class="rui_button_item">
              <button class="rui_button_white_50 btn_cart js_add_cart trackable" data-track-params='{"section":"detail", "obj_id": "647000022", "type":"cart", "u_id": "", "tags":{"name": "[특별 무료공개] 이토 히로부미, 안중근을 쏘다", "price": "0", "brand": "IWELL", "quantity": "1", "action": "add"}}' data-track-type="ga" type="button">
               <span aria-hidden="true" class="icon-cart_1">
               </span>
               <span class="indent_hidden">
                카트에 담기
               </span>
              </button>
             </li>
             <li class="rui_button_item">
              [ahref]
              
             </li>
             <li class="rui_button_item">
              <button class="rui_button_blue_50 btn_all_buy js_download_book" data-book-id="647000022" data-type="free" type="button">
               다운로드
              </button>
             </li>
            </ul>
           </div>
          </div>
          <div class="header_thumbnail_wrap">
           <div class="header_thumbnail book_macro_200 detail_scalable_thumbnail">
            <div class="book_thumbnail_wrapper" data-book_id_for_tracking="647000022">
             <div class="book_thumbnail">
              <div class="thumbnail_image">
               <span class="border">
               </span>
              </div>
             </div>
            </div>
           </div>
           <div class="header_pre_reading js_pre_reading">
            <a class="rui_button_blue_line_40 btn_pre_reading" href="/books/647000022/preview">
             <span class="button_contents">
              <span class="button_icon">
              </span>
              <span class="button_text">
               미리보기
              </span>
             </span>
            </a>
           </div>
          </div>
          <hr class="clear_both"/>
          <div class="Header_Metadata_Block">
           <ul class="Header_Metadata_List" title="출간 및 파일 정보">
            <li class="Header_Metadata_Item book_info published_date_info">
             <span class="Header_Metadata_Type">
              출간 정보
             </span>
             <ul class="Header_Metadata_Detail_List">
              <li class="published_date_info Header_Metadata_Detail_Item">
               2009.10.20.
 전자책 출간
              </li>
             </ul>
            </li>
            <li class="Header_Metadata_Item book_info">
             <span class="Header_Metadata_Type">
              파일 정보
             </span>
             <ul class="Header_Metadata_Detail_List">
              <li class="file_info file_format_info Header_Metadata_Detail_Item-inline-separated">
               EPUB
              </li>
              <li class="file_info file_size_info Header_Metadata_Detail_Item-inline-separated">
               0.5MB
              </li>
              <li class="file_info character_count_info Header_Metadata_Detail_Item-inline-separated">
               약 2.6만 자
              </li>
             </ul>
            </li>
           </ul>
           <ul class="Header_Metadata_List" title="지원 기기 및 기능">
            <li class="Header_Metadata_Item">
             <p class="metadata_support_tts_info">
              <span class="info_title Header_Metadata_Type">
               듣기 기능
              </span>
              <span class="Header_Metadata_Detail tts_info">
               <span class="Header_Metadata_Detail_Item_Icon icon-tts_1">
               </span>
               듣기 가능
              </span>
             </p>
            </li>
            <li class="Header_Metadata_Item">
             <div class="metadata_support_device_info">
              <span class="info_title Header_Metadata_Type">
               지원 기기
              </span>
              <ul class="device_info_list_wrapper Header_Metadata_Detail_List">
               <li class="Header_Metadata_Detail_Item-inline available_wrapper">
                <span class="icon-paper_1 available_os Header_Metadata_Detail_Item_Icon">
                </span>
                PAPER
               </li>
               <li class="Header_Metadata_Detail_Item-inline available_wrapper">
                <span class="icon-ios available_os Header_Metadata_Detail_Item_Icon">
                </span>
                iOS
               </li>
               <li class="Header_Metadata_Detail_Item-inline available_wrapper">
                <span class="icon-android available_os Header_Metadata_Detail_Item_Icon">
                </span>
                Android
               </li>
               <li class="Header_Metadata_Detail_Item-inline available_wrapper">
                <span class="icon-windows available_os Header_Metadata_Detail_Item_Icon">
                </span>
                PC
               </li>
               <li class="Header_Metadata_Detail_Item-inline available_wrapper">
                <span class="icon-osx available_os Header_Metadata_Detail_Item_Icon">
                </span>
                Mac
               </li>
              </ul>
             </div>
            </li>
           </ul>
          </div>
         </article>
         <article class="detail_box_module detail_introduce_book">
          <div class="rsg_title01">
           <h3 class="title_text">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
          </div>
          <div class="introduce_section js_introduce_section" id="introduce_book">
           <p class="introduce_paragraph folded">
            <span class="indent_hidden">
             <[특별 무료공개] 이토 히로부미, 안중근을 쏘다>
            </span>
            1909년 10월 26일
            <br>
             안중근, 하얼빈에서 이토 히로부미를 저격한다.
             <br>
              1939년 10월 16일
              <br/>
              안중근의 아들 안준생, 박문사에서
              <br/>
              이토 히로부미의 아들 이토 히로쿠니에게 사죄한다.
              <br/>
              <br/>
              나라를 팔고 아비를 판 더러운 자식… 친일파… 변절자…
              <br/>
              사람들은 그에게 호부견자(虎父犬子: 호랑이 아비에 개 같은 자식)라 손가락질했다. 백범 김구는 중국경찰에 요청해 안준생을 죽이려 했다.
              <br/>
              영웅의 아들이었던 그가 가슴 아픈 선택을 하고 말았던 이유, 조국으로부터 아무런 보호도 받지 못한 채 변절자가 된 그의 이야기를 하고 싶었다. 단죄하고 묻어버리기 보다 그를 그렇게 만든 우리 모두의 책임을 반성해봐야 했기에…….
              <br/>
              <br/>
              <본문 중에서>
              <br/>
              며칠 후, 위령제가 열렸다. 얼마 전부터 떠돌던 믿어지지 않는 소문을 확인하려는 사람들로 박문사는 엄청나게 붐볐다. 내선일체를 부르짖는 미나미 총독의 연설이 끝나고 이토 히로쿠니가 무대에 올랐다. 이토 히로부미의 아들이라는 소개에 열화와 같은 박수가 터졌다. 미나미 총독이 안준생을 불러 안중근의 아들이라 소개했다. 장내가 더욱 소란스러워졌다. 미나미 총독은 둘을 무대 가운데로 인도했다. 마주보고 섰다. 이토 히로쿠니가 오른손을 내밀었다. 준생은 허리를 숙이고 두 손으로 악수를 받았다. 환호와 탄식이 동시에 터져나왔다.
              <br/>
              다음 날, 일본 신문들은 ‘테러리스트 안중근의 자식이 아비 대신 용서를 구했다’고 전했다.
              <br/>
              -  <준생> 中
              <br/>
              <br/>
              호부견자(虎父犬子)라더군요. 호랑이 아비에 개 같은 자식. 하하…….
              <br/>
              그럼 나더러 어쩌란 말입니까? 그 자리에서 제안을 단호히 거절하고 잡혀 죽어야 했나요? 영웅 아버지처럼 위대하고 영광스럽게?
              <br/>
              사실 아버지는 재판도 받고 가시는 날까지 시끌벅적하기라도 했지만, 나는 알아주는 사람도 없고 그야말로 개죽음 아니었을까요?
              <br/>
              내 형은 7살 나이에 자기가 왜 당해야 하는지도 모르고 독을 먹고 죽어버렸죠. 나도 그렇게 죽었어야 했단 말입니까? 아무도 기억 못하고 아무런 의미도 없는 그런 죽음을?
              <br/>
              왜? 내가 안중근의 아들이어서?
              <br/>
              -  <준생> 中
              <br/>
              <br/>
              이 책의 목적은 다음 3가지 이야기를 전하는 것이다.
              <br/>
              첫째, 안중근은 의사가 아니라 장군이었다는 것.
              <br/>
              둘째, 안중근은 한국만의 영웅이 아니라 동양 전체의 영웅이었다는 것.
              <br/>
              셋째, 안준생의 친일이라는 비극적 역사가 있었다는 것.
              <br/>
              -  <후기> 中
              <br/>
              <br/>
              <br/>
              <출판사 리뷰>
              <br/>
              이토 히로부미 안중근을 쏘다
              <br/>
              역사학계와 경영학계의 두 거장이 발굴해낸 가슴 아픈 역사
              <br/>
              <br/>
              2009년 10월 26일은 안중근이 하얼빈에서 이토 히로부미를 사살한지 100주년이 되는 날이다. 모든 언론과 국민들의 관심이 자랑스러운 영웅 안중근에게 모아지고 있으며, 그를 기념한 무수히 많은 책과 공연들이 쏟아지고 있다.
              <br/>
              <br/>
              그러나 혹시 알고 있는가? 영웅 안중근의 위대한 승리 뒤에 너무도 비극적이어서 누가 감히 꺼낼 수 없었던 처절한 역사가 숨어있다는 것을……. 하얼빈 거사 30년 후인 1939년 10월 16일, 안중근의 아들 안준생은 박문사(일본이 이토 히로부미를 기념하기 위해 남산 장충단에 지은 절)에서 이토 히로부미의 아들 이토 히로쿠니에게 사죄한다. 아버지를 버린 안준생은 미나미 지로 조선총독의 양아들이 되고, 일본 신문들은 “테러리스트 안중근의 아들이 아비 대신 용서를 구했다!”라고 전했다.
              <br/>
              모든 한국인들이 가슴을 치며 안타까워했고, 백범 김구는 더러운 변절자를 처형하겠다며 안준생의 암살을 시도하기도 했다. 한국 근현대사에서 가장 빛나는 영웅의 아들이었던 안준생은 대체 왜 이런 가슴 아픈 선택을 하고 말았을까?
              <br/>
              <br/>
              한국을 대표하는 역사학자 이태진 서울대 국사학과 명예교수와 조마리아(안중근의 母)의 후손 조동성 서울대 경영대 교수가 원작을 쓰고 이들의 제자인 김성민 작가가 살을 붙인 <이토 히로부미 안중근을 쏘다>는 역사적 사실에 바탕을 둔 소설형식으로 이 슬픈 이야기를 풀어내고 있다. 전체 120페이지, 1시간이면 가볍게 읽을 수 있는 책이지만 가슴에 남는 울림이 무겁다. 영웅 아버지를 둔 덕에 그 어떤 평화와 행복도 누리지 못하고 평생을 일본의 탄압과 감시 속에 힘겹게 살아야 했던 평범했던 아들, 결국에는 아버지를 부정하고 겨레를 더럽히는 선택을 강요받는 극단적인 비극에 던져져야 했던 심약한 영혼의 절규가 들리는 듯하다.
              <br/>
              “왜 나는 안준생으로 살 수 없었죠? 왜 나는 내 삶을 선택할 기회도 없이 이런 운명에 던져져야 했죠?”
              <br/>
              <br/>
              책에서는 안준생의 슬픈 이야기뿐만 아니라, 독립군장군이자 위대한 사상가였던 안중근의 새로운 면모도 발견할 수 있다. 독립전쟁 중 따뜻한 인간애를 발휘하여 포로를 풀어준 일, 그 일로 적의 습격을 받아 부대가 전멸을 당한 일, 한국의 평화뿐만 아니라 동양 전체의 평화를 구상하고 EU보다 100여년 앞선 동북아 경제공동체론을 주장한 일 등 미처 몰랐던 그의 이야기들이 담겨 있다.
              <br/>
              <br/>
              장군 안중근의 하얼빈 거사 100주년을 맞아 가슴 아프지만 꼭 기억하고 되새겨야 하는 것들을 전하는 책이다. 조광한 전 한국가스공사 감사가 저자들에게 제안했다는 제목 <이토 히로부미 안중근을 쏘다>가 더없이 서글프다.
             </br>
            </br>
           </p>
           <button class="view_more js_view_more" type="button">
            펼쳐보기
            <span class="icon-arrow_6_down">
            </span>
           </button>
          </div>
         </article>
         <hr/>
         <article class="detail_box_module detail_introduce_author js_detail_introduce_author">
          <div class="rsg_title01">
           <h3 class="title_text">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h3>
          </div>
          <div class="profile_nav_bar_wrapper">
           <div class="profile_nav_bar overthrow">
            <ul class="profile_category_wrapper">
             <li class="profile_category">
              <h4 class="category_title">
               저자
              </h4>
              <ul class="category_list_wrapper">
               <li class="category_list">
                <span class="icon-dot_1">
                </span>
                [linkx]
                
               </li>
               <li class="category_list">
                <span class="icon-dot_1">
                </span>
                [ahref]
                
               </li>
               <li class="category_list">
                <span class="icon-dot_1">
                </span>
                [ahref]
                
               </li>
              </ul>
             </li>
            </ul>
           </div>
           <div class="category_nav_button_wrapper">
            <button class="category_nav_button button_prev" style="display: none" type="button">
             <span class="indent_hidden">
              이전 리스트
             </span>
             <span class="icon-arrow_8_left">
             </span>
            </button>
            <button class="category_nav_button button_next" style="display: none" type="button">
             <span class="indent_hidden">
              다음 리스트
             </span>
             <span class="icon-arrow_8_right">
             </span>
            </button>
           </div>
          </div>
          <div class="author_wrapper">
           <div class="author_area_wrapper">
            <div class="author_profile">
             <div class="profile_right">
              <div class="author_name_wrapper">
               <li>[area1][keywordx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              </div>
              <ul class="profile_list_wrapper">
               <li class="profile_list list_nationality">
                <span class="list_title">
                 국적
                </span>
                <span class="list_contents">
                 대한민국
                </span>
               </li>
               <li class="profile_list list_birth">
                <span class="list_title">
                 출생
                </span>
                <span class="list_contents">
                 1949년 1월 12일
                </span>
               </li>
               <li class="profile_list list_education">
                <span class="list_title">
                 학력
                </span>
                <span class="list_contents">
                 헬싱키대학교  명예박사
                 <br/>
                 2007년 인제대학교 철학과 명에박사
                 <br/>
                 1977년 하버드대학교 경영대학원 경영학 박사
                 <br/>
                 1973년 볼링그린 주립대학교 대학원 경영학 석사
                 <br/>
                 1971년 서울대학교 경영학과 학사
                </span>
               </li>
               <li class="profile_list list_education">
                <span class="list_title">
                 경력
                </span>
                <span class="list_contents">
                 서울대학교 경영대학 명예교수
                 <br/>
                 희망제작소 이사
                 <br/>
                 한국 프로축구 연맹 사외이사
                 <br/>
                 안중근의사기념관 관장
                 <br/>
                 국자동차공업협회 산하 코리아오토포럼 회장
                </span>
               </li>
               <li class="profile_list list_award">
                <span class="list_title">
                 수상
                </span>
                <span class="list_contents">
                 1999년  산업포장
                </span>
               </li>
              </ul>
             </div>
            </div>
            <p class="modify_request_wrapper">
             <span class="update_date">
              2015.03.06.
 업데이트
             </span>
             [ahref]
             
            </p>
           </div>
           <div class="author_books_wrapper">
            <div class="header_wrapper">
             <li>[linkx]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[pkeyx]
            </div>
            <div class="books_wrapper">
             <div class="bookmacro_wrapper book_macro_90 book_macro_portrait book_macro_column_5">
              <div class="book_thumbnail_wrapper" data-book_id_for_tracking="647000022">
               <div class="book_thumbnail">
                <div class="thumbnail_image">
                 <span class="border">
                 </span>
                </div>
                [ahref]
                
               </div>
              </div>
              <div class="book_metadata_wrapper">
               <h3 class="book_metadata meta_title">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h3>
               <p class="book_metadata star_rate hidden_for_landscape">
                <span class="RSGBookMetadata_StarRate">
                 <span class="StarRate_IconBox">
                  <span class="StarRate_IconFill" style="width: 90%">
                  </span>
                 </span>
                 <span class="StarRate_Score">
                  4.5점
                 </span>
                 <span class="StarRate_ParticipantCount">
                  2
                  <span class="StarRate_ParticipantCount_Unit">
                   명
                  </span>
                 </span>
                 <span class="StarRate_HiddenElement">
                  참여
                 </span>
                </span>
               </p>
              </div>
             </div>
             <hr/>
             <div class="bookmacro_wrapper book_macro_90 book_macro_portrait book_macro_column_5">
              <div class="book_thumbnail_wrapper" data-book_id_for_tracking="645000142">
               <div class="book_thumbnail">
                <div class="thumbnail_image">
                 <span class="border">
                 </span>
                </div>
                <a class="thumbnail_btn trackable" data-track-params="" data-track-type="beacon,ga" href="/v2/Detail?id=645000142">
                 <span class="indent_hidden">
                  상세페이지 바로가기
                 </span>
                </a>
               </div>
              </div>
              <div class="book_metadata_wrapper">
               <h3 class="book_metadata meta_title">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h3>
               <p class="book_metadata star_rate hidden_for_landscape">
                <span class="RSGBookMetadata_StarRate">
                 <span class="StarRate_IconBox">
                  <span class="StarRate_IconFill" style="width: 96%">
                  </span>
                 </span>
                 <span class="StarRate_Score">
                  4.8점
                 </span>
                 <span class="StarRate_ParticipantCount">
                  17
                  <span class="StarRate_ParticipantCount_Unit">
                   명
                  </span>
                 </span>
                 <span class="StarRate_HiddenElement">
                  참여
                 </span>
                </span>
               </p>
              </div>
             </div>
             <hr/>
             <div class="bookmacro_wrapper book_macro_90 book_macro_portrait book_macro_column_5">
              <div class="book_thumbnail_wrapper" data-book_id_for_tracking="645000197">
               <div class="book_thumbnail">
                <div class="thumbnail_image">
                 <span class="border">
                 </span>
                </div>
                [ahref]
                
               </div>
              </div>
              <div class="book_metadata_wrapper">
               <h3 class="book_metadata meta_title">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h3>
               <p class="book_metadata star_rate hidden_for_landscape">
                <span class="RSGBookMetadata_StarRate">
                 <span class="StarRate_IconBox">
                  <span class="StarRate_IconFill" style="width: 100%">
                  </span>
                 </span>
                 <span class="StarRate_Score">
                  5.0점
                 </span>
                 <span class="StarRate_ParticipantCount">
                  2
                  <span class="StarRate_ParticipantCount_Unit">
                   명
                  </span>
                 </span>
                 <span class="StarRate_HiddenElement">
                  참여
                 </span>
                </span>
               </p>
              </div>
             </div>
             <hr/>
             <div class="bookmacro_wrapper book_macro_90 book_macro_portrait book_macro_column_5">
              <div class="book_thumbnail_wrapper" data-book_id_for_tracking="117000221">
               <div class="book_thumbnail">
                <div class="thumbnail_image">
                 <span class="border">
                 </span>
                </div>
                [linkx]
                
               </div>
              </div>
              <div class="book_metadata_wrapper">
               <h3 class="book_metadata meta_title">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h3>
               <p class="book_metadata star_rate hidden_for_landscape">
                <span class="RSGBookMetadata_StarRate">
                 <span class="StarRate_IconBox">
                  <span class="StarRate_IconFill" style="width: 0%">
                  </span>
                 </span>
                 <span class="StarRate_HiddenElement">
                  참여
                 </span>
                </span>
               </p>
              </div>
             </div>
             <hr/>
             <div class="bookmacro_wrapper book_macro_90 book_macro_portrait book_macro_column_5">
              <div class="book_thumbnail_wrapper" data-book_id_for_tracking="754002002">
               <div class="book_thumbnail">
                <li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </div>
              </div>
              <div class="book_metadata_wrapper">
               <h3 class="book_metadata meta_title">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h3>
               <p class="book_metadata star_rate hidden_for_landscape">
                <span class="RSGBookMetadata_StarRate">
                 <span class="StarRate_IconBox">
                  <span class="StarRate_IconFill" style="width: 0%">
                  </span>
                 </span>
                 <span class="StarRate_HiddenElement">
                  참여
                 </span>
                </span>
               </p>
              </div>
             </div>
             <hr class="clear_both"/>
            </div>
            [linkx]
            
            <hr class="clear_both"/>
           </div>
           <div class="spinner_wrapper">
           </div>
           <div class="spin">
           </div>
          </div>
         </article>
         <hr/>
         <article class="detail_box_module detail_introduce_author">
          <div class="rsg_title01" style="margin-bottom: 15px">
           <h3 class="title_text">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
          </div>
          <div class="introduce_section js_introduce_section" id="introduce_writer">
           <p class="introduce_paragraph folded">
            저자 - 이태진 서울대 국사학과 명예교수
            <br/>
            조선시대와 일제강점기, 고종의 자력근대화 노력 등을 연구하던 중 의사(義士)가 아닌 사상가(思想家) 안중근을 발견하고 그의 진면목을 알리기 위해 원작을 썼다.
            <br/>
            <br/>
            조동성 서울대 경영대학 교수
            <br/>
            조마리아(안중근의 母)의 후손. 일가이기에 들을 수 있었던 비극적 역사로부터 무엇을 배우고 무엇을 기억할 것인가 고민하며 원작을 썼다.
            <br/>
            <br/>
            김성민 아이웰콘텐츠 대표
            <br/>
            알려지지 않았던 충격적 역사에 비감(悲感)을 느끼며
            <br/>
            두 스승의 글에 살을 붙였다.
           </p>
           <button class="view_more js_view_more" type="button">
            펼쳐보기
            <span class="icon-arrow_6_down">
            </span>
           </button>
          </div>
         </article>
         <article class="detail_box_module detail_book_table">
          <div class="rsg_title01">
           <h3 class="title_text">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
          </div>
          <div class="introduce_section js_introduce_section" id="book_table">
           <p class="introduce_paragraph folded">
            프롤로그
            <br/>
            중근
            <br/>
            준생
            <br/>
            에필로그
            <br/>
            깊이 읽기
            <br/>
            참고문헌
            <br/>
            후기
           </p>
           <button class="view_more js_view_more" type="button">
            펼쳐보기
            <span class="icon-arrow_6_down">
            </span>
           </button>
          </div>
         </article>
         <hr/>
         <article class="detail_box_module detail_review js_detail_review" id="detail_review">
          <div class="rsg_title01">
           <h3 class="title_text">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h3>
          </div>
          <div id="review_info_section">
           <div class="review_input_left">
            <h4 class="buyer_score_title">
             구매자 별점
            </h4>
            <p class="buyer_score">
             <span class="score">
              4.5
             </span>
             <span class="indent_hidden">
              점
             </span>
            </p>
            <p class="buyer_star_score">
             <span class="RSGBookMetadata_StarRate">
              <span class="StarRate_IconBox">
               <span class="StarRate_IconFill" style="width: 90%">
               </span>
              </span>
             </span>
            </p>
            <h4 class="indent_hidden">
             점수비율
            </h4>
            <ul class="score_graph">
             <li>
              <span class="icon-star_filled">
              </span>
              5
              <span class="score_bg">
               <span class="score_bar" style="width: 50%;">
               </span>
              </span>
             </li>
             <li>
              <span class="icon-star_filled">
              </span>
              4
              <span class="score_bg">
               <span class="score_bar" style="width: 50%;">
               </span>
              </span>
             </li>
             <li>
              <span class="icon-star_filled">
              </span>
              3
              <span class="score_bg">
               <span class="score_bar" style="width: 0%;">
               </span>
              </span>
             </li>
             <li>
              <span class="icon-star_filled">
              </span>
              2
              <span class="score_bg">
               <span class="score_bar" style="width: 0%;">
               </span>
              </span>
             </li>
             <li>
              <span class="icon-star_filled">
              </span>
              1
              <span class="score_bg">
               <span class="score_bar" style="width: 0%;">
               </span>
              </span>
             </li>
            </ul>
            <p class="score_people_num">
             <strong>
              2
             </strong>
             명이 평가함
            </p>
           </div>
           <div class="review_input_right">
            <h4 class="indent_hidden">
             리뷰 작성 영역
            </h4>
            <div class="review_input_wrapper js_review_input_wrapper rate_after">
             <div class="star_rate_wrapper js_star_rate_wrapper">
              <div class="star_tip_wrapper">
               <p class="tip_title js_rating_title active">
                이 책을 평가해주세요!
               </p>
               <div class="my_star_rate js_my_star_rate">
                <p class="rate_title">
                 내가 남긴 별점
                 <span class="rate_num js_rate_num">
                  0.0
                 </span>
                </p>
                <button class="rate_cancel_button js_rate_cancel_button" type="button">
                 취소
                </button>
               </div>
               <p class="star_tip js_star_tip">
                <span class="icon-arrow_1_down">
                </span>
                별로예요
               </p>
               <p class="star_tip js_star_tip">
                <span class="icon-arrow_1_down">
                </span>
                그저 그래요
               </p>
               <p class="star_tip js_star_tip">
                <span class="icon-arrow_1_down">
                </span>
                보통이에요
               </p>
               <p class="star_tip js_star_tip">
                <span class="icon-arrow_1_down">
                </span>
                좋아요
               </p>
               <p class="star_tip js_star_tip">
                <span class="icon-arrow_1_down">
                </span>
                최고예요
               </p>
               <p class="star_tip js_rating_cancel_tip rating_cancel_tip">
                <span class="icon-arrow_1_down">
                </span>
                별점 취소
               </p>
              </div>
              <div class="star_rate_touch_area js_star_rate_touch_area">
               <span class="separate_bar">
               </span>
               <label class="js_star" data-rating="1" for="star1">
                <span class="indent_hidden">
                 별 1개
                </span>
               </label>
               <span class="separate_bar">
               </span>
               <label class="js_star" data-rating="2" for="star2">
                <li>[linkx]</li>[area1][mkey1]<li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
               </label>
               <span class="separate_bar">
               </span>
               <label class="js_star" data-rating="3" for="star3">
                <span class="indent_hidden">
                 별 3개
                </span>
               </label>
               <span class="separate_bar">
               </span>
               <label class="js_star" data-rating="4" for="star4">
                <span class="indent_hidden">
                 별 4개
                </span>
               </label>
               <span class="separate_bar">
               </span>
               <label class="js_star" data-rating="5" for="star5">
                <span class="indent_hidden">
                 별 5개
                </span>
               </label>
              </div>
              <div class="spin js_spin">
              </div>
              <div class="spinner_wrapper js_spinner_wrapper">
              </div>
             </div>
             <form class="js_review_input_form review_input_form">
              <div class="review_textarea_wrapper js_review_textarea_wrapper">
              </div>
              <div class="write_review_bottom">
               <div class="buttons_wrapper">
                <div class="write_tip_button_wrapper">
                 <button class="rui_button_white_30 tip_button js_write_tip_btn" id="write_tip_button" type="button">
                  <span class="rui_button_contents">
                   <span class="rui_button_icon">
                   </span>
                   <span class="rui_button_text">
                    리뷰 작성 유의사항
                   </span>
                  </span>
                 </button>
                </div>
                <div class="spolier_and_wirte_button_wrapper">
                 <div class="spoiler_input_wrapper">
                  <label class="rui_checkbox_label spoiler_input_label" for="spoiler_radio_input_write">
                   스포일러가 있습니다.
                  </label>
                 </div>
                 <div class="write_button_wrapper">
                  <button class="rui_button_blue_30 js_review_write_btn write_button disabled" type="submit">
                   리뷰 남기기
                  </button>
                 </div>
                </div>
               </div>
               <div class="write_tip_wrapper js_write_tip_wrapper hidden">
                <p class="write_tip_notice">
                 건전한 리뷰 정착 및 양질의 리뷰를 위해 아래 해당하는 리뷰는 비공개 조치될 수 있음을 안내드립니다.
                </p>
                <ol class="tip_list_wrapper">
                 <li>
                  타인에게 불쾌감을 주는 욕설
                 </li>
                 <li>
                  비속어나 타인을 비방하는 내용
                 </li>
                 <li>
                  특정 종교, 민족, 계층을 비방하는 내용
                 </li>
                 <li>
                  해당 도서의 줄거리나 리디북스 서비스 이용과 관련이 없는 내용
                 </li>
                 <li>
                  의미를 알 수 없는 내용
                 </li>
                 <li>
                  광고 및 반복적인 글을 게시하여 서비스 품질을 떨어트리는 내용
                 </li>
                 <li>
                  저작권상 문제의 소지가 있는 내용
                 </li>
                 <li>
                  다른 리뷰에 대한 반박이나 논쟁을 유발하는 내용
                 </li>
                 <li class="additional_tip">
                  * 결말을 예상할 수 있는 리뷰는 자제하여 주시기 바랍니다.
                 </li>
                </ol>
                <p class="write_tip_notice">
                 이 외에도 건전한 리뷰 문화 형성을 위한 운영 목적과 취지에 맞지 않는 내용은 담당자에 의해 리뷰가 비공개 처리가 될 수 있습니다.
                </p>
               </div>
              </div>
              <div class="modify_review_bottom">
               <div class="spoiler_input_wrapper">
                <label class="rui_checkbox_label spoiler_input_label" for="spoiler_radio_input_modify">
                 스포일러가 있습니다.
                </label>
               </div>
               <div class="modify_button_wrapper">
                <div class="cancel_button_wrapper">
                 <button class="rui_button_gray_30 modify_cancel_button js_review_modify_cancel_btn" type="button">
                  취소
                 </button>
                </div>
                <div class="complete_button_wrapper">
                 <button class="rui_button_blue_30 modify_complete_button js_review_modify_complete_btn" type="submit">
                  수정완료
                 </button>
                </div>
               </div>
              </div>
             </form>
            </div>
           </div>
          </div>
          <div id="review_list_section">
           <div class="rui_tab_and_order">
            <ul class="rui_tab_2 js_review_list_filter_wrapper">
             <li class="tab_list">
              <a class="js_select_tab_option active" data-filter="buyer_only" href="#">
               구매자
              </a>
             </li>
             <li class="tab_list">
              [ahref]
              
             </li>
            </ul>
            <ul class="rui_order js_review_list_order_wrapper">
             <li class="order_list">
              [linkx]
              
             </li>
             <li class="order_list">
              [linkx]
              
             </li>
             <li class="order_list">
              [ahref]
              
             </li>
             <li class="order_list">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="review_list_wrapper js_review_list_wrapper">
           </div>
          </div>
          <div class="what_is_buyers_review_section js_what_is_buyers_review_section">
           <div class="title_and_button_wrapper">
            <h4 class="section_title">
             구매자 표시 기준은 무엇인가요?
            </h4>
            <button class="toggle_button js_buyers_review_terms_button">
             열기/닫기 버튼
            </button>
           </div>
           <div class="description_toggle_wrapper">
            <div class="description_wrapper">
             <p class="top_description">
              <strong>
               '구매자' 표시는 리디북스에서 유료도서 결제 후 다운로드 하시거나 리디셀렉트 도서를 다운로드하신 경우에만 표시됩니다.
              </strong>
             </p>
             <dl>
              <dt class="description_title">
               무료 도서 (프로모션 등으로 무료로 전환된 도서 포함)
              </dt>
              <dd class="description">
               '구매자'로 표시되지 않습니다.
              </dd>
              <dt class="description_title">
               시리즈 도서 내 무료 도서
              </dt>
              <dd class="description">
               '구매자’로 표시되지 않습니다. 하지만 같은 시리즈의 유료 도서를 결제한 뒤 리뷰를 수정하거나 재등록하면 '구매자'로 표시됩니다.
              </dd>
              <dt class="description_title">
               영구 삭제
              </dt>
              <dd class="description">
               도서를 영구 삭제해도 ‘구매자’ 표시는 남아있습니다.
              </dd>
              <dt class="description_title">
               결제 취소
              </dt>
              <dd class="description">
               ‘구매자’ 표시가 자동으로 사라집니다.
              </dd>
             </dl>
            </div>
           </div>
          </div>
          <div class="rui_popup" id="report_review_popup">
           <div class="popup_dimmed_bg js_close_popup_button">
           </div>
           <div class="popup_contents">
            <div class="popup_header">
             <div class="popup_header_nav">
              <h3 class="popup_title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][ahref][linkx][pkeyx][linkx][area1][keywordx][linkx][area1][mkey1][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              </h3>
              <button class="popup_close_button js_close_popup_button">
               <span class="close_icon">
                닫기
               </span>
              </button>
             </div>
            </div>
            <form id="report_review_form">
             <div class="popup_body">
              <p class="report_header">
               신고하는 이유를 선택해주세요.
              </p>
              <ul class="report_reason_list">
               <li class="report_reason">
                <label class="rui_radio_label" for="reason1">
                 욕설/비속어
                </label>
               </li>
               <li class="report_reason">
                <label class="rui_radio_label" for="reason2">
                 타인/특정 종교/민족/계층 비방
                </label>
               </li>
               <li class="report_reason">
                <label class="rui_radio_label" for="reason3">
                 홍보 및 반복적인 내용
                </label>
               </li>
               <li class="report_reason">
                <label class="rui_radio_label" for="reason4">
                 음란성/선정성
                </label>
               </li>
               <li class="report_reason">
                <label class="rui_radio_label" for="reason5">
                 저작권상 문제의 소지가 있는 내용
                </label>
               </li>
               <li class="report_reason">
                <label class="rui_radio_label" for="reason6">
                 결말을 알 수 있는 내용(스포일러)
                </label>
               </li>
              </ul>
             </div>
             <div class="popup_footer">
              <ul class="popup_buttons_wrapper">
               <li class="button_list">
                <button class="rui_button_white_40 js_report_cancel_button js_close_popup_button" type="button">
                 취소
                </button>
               </li>
               <li class="button_list">
                <button class="rui_button_blue_40 js_report_submit_button" type="submit">
                 신고하기
                </button>
               </li>
              </ul>
             </div>
            </form>
           </div>
          </div>
         </article>
         <article class="detail_box_module detail_similar" id="purchase_similar_books">
          <div class="rsg_title01">
           <h3 class="title_text">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
          </div>
         </article>
         <hr/>
         <article class="detail_box_module detail_similar" id="view_similar_books">
          <div class="rsg_title01">
           <h3 class="title_text">
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h3>
          </div>
         </article>
         <hr/>
        </section>
       </div>
       <div class="detail_aside_wrap">
        <aside class="detail_aside">
         <div class="aside_banner">
          <h2 class="indent_hidden">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[linkx][pkeyx][linkx][pkeyx][pkeyx][linkx][ahref][pkeyx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][ahref][area1][mkey1][pkeyx][area1][mkey1]
          </h2>
          [ahref]
          
         </div>
         <hr class="hidden"/>
         <div class="aside_contents aside_best">
          <h2 class="aside_contents_title">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h2>
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a class="trackable" data-track-params='{"section":"bestseller","idx":5,"u_id":false,"type":"impression","tags":{"name":"\uc704\uc800\ub4dc \ubca0\uc774\ucee4\ub9ac","brand":"\ucc3d\ube44","genre":"general","genre_kor":"\uc77c\ubc18\ub3c4\uc11c","category":"\uc77c\ubc18\ub3c4\uc11c\/\ud55c\uad6d\uc18c\uc124","price":"8960","quantity":1,"rep_id":"","rep_title":"","rcmd_id":"","is_checkpoint":false,"is_last_item":false},"obj_id":"754023366"}' data-track-type="beacon,ga" href="/v2/Detail?id=754023366&amp;_s=category_best&amp;_s_id=647000022">
             <span class="best_rank">
              6위
             </span>
             <span class="best_title">
              <span class="title">
               위저드 베이커리
              </span>
              <span class="title_fadeout">
              </span>
             </span>
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a class="trackable" data-track-params='{"section":"bestseller","idx":8,"u_id":false,"type":"impression","tags":{"name":"\uae4c\ub300\uae30","brand":"\ubcf4\ub9ac\ucd9c\ud310\uc0ac","genre":"general","genre_kor":"\uc77c\ubc18\ub3c4\uc11c","category":"\uc77c\ubc18\ub3c4\uc11c\/\ud55c\uad6d\uc18c\uc124","price":"12000","quantity":1,"rep_id":"","rep_title":"","rcmd_id":"","is_checkpoint":false,"is_last_item":false},"obj_id":"2378006672"}' data-track-type="beacon,ga" href="/v2/Detail?id=2378006672&amp;_s=category_best&amp;_s_id=647000022">
             <span class="best_rank">
              9위
             </span>
             <span class="best_title">
              <span class="title">
               까대기
              </span>
              <span class="title_fadeout">
              </span>
             </span>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
          <a class="best_more_btn" href="/category/bestsellers/101">
           더보기
           <span class="icon-arrow_1_right">
           </span>
          </a>
         </div>
         <hr class="hidden"/>
        </aside>
       </div>
      </div>
     </div>
    </div>
   </div>
   <hr>
    <p class="indent_hidden">
     본문 끝
     [ahref]
     
    </p>
    <section class="Footer_Notice" id="books_notice">
     <article class="Notice">
      <h2 class="Notice_Title">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h2>
      <ul class="Notice_List">
       <li class="Notice_Item jsNoticeItem">
        [ahref]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        [linkx]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        [ahref]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        [ahref]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        [ahref]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        <a class="Notice_Item_DetailLink" href="/support/notice/846">
         [업데이트] PC/Mac 뷰어 v2.7.2
        </a>
       </li>
       <li class="Notice_Item jsNoticeItem">
        [ahref]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        [ahref]
        
       </li>
       <li class="Notice_Item jsNoticeItem">
        <a class="Notice_Item_DetailLink" href="/support/notice/833">
         [공지] 리디북스 이용약관 개정 (v3.3)
        </a>
       </li>
       <li class="Notice_Item jsNoticeItem">
        <a class="Notice_Item_DetailLink" href="/support/notice/812">
         [공지] 리디북스 이용약관 개정 (v3.2)
        </a>
       </li>
      </ul>
     </article>
    </section>
    <hr/>
    <footer id="books_footer">
     <div class="footer_wrap">
      <div class="corp_info">
       <h2 class="indent_hidden">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <ul class="info_contact">
        <li class="contact_tel">
         <span class="icon-call_center">
         </span>
         <span class="indent_hidden">
          전화번호 :
         </span>
         <span class="museo_sans">
          1644-0331
         </span>
        </li>
        <li class="list_support">
         [linkx]
         
        </li>
        <li class="list_faq">
         [linkx]
         
        </li>
        <li class="contact_one">
         <a href="/hc/ko/requests/new" target="_blank">
          1:1 문의하기
         </a>
        </li>
       </ul>
       <address class="info_address">
        리디 (주) / 대표 배기식 / 서울시 강남구 역삼동 702-28 어반벤치빌딩 10층 (테헤란로 325)
        <br/>
        사업자등록번호 120-87-27435 / 통신판매업신고 제 2009-서울강남 35-02139호
        <br/>
       </address>
       <ul class="info_link">
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="link_youth" href="/legal/youth" target="_blank">
          청소년 보호 정책
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <p class="info_copyright">
        © RIDI Corp.
       </p>
      </div>
      <div class="other_menu">
       <h2 class="indent_hidden">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <ul class="other_menu_wrap">
        <li>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <ul class="menu_list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li>
         <h3>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h3>
         <ul class="menu_list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <ul class="menu_list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </li>
        <li>
         <h3>
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h3>
         <ul class="menu_list">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </li>
       </ul>
      </div>
     </div>
    </footer>
   </hr>
  </div>
  <div id="base_popup_and_spinner_wrapper">
   <div id="full_page_spinner">
    <[keywordx]>
    </[keywordx]>
    <div class="spinner_wrapper">
    </div>
   </div>
   <div id="serial_popup">
    <div class="popup_wrapper js_serial_checkout_popup" id="js_multiple_serial_free_rent_coupons_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description">
        무료이용권을 사용하시겠습니까?
       </p>
       <p class="free_coupon_available_count">
        사용 가능 :
        <span class="museo_sans js_available_coupon_count">
        </span>
        개
       </p>
       <p class="sub_description">
        <
        <span class="js_checkout_book_title">
        </span>
        >부터
        <strong>
         총
         <span class="js_available_coupon_count">
         </span>
         <span class="js_book_unit">
          화
         </span>
        </strong>
        <br/>
        무료이용권으로 대여합니다.
       </p>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_payment_multiple_free_coupons" type="button">
        <span class="js_checkout_button_title">
        </span>
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button js_show_another_payment" type="button">
        다른 방법으로 결제
       </button>
      </div>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup" id="js_serial_free_rent_success_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description">
        무료이용권으로
        <br/>
        총
        <span class="js_free_pass_coupon_applied_books_count">
        </span>
        <span class="js_book_unit">
         화
        </span>
        대여 완료했습니다.
       </p>
       <p class="left_books_count">
        남은 작품 :
        <strong>
         총
         <span class="museo_sans js_remain_book_count_for_purchase">
         </span>
         <span class="js_book_unit">
          화
         </span>
        </strong>
        (
        <span class="museo_sans js_remain_books_price_for_purchase">
        </span>
        원)
       </p>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_checkout_left_books" type="button">
        남은 작품 결제하기
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button js_view_free_rent_book" type="button">
        대여한 작품 바로보기
       </button>
      </div>
     </div>
    </div>
    <div class="popup_wrapper js_wait_free_help_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description">
        [특별 무료공개] 이토 히로부미, 안중근을 쏘다
       </p>
       <ul class="sub_description_list">
        <li>[ahref]</li>[area1][keywordx][pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
       </ul>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_close_button" type="button">
        확인
       </button>
      </div>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup" id="js_serial_free_rent_coupon_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description js_checkout_book_title">
        작품 제목
       </p>
       <p class="rental_period">
        대여 기간 :
        <span class="museo_sans js_rental_period">
        </span>
        일
       </p>
      </div>
      <div class="checkout_buttons">
       <div class="checkout_coupon">
        <label class="indent_hidden" for="ckeckout_coupon_select">
         이용권 선택
        </label>
        <select class="coupon_select js_free_rent_coupon_list" id="ckeckout_coupon_select" title="이용권 선택">
        </select>
        <div class="select_arrow">
         <span class="icon-arrow_1_down arrow_icon">
         </span>
        </div>
       </div>
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_payment_free_rent_coupon" type="button">
        무료로 보기
       </button>
       <button class="text_button js_show_another_payment" type="button">
        다른 방법으로 결제
        <span class="icon-arrow_9_right">
        </span>
       </button>
      </div>
      <p class="wait_free_description js_wait_free_description">
      </p>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup" id="js_serial_checkout_cash_and_point_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description js_checkout_book_title">
        작품 제목
       </p>
       <p class="checkout_price">
        결제 금액 :
        <span class="museo_sans js_total_price">
        </span>
        원
       </p>
       <ul class="point_cash_list">
        <li class="ridi_point">
         리디포인트 사용:
         <strong>
          <span class="museo_sans num js_usable_point">
           0
          </span>
          원
         </strong>
         (
         <span class="museo_sans num js_user_ridi_point">
         </span>
         원 보유)
        </li>
        <li class="ridi_cash">
         리디캐시 사용:
         <strong>
          <span class="museo_sans num js_usable_cash">
           100
          </span>
          원
         </strong>
         (
         <span class="museo_sans num js_user_ridi_cash">
         </span>
         원 보유)
        </li>
       </ul>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_payment_book_cash_and_point_immediate_view" type="button">
        <span class="icon-book_1 icon">
        </span>
        결제하고 바로보기
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button js_payment_book_cash_and_point" type="button">
        결제하고 다음에 보기
       </button>
      </div>
      <p class="wait_free_description js_wait_free_description">
      </p>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup" id="js_serial_checkout_by_others_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description">
        결제 가능한 리디캐시, 포인트가 없습니다.
       </p>
       <p class="sub_description">
        리디캐시를 충전하시면 자동으로 결제됩니다.
        <br/>
        최대 9% 리디포인트 적립 혜택도 놓치지 마세요!
       </p>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_payment_charge_cash_and_payment_book" type="button">
        충전하고 결제하기
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button js_payment_book" type="button">
        일반 결제하기
       </button>
      </div>
      <p class="wait_free_description js_wait_free_description">
      </p>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup" id="js_already_exists_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
         [linkx]<li>[area1][mkey1]</li><li>[ahref]</li>
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description">
        이미 구매한 작품입니다.
       </p>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_serial_book_direct_view_button" type="button">
        <span class="icon-book_1 icon">
        </span>
        보기
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button js_serial_checkout_popup_close_button" type="button">
        닫기
       </button>
      </div>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description js_checkout_book_title">
        작품 제목
       </p>
       <p class="sub_description">
        원하는 결제 방법을 선택해주세요.
       </p>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button js_payment_rent_book" type="button">
        <span class="icon-book_1 icon">
        </span>
        대여하기
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button js_payment_buy_book" type="button">
        <span class="icon-book_1 icon">
        </span>
        구매하기
       </button>
      </div>
     </div>
    </div>
    <div class="popup_wrapper js_serial_checkout_popup">
     <div class="popup_header">
      <div class="header_title_wrapper">
       <h2 class="header_title">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
      </div>
      <div class="close_button_wrapper">
       <button class="close_button js_serial_checkout_popup_close_button" type="button">
        <span class="indent_hidden">
         닫기
        </span>
        <span class="icon-close_2 icon">
        </span>
       </button>
      </div>
     </div>
     <div class="popup_body serial_checkout_wrapper">
      <div class="checkout_description">
       <p class="main_description js_checkout_book_title">
        작품 제목
       </p>
       <p class="sub_description">
        대여 기간이 만료되었습니다.
        <br/>
        다음화를 보시겠습니까?
       </p>
      </div>
      <div class="checkout_buttons">
       <button class="rui_button_blue_40 rui_button_eink_black_40 blue_button" type="button">
        <span class="icon-book_1 icon">
        </span>
        다음화 보기
       </button>
       <button class="rui_button_white_40 rui_button_eink_black_line_40 white_button" type="button">
        다시 보기
       </button>
      </div>
     </div>
    </div>
   </div>
   <div class="mobile_view_button_wrapper">
    [linkx]
    
   </div>
   <div id="modal">
   </div>
   <div id="dialog">
   </div>
   <iframe height="0" id="iframe_book_download" title="내용없음" width="0">
   </iframe>
  </div>
  <div id="base_script_wrapper">
   <div style="display:block;height:0;width:0;overflow:hidden;">
    <noscript>
     <div style="display:inline;">
     </div>
    </noscript>
   </div>
   <div style="display:block;height:0;width:0;overflow:hidden;">
    <noscript>
     <div style="display:inline;">
     </div>
    </noscript>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0327
  </b>
 </body>
</html>
|<---