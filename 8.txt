--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="" property="og:image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-PV6PGRN" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="person_InfoBg" id="personInfoBgBox" style="display:none">
  </div>
  <div id="global">
   <div class="global_wrap">
    [ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][mkey1][ahref][linkx][area1][keywordx][area1][keywordx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][ahref][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][ahref][area1][mkey1][pkeyx][pkeyx][area1][mkey1][pkeyx]
   </div>
  </div>
  <div id="all_menu">
   <form action="/product/maniaworld/surporterhome/surporterHome.mvc" id="surporterForm" name="surporterForm">
    <li>[linkx]</li><li>[area1][mkey1]</li>[area1][mkey1]
   </form>
   <form action="/product/maniaworld/teachermain/teacherMain.mvc" id="teacherForm" name="teacherForm">
   </form>
   <div class="am_wrap_1">
   </div>
  </div>
  <hr/>
  <div id="wrap">
   <div class="in_wrap">
    <div id="header">
     <div class="headtop jn_mainHead">
      <h1 class="logo">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h1>
      <form action="/product/maniaworld/surporterhome/surporterHome.mvc" id="surporterForm" name="surporterForm">
      </form>
      <form action="/product/maniaworld/teachermain/teacherMain.mvc" id="teacherForm" name="teacherForm">
       [area1][keywordx][linkx][area1][mkey1][pkeyx][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][ahref][area1][keywordx][area1][mkey1][pkeyx][pkeyx][pkeyx][pkeyx]
      </form>
      <form action="/product/autonomy/autonomyHomeSubmit.mvc" id="autonomySearchForm" method="post">
       <div class="topsearch">
        <select id="headerSearchMenu" name="searchMenu" style="width:100px;" title="">
         <option value="A00">
          전체
         </option>
         <option value="A01">
          정보찾기
         </option>
         <option value="A02">
          척척박사연구소
         </option>
         <option value="A03">
          창의탐험대
         </option>
         <option value="A04">
          과학송
         </option>
         <option value="A05">
          과학아!놀자
         </option>
         <option value="A06">
          기타
         </option>
        </select>
        <a class="search_btn" href=";" id="autonomySearchButton">
        </a>
       </div>
      </form>
      <div class="recommend_words">
       [ahref]
       
       ,
       [linkx]
       
       ,
       [ahref]
       
       ,
       <a href=";">
        복사평형
       </a>
       ,
       [linkx]
       
       ,
       [ahref]
       
       ,
       <a href=";">
        대기압
       </a>
       ,
       [ahref]
       
       ,
       [linkx]
       
       ,
       [linkx]
       
      </div>
      <div class="jn_mainVsualBg" style="margin-right:-20px;">
      </div>
     </div>
     <div class="gnbwrap">
      <div class="mbox">
       <div class="login_box">
        <form action="/loginSubmit.mvc" id="topLogin" method="post" name="topLogin">
         [ahref]
         
        </form>
       </div>
       <div class="mini_science_box none" id="mini_science_box">
       </div>
      </div>
      <ul id="gnb">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <li class="dept1">
        [ahref]
        
        <div class="gnbsub cate1" style="display:none;">
         <p>
          <a href="/product/infosearch/submain/subMain.mvc">
          </a>
         </p>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           <li>[area1][mkey1]</li><li>[pkeyx]</li><li>[area1][mkey1]</li>[ahref]
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [linkx]
        
        <div class="gnbsub cate2" style="display:none;">
         <p>
          <a href="/product/scilab/submain/subMain.mvc">
          </a>
         </p>
         <ul>
          <li>
           [ahref][area1][keywordx][area1][keywordx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref][area1][keywordx][linkx][linkx][area1][keywordx][area1][keywordx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][linkx][linkx]<li>[pkeyx]</li>[linkx]<li>[pkeyx]</li><li>[ahref]</li>
          </li>
          <li>
           [linkx]
            <li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx]<li>[linkx]</li>
           
          </li>
          <li>
           <a href="/product/scilab/submain/subMainStory.mvc?initPage=init">
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        <a class="dept1_btn" href="#">
        </a>
        <div class="gnbsub cate3" style="display:none;">
         <p>
          [ahref]
          
         </p>
         <ul>
          <li>
           [linkx]
           
          </li>
          <li>
           <a href="/product/creativeexpedition/infouse/infoUse.mvc">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/product/creativeexpedition/scininfo/scinInfoList.mvc?initPage=init">
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [ahref]
        
        <div class="gnbsub cate4" style="display:none;">
         <p>
          <a href="/product/sciencesong/submain/subMain.mvc">
          </a>
         </p>
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="dept1">
        [ahref]
        
        <div class="gnbsub cate5" style="display:none;">
         <p>
          <a href="/product/scienceenjoy/submain/subMain.mvc">
          </a>
         </p>
         <ul>
          [linkx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx]
         </ul>
        </div>
       </li>
       <li class="dept1">
        [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1][area1][mkey1][ahref]
       </li>
      </ul>
     </div>
    </div>
    <hr/>
    <div id="container">
     <div id="lnbsection">
      <h1 class="lnbtit">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h1>
      <ul class="lnbmenu" id="lnb">
       <li>
        <a class="dept1" href="/product/infosearch/subjhotissue/subjHotissueList.mvc?initPage=init">
        </a>
       </li>
       <li class="on">
        <a class="dept1" href="/product/infosearch/curiosityres/curiosityResList.mvc?initPage=init">
        </a>
       </li>
       <li>
        [linkx]
        
        <ol class="lnb2">
         <li>
          <a class="dept2" href="/product/infosearch/tebocode/EL03/teboCodeList.mvc?initPage=init">
          </a>
         </li>
         <li>
          <a class="dept2" href="/product/infosearch/tebocode/EL04/teboCodeList.mvc?initPage=init">
          </a>
         </li>
         <li>
          <a class="dept2" href="/product/infosearch/tebocode/EL05/teboCodeList.mvc?initPage=init">
          </a>
         </li>
         <li>
          [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[linkx]
         </li>
         <li>
          <a class="dept2" href="/product/infosearch/tebocode/MI01/teboCodeList.mvc?initPage=init">
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ol>
       </li>
      </ul>
     </div>
     <div id="contsection">
      <div class="content_top">
       <p class="line">
       </p>
       <p class="illust">
       </p>
       <span class="location_warp_left">
        <span class="location_warp_right">
         <span class="location_warp_center">
          <span>
           [linkx]
           
          </span>
          <span>
           <[keywordx]>
           </[keywordx]>
          </span>
          <span class="now">
           호기심해결사
          </span>
         </span>
        </span>
       </span>
       <h2 class="cont_title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
       <p class="cont_title_comment">
        과학에 대한 궁금한 질문과 답변을 공유하는 공간입니다.
       </p>
      </div>
      <form action="/product/infosearch/curiosityres/deleteCuriosityRes.mvc" id="deleteForm" method="post">
      </form>
      <form action="/product/infosearch/curiosityres/readCuriosityRes.mvc" id="redirectForm" method="get">
      </form>
      <div class="content_up" id="content">
       <div class="big_round_wrap_top">
        <div class="big_round_wrap_bottom">
         <div class="big_round_wrap_center">
          <div class="view_style1_title_box">
           <p class="curi_title">
            벌레나 곤충이 물면 왜 몸이 간지럽지요?
           </p>
           <p class="article_information">
            <span>
             [ahref]
             
            </span>
            <span>
             조회
             <em>
              1299
             </em>
            </span>
            <span class="no">
             2003-07-24
            </span>
           </p>
          </div>
          <div class="curiosity_view_box">
           <div class="cvb_question">
            보통 독침을 가지고 있는 곤충에게 분비되는 독물은 포름산인
데, 이 포름산은 상온에서 무색의 자극적인 냄새가 있는 액체
로 피부에 묻으면 수포가 생기지요.

따라서 벌레에 물리면 독선에서 분비되는 포름산 때문에 가렵
고 그 부위가 부풀어오르게 됩니다. 이런 경우는 암모니아수와 
알칼리제로 산성인 포름산을 중화시키면 되지요. 그러나 곤충
의 독물 중에는 이런 정도로는 해독이 안 되는 것도 많음을 유
념해야 하겠지요?
           </div>
           <div class="cvb_btn">
            [linkx]
            
            <a href="a" id="deleteButton">
            </a>
           </div>
           <div class="cvb_answer">
            <span>
             이 호기심에
             <strong>
              1
             </strong>
             개의 호기심 해결 답변이 있습니다.
            </span>
            [ahref]
            
           </div>
           <div class="cvb_sol_box">
            <div class="cvb_sol_box">
             <div class="cvb_solution">
              <p class="re">
               RE:벌레나 곤충이 물면 왜 몸이 간지럽지요?
              </p>
              <p class="mem_wrap">
               <span>
                [ahref]
                
               </span>
               <span class="bar">
                2010-12-02
               </span>
              </p>
             </div>
             <div class="small_round_wrap_bottom">
              <div class="small_round_wrap_center">
               [area1][mkey1][area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="subject_words_box">
        <strong>
         관련주제가 없습니다.
        </strong>
       </div>
       <div class="article_control_box">
        <span class="sns">
         [linkx]
         
         [ahref]
         
         [linkx]
         
         <a href="a" id="kakao_button">
         </a>
         <a href="a" id="twitter_button">
         </a>
         [ahref]
         
        </span>
        <span class="mail">
         [linkx]
          [area1][keywordx]<li>[pkeyx]</li>[ahref][linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
         
        </span>
       </div>
       <div class="big_round_wrap_top">
        <div class="big_round_wrap_bottom">
         <div class="big_round_wrap_center">
          <div class="reply_box">
           <p class="rb_title">
            <span id="addedscriptAddCnt">
             <em>
              4
             </em>
             개의 댓글이 있습니다.
            </span>
           </p>
           <div class="replay_applicate">
            <form id="addedscriptForm" method="post">
             <p class="act_reply">
              [ahref]
              
             </p>
            </form>
           </div>
           <div id="addedscriptContent">
            <table cellpadding="0" cellspacing="0" class="reply_table">
             <colgroup>
              <col width="500"/>
              <col width=""/>
             </colgroup>
            </table>
            <form id="searchForm" method="post">
            </form>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="curi_btn_range_right">
        [ahref]
        
        [linkx]
        
       </div>
       <p class="view_title">
       </p>
       <table cellpadding="0" cellspacing="0" class="table_list_sty1">
        <colgroup>
         <col width=""/>
         <col width="85"/>
         <col width="78"/>
         <col width="92"/>
        </colgroup>
        <tr>
         <td>
          <a class="pl5" href="/product/infosearch/curiosityres/readCuriosityRes.mvc?curiosityResId=HODA2012100096">
           선인장
          </a>
          <span class="curi_renum">
           (0)
          </span>
         </td>
         <td class="l">
          [linkx]
          
         </td>
         <td class="c">
          2012-10-13
         </td>
         <td class="c">
          <a class="curi_reply" href="/product/infosearch/curiosityres/createAnswerCuriosityRes.mvc?curiosityResId=HODA2012100096">
           <em>
            기다리는 중
           </em>
          </a>
         </td>
        </tr>
        <tr>
         <td>
          <a class="pl5" href="/product/infosearch/curiosityres/readCuriosityRes.mvc?curiosityResId=HODA2006050041">
           목이 긴 기린의 목뼈는 몇개일까?
          </a>
          <span class="curi_renum">
           (0)
          </span>
         </td>
         <td class="l">
          <a class="mem_bul myInfoPopButton" data-ids="admin" href="a">
           관리*
          </a>
         </td>
         <td class="c">
          2006-05-18
         </td>
         <td class="c">
          <a class="curi_reply" href="/product/infosearch/curiosityres/createAnswerCuriosityRes.mvc?curiosityResId=HODA2006050041">
           <em>
            기다리는 중
           </em>
          </a>
         </td>
        </tr>
        <tr>
         <td>
          <a class="pl5" href="/product/infosearch/curiosityres/readCuriosityRes.mvc?curiosityResId=HODA2015030057">
           어류는 어떻게진화했냐요?
          </a>
          <span class="curi_renum">
           (1)
          </span>
         </td>
         <td class="l">
          [linkx]
          
         </td>
         <td class="c">
          2015-03-23
         </td>
         <td class="c">
          [ahref]
          
         </td>
        </tr>
        <tr>
         <td>
          [ahref]
          
          <span class="curi_renum">
           (0)
          </span>
         </td>
         <td class="l">
          <a class="mem_bul myInfoPopButton" data-ids="sladmin2" href="a">
           호기심지*
          </a>
         </td>
         <td class="c">
          2010-12-02
         </td>
         <td class="c">
          <a class="curi_reply" href="/product/infosearch/curiosityres/createAnswerCuriosityRes.mvc?curiosityResId=HODA2010120078">
           <em>
            기다리는 중
           </em>
          </a>
         </td>
        </tr>
        <tr>
         <td>
          <a class="pl5" href="/product/infosearch/curiosityres/readCuriosityRes.mvc?curiosityResId=HODA2005090069">
           새는 걸을 때 왜 머리를 앞뒤로?
          </a>
          <span class="curi_renum">
           (6)
          </span>
         </td>
         <td class="l">
          [linkx]
          
         </td>
         <td class="c">
          2005-09-30
         </td>
         <td class="c">
          [ahref]
          
         </td>
        </tr>
       </table>
      </div>
     </div>
    </div>
   </div>
  </div>
  <hr/>
  <div id="footer">
   <div class="ft_wrap" id="ftWrapArea">
    <h1 class="footer_logo">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h1>
    <div class="footer_cont">
     <div class="footer_util">
      <a href="/guide/useRules.mvc">
      </a>
      <a href="/guide/privateInfoRules.mvc">
      </a>
      [ahref]
      
      [ahref]
      
      [ahref]
      
      [linkx]
      
     </div>
     <p class="copy">
     </p>
    </div>
    <div class="family_site">
     <div class="site">
      <ul>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="r" target="_blank" title="새창열기">
         영메이커
        </a>
       </li>
       <li>
        <a href="m" target="_blank" title="새창열기">
         LG아트센터
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <p>
      Family Site
     </p>
    </div>
   </div>
  </div>
  <div id="quickmenu">
   <p class="copy">
   </p>
   <div class="history" style="display:none">
    <fieldset>
     <legend>
     </legend>
     <div class="flexslider">
      <ul class="slides">
      </ul>
      <div class="flex-container">
       <span class="current-slide">
       </span>
       /
       <span class="total-slides">
       </span>
      </div>
     </div>
    </fieldset>
   </div>
   <div class="banner">
    <p>
     <a href="/science/idea/entry/way.dev" onclick="eval('try{ _trk_clickTrace( \'EVT\', \'/배너클릭\' ); }catch(_e){ }');" target="_blank">
      [area1][mkey1][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][ahref][ahref][ahref][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][linkx]
     </a>
    </p>
    <p>
     [linkx]
     
    </p>
   </div>
   <p>
    <a href="/product/maniaworld/mybox/mileageDataList.mvc">
    </a>
   </p>
   <p>
    [ahref]
    
   </p>
   <p>
    [linkx]
    
   </p>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0012
  </b>
 </body>
</html>|<---