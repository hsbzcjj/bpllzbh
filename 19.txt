--->|<!DOCTYPE html>
<html>
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="none" http-equiv="x-pjax-version"/>
  <meta content="the seed" name="generator"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="application-name"/>
  <meta content="yes" name="mobile-web-app-capable"/>
  <meta content="나무위키" name="msapplication-tooltip"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-starturl"/>
  <meta content="#008275" name="theme-color"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0, width=device-width" name="viewport"/>
  <meta content="noarchive" name="googlebot"/>
 </head>
 <body class="senkawa">
  <div class="navbar-wrapper">
   <nav class="navbar navbar-dark bg-inverse navbar-static-top">
    [linkx]
     [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][linkx][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx][linkx][ahref][area1][mkey1][area1][mkey1][pkeyx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
    
    <ul class="nav navbar-nav">
     <li class="nav-item">
      [ahref]
      
     </li>
     <li class="nav-item">
      <a class="nav-link" href="/RecentDiscuss" title="최근 토론">
       <span class="icon ion-android-textsms">
       </span>
       <span class="icon-title">
        최근 토론
       </span>
      </a>
     </li>
     <li class="nav-item dropdown">
      [linkx]
      
      <div class="dropdown-menu right">
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       <a class="dropdown-item" href="/NeededPages">
        <span class="icon ion-coffee">
        </span>
        <span class="icon-title">
         작성이 필요한 문서
        </span>
       </a>
       [ahref]
       
       [linkx]
       
       [linkx]
       
       <a class="dropdown-item" href="/ShortestPages">
        <span class="icon ion-heart-broken">
        </span>
        <span class="icon-title">
         내용이 짧은 문서
        </span>
       </a>
       <a class="dropdown-item" href="/LongestPages">
        <span class="icon ion-star">
        </span>
        <span class="icon-title">
         내용이 긴 문서
        </span>
       </a>
       [linkx]
       
       <a class="dropdown-item" href="/RandomPage">
        <span class="icon ion-shuffle">
        </span>
        <span class="icon-title">
         RandomPage
        </span>
       </a>
       [linkx]
       
       [ahref]
       
      </div>
     </li>
     <li class="nav-item dropdown">
      [linkx]
      
      <div class="dropdown-menu right">
       [linkx]
       
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       <a class="dropdown-item" href="/b/hobby">
        유머/이슈 채널
       </a>
       <a class="dropdown-item" href="/b/namugame">
        포인트 게임 채널
       </a>
       [ahref]
       
       [linkx]
       
       [linkx]
       
       [linkx]
       
       [linkx]
       
      </div>
     </li>
    </ul>
    <ul class="nav navbar-nav pull-right">
     [area1][keywordx]<li>[pkeyx]</li><li>[area1][keywordx]</li><li>[area1][keywordx]</li><li>[linkx]</li>
    </ul>
    <form class="form-inline navbar-form search-box-parent">
     <div class="input-group search-box">
      <span class="input-group-btn left-search-btns">
       [linkx]
       
      </span>
      <span class="input-group-btn right-search-btns">
       <button class="btn btn-secondary" id="searchBtn" type="button">
        <span class="icon ion-search">
        </span>
       </button>
       <button class="btn btn-secondary" id="goBtn" type="button">
        <span class="icon ion-arrow-right-c">
        </span>
       </button>
      </span>
     </div>
    </form>
   </nav>
  </div>
  <div class="content-wrapper">
   <aside class="sidebar has-site-notice">
    <div class="card recent-card">
     <h5 class="card-title">
      최근 변경
     </h5>
     <div class="link-table" id="recentChangeTable">
      [linkx]
      
     </div>
     [linkx]
     
    </div>
    <div class="test-ad-card">
     <li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>
    </div>
    <div class="card live-list-card" data-count="20" data-slug="headline">
     <li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx]
    </div>
    <div class="ad-card">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-slot="2029530375" style="display:inline-block;width:160px;height:600px">
     </ins>
    </div>
   </aside>
   <article class="container-fluid wiki-article">
    <div class="wiki-article-menu">
     <div class="btn-group" role="group">
      [linkx]
      
      [linkx]
      
      [ahref]
      
      <a class="btn btn-secondary" href="/edit/%EC%B0%B0%EB%96%A1%ED%8C%8C%EC%9D%B4" rel="nofollow" role="button">
       편집
      </a>
      <a class="btn btn-secondary" href="/history/%EC%B0%B0%EB%96%A1%ED%8C%8C%EC%9D%B4" role="button">
       역사
      </a>
      <a class="btn btn-secondary" href="/acl/%EC%B0%B0%EB%96%A1%ED%8C%8C%EC%9D%B4" role="button">
       ACL<li>[area1][keywordx]</li><li>[ahref]</li>[linkx]<li>[area1][mkey1]</li>
      </a>
     </div>
    </div>
    <h1 class="title">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h1>
    <p class="wiki-edit-date">
     최근 수정 시각:
     <time data-format="Y-m-d H:i:s" datetime="2019-05-26T07:05:09.000Z">
      2019-05-26 07:05:09
     </time>
    </p>
    <div class="adsense">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="horizontal" data-ad-slot="3379361405" data-full-width-responsive="false" style="display:block">
     </ins>
    </div>
    <div class="wiki-category">
     [ahref]<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
    </div>
    <div class="wiki-content clearfix">
     <div class="wiki-inner-content">
      <div class="wiki-table-wrap" style="width:100%">
       <table class="wiki-table" style="width: 100%;border: 2px solid #ff0000;">
        <tbody>
         <tr>
          <[keywordx]>
          </[keywordx]>
         </tr>
         <tr>
          <td style="text-align:center;">
           <div class="wiki-paragraph">
            <dl class="wiki-folding">
             <dt>
              【접기/펼치기】
             </dt>
             <dd>
              <div class="wiki-table-wrap" style="width:100%">
               <table class="wiki-table" style="width: 100%;border: 2px solid #000000;">
                <tbody>
                 <tr>
                  <td colspan="5" style="background-color:#000000; text-align:center;">
                   <div class="wiki-paragraph">
                    <strong>
                     <span class="wiki-color" style="color:#ffffff">
                      갑과자/파이
                     </span>
                    </strong>
                   </div>
                  </td>
                 </tr>
                 <tr>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [ahref]
                    
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal" href="/w/%EB%B9%BC%EB%B9%BC%EB%A1%9C" title="빼빼로">
                     빼빼로
                    </a>
                    *
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [linkx]
                    
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [linkx]
                    
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [linkx]
                    
                   </div>
                  </td>
                 </tr>
                 <tr>
                  [area1][mkey1][linkx][linkx][area1][keywordx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][pkeyx][area1][keywordx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][ahref][area1][mkey1]
                 </tr>
                 <tr>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal" href="/w/%EB%A1%AF%EB%8D%B0%20%EC%B4%88%EC%BD%94%ED%8C%8C%EC%9D%B4" title="롯데 초코파이">
                     롯데 초코파이
                    </a>
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-self-link" href="/w/%EC%B0%B0%EB%96%A1%ED%8C%8C%EC%9D%B4" title="찰떡파이">
                     찰떡파이
                    </a>
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal" href="/w/%EA%B0%B8%EB%98%90" title="갸또">
                     갸또
                    </a>
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    [linkx]
                     [area1][keywordx]<li>[linkx]</li><li>[area1][keywordx]</li>
                    
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    [linkx]
                    
                    *
                   </div>
                  </td>
                 </tr>
                 <tr>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal" href="/w/%EC%94%A8%EB%A6%AC%EC%96%BC" title="씨리얼">
                     씨리얼
                    </a>
                    *
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    [ahref]
                    
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal" href="/w/%EC%B9%B8%EC%B5%B8" title="칸쵸">
                     칸쵸
                    </a>
                    *
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal not-exist" href="/w/%ED%95%98%EB%B9%84%EC%8A%A4%ED%8A%B8" rel="nofollow" title="하비스트">
                     하비스트
                    </a>
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                   </div>
                  </td>
                 </tr>
                 <tr>
                  <td colspan="5" style="text-align:center;">
                   <div class="wiki-paragraph">
                    *:초콜릿 범주에도 포함
                   </div>
                  </td>
                 </tr>
                </tbody>
               </table>
              </div>
              <br/>
              <div class="wiki-table-wrap" style="width:100%">
               <table class="wiki-table" style="width: 100%;border: 2px solid #000000;">
                <tbody>
                 <tr>
                  <td colspan="5" style="background-color:#000000; text-align:center;">
                   <div class="wiki-paragraph">
                    <strong>
                     [linkx]
                     
                    </strong>
                   </div>
                  </td>
                 </tr>
                 <tr>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][linkx][pkeyx][area1][mkey1][area1][mkey1][linkx][ahref][pkeyx][ahref][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[linkx]</li>[pkeyx]<li>[linkx]</li>
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [linkx]
                    
                    #
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    <a class="wiki-link-internal" href="/w/%EC%8C%80%EB%A1%9C%EB%B3%84" title="쌀로별">
                     쌀로별
                    </a>
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [ahref]
                    
                    #
                   </div>
                  </td>
                  <td style="width:20%; text-align:center;">
                   <div class="wiki-paragraph">
                    [ahref]
                     [ahref][ahref][ahref]
                    
                   </div>
                  </td>
                 </tr>
                 <tr>
                  <td style="text-align:center;">
                   아!그칩<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]<li>[pkeyx]</li>[ahref]
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                   </div>
                  </td>
                  <td style="text-align:center;">
                   <div class="wiki-paragraph">
                   </div>
                  </td>
                 </tr>
                 <tr>
                  <td colspan="5" style="text-align:center;">
                   <div class="wiki-paragraph">
                    #:프리토레이 사의 제품
                   </div>
                  </td>
                 </tr>
                </tbody>
               </table>
              </div>
             </dd>
            </dl>
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <div class="wiki-paragraph">
       <div style="border:1px solid gray; border-top:5px solid #00a495; padding:9px; margin-bottom:0px;">
        [linkx]
        
        <div style="margin-left:50px;">
         <strong>
          이 문서는
          [ahref]
          
          에서 다루는 문서입니다.
         </strong>
         <br/>
         해당 프로젝트 문서를 방문하여 도움이 필요한 문서에 기여하여 주세요!
        </div>
       </div>
      </div>
      <div class="wiki-paragraph">
       <br/>
       [linkx]
       
       <br/>
       <br/>
       찰떡에
       [linkx]
       
       처럼 초콜릿을 입힌
       [ahref]
       
       . 찰떡 안에는
       [ahref]
       
       [ahref]
       
       이 들어가 있다.
       [linkx]
       
       <br/>
       <br/>
       1998년 말 삼진식품에서 처음 출시되었으며, 1999년 5월에 제조법이 특허를 받게 되면서 군부대,
       [linkx]
       
       등의
       [ahref]
       
       을 공략, 2000년에는 군납시장에서 동양제과의 '오리온
       [ahref]
       
       '를 제치고 단일 품목 판매량 1위를 기록하며 '군인들이 가장 좋아하는 과자'로 선정되는 기염을 토하기도 했다.
       <br/>
       <br/>
       2000년 9월엔 중소기업청으로부터 기술개발부문 벤처기업 인증을 받고 2001년말엔
       [linkx]
       
       와 주문자생산방식(OEM)으로 납품공급계약을 체결했으며, 그 후로는 삼진식품과 롯데제과에서 판매되고 있다. 즉 롯데 찰떡파이건 삼진 찰떡파이건 모두 삼진식품
       [ahref]
       
       에서 생산한 물품이다.
       <a class="wiki-link-internal" href="/w/%EC%B0%B0%EB%96%A1%EC%BF%A0%ED%82%A4" title="찰떡쿠키">
        찰떡쿠키
       </a>
       로 유명한
       <a class="wiki-link-internal" href="/w/%EC%B2%AD%EC%9A%B0%EC%8B%9D%ED%92%88" title="청우식품">
        청우식품
       </a>
       에서도 찰떡파이를 생산 중이다.
       <br/>
       <br/>
       먹을 때 부스러기가 많이 나오지 않는다는 장점이 있다.
       <br/>
       <br/>
       세월이 흐른 현재도 삼진식품의 주력상품으로 인기가 높으며, 2000년대 후반부터는
       <a class="wiki-link-internal" href="/w/%ED%95%9C%EB%A5%98" title="한류">
        한류
       </a>
       바람으로 한국을 찾은
       [ahref]
       
       들 사이에서 입소문이 퍼지면서 큰 인기를 얻고 있는 물건이다. 어느 대형 쇼핑몰에서는 아예 일본인 전용 코너를 따로 마련했을 정도. 그런데 떡과 같은 음식의 식감에 익숙지 않은 서양인들에게는 그다지 입맛이 맞지 않는다는 평이다.
       <br/>
       <br/>
       최근에는
       <a class="wiki-link-internal" href="/w/%EC%9D%BC%EB%B3%B8" title="일본">
        일본
       </a>
       에 수출도 하는 듯. 다만, 한국판과는 약간의 차이점이 있다.
       [ahref]
       
       <br/>
       <br/>
       초코파이처럼 냉동실에 넣어 살짝 얼려 먹으면 별미다.
       <br/>
       <br/>
       2011년 6월경 한 대학생이 올린 동영상으로 인해 "
       [linkx]
       
       "이 논란이 된 적이 있는데, 찰떡파이 포장 곽의 부피 대 실제 내용물 부피의 비율을 따져보면 국내에서 판매되는 과자 중에서 유난히 눈물 난다. 실제로 먹다 보면 먹은 건 얼마 안 되는데 쓰레기는 많이 나온다. 떡 자체가 비중이 높아서 중량으로 따지면 인간사료급으로 양이 많다고 할 수 있지만, 부피로 따져보면 부실해 보이는 건 어쩔 수 없다.(...)
       <br/>
       <br/>
       게다가, 계속해서 한정판 맛을 출시하는 과자중 하나가 되었는데, 한정판 역사를 살펴보면...
       <br/>
       <br/>
       2017년 여름 한정으로 멜론맛이 출시되었다.
       <br/>
       <br/>
       2018년 여름 한정으로 깔라만시 맛이 겨울 한정으로 콜드브루모카 맛이 각각 출시 되었다.
       <br>
        [area1][keywordx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][linkx]
       </br>
       <br/>
       2019년 봄 한정으로 딸기+바나나 맛이 출시 되었다.
       <br/>
       <br/>
      </div>
      <div class="wiki-macro-footnote">
       [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][linkx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][area1][mkey1]
      </div>
     </div>
     <iframe frameborder="0" height="100" id="ad-powerlink-pc" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink.html?v=18" width="100%">
     </iframe>
     <iframe frameborder="0" height="175" id="ad-powerlink-mobile" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink_mobile.html?v=18" width="100%">
     </iframe>
    </div>
    <footer>
     <p>
      <br/>
      이 저작물은
      [ahref]
      
      에 따라 이용할 수 있습니다. (단, 라이선스가 명시된 일부 문서 및 삽화 제외)
      <br/>
      기여하신 문서의 저작권은 각 기여자에게 있으며, 각 기여자는 기여하신 부분의 저작권을 갖습니다.
      <br/>
      <br/>
      나무위키는 백과사전이 아니며 검증되지 않았거나, 편향적이거나, 잘못된 서술이 있을 수 있습니다.
      <br/>
      나무위키는 위키위키입니다. 여러분이 직접 문서를 고칠 수 있으며, 다른 사람의 의견을 원할 경우 직접 토론을 발제할 수 있습니다.
     </p>
    </footer>
   </article>
  </div>
  <div class="footer-wrapper">
   <div class="live-list-card mobile-live-bottom-list" data-count="5" data-slug="headline">
    <h6>
     헤드라인 최신글
    </h6>
    <div class="link-table">
     [ahref]
     
    </div>
    [ahref]
    
   </div>
   <div class="ad-bottom">
    <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="auto" data-ad-slot="2145080446" data-full-width-responsive="true" style="display:block">
    </ins>
   </div>
   <footer class="footer">
    <p>
     namu.wiki
     <span class="sep">
     </span>
     [linkx]
     
     <span class="sep">
     </span>
     [ahref]
     
     <span class="sep">
     </span>
     Operado por umanle S.R.L.
     <span class="sep">
     </span>
     Hecho con <3 en Asunción, República del Paraguay
    </p>
    <p>
     Su zona horaria es
     <span id="timezone">
     </span>
     <span class="sep">
     </span>
     Impulsado por
     <i>
      the seed engine
     </i>
    </p>
   </footer>
  </div>
  <ul class="nav-control">
   <li>
    <a href="p" id="goTopBtn">
     <span class="ion-arrow-up-b">
     </span>
    </a>
   </li>
   <li>
    [linkx]
    
   </li>
  </ul>
  <div class="modal fade" id="shortcutHelpModal">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
       <span class="sr-only">
        Close
       </span>
      </button>
      <h5 class="modal-title">
       단축키 도움말
      </h5>
     </div>
     <div class="modal-body">
      <dl class="dl-horizontal">
       <dt class="col-sm-3">
        <b>
         F
        </b>
        ront Gate
       </dt>
       <dd class="col-sm-9">
        대문
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         C
        </b>
        hanges
       </dt>
       <dd class="col-sm-9">
        최근 변경
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         D
        </b>
        iscuss
       </dt>
       <dd class="col-sm-9">
        최근 토론
       </dd>
       <dt class="col-sm-3">
        R
        <b>
         A
        </b>
        ndom
       </dt>
       <dd class="col-sm-9">
        랜덤 문서
       </dd>
       <dt class="col-sm-3">
        <b>
         Shift
        </b>
        +
        <b>
         S
        </b>
        earch
       </dt>
       <dd class="col-sm-9">
        검색
       </dd>
       <dt class="col-sm-3">
        <b>
         E
        </b>
        dit
       </dt>
       <dd class="col-sm-9">
        문서 편집
       </dd>
       <dt class="col-sm-3">
        <b>
         ?
        </b>
       </dt>
       <dd class="col-sm-9">
        단축키 도움말
       </dd>
      </dl>
     </div>
    </div>
   </div>
  </div>
  <div class="modal fade" data-backdrop="false" id="searchModal">
   <div class="modal-dialog modal-sm">
    <div class="modal-content">
     <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
    </div>
   </div>
  </div>
  <div class="modal" id="footnoteModal">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <h5 class="modal-title">
       각주:
      </h5>
     </div>
     <div class="modal-body">
     </div>
     <div class="modal-footer">
      <button class="btn btn-block" data-dismiss="modal" type="button">
       닫기
      </button>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0023
  </b>
 </body>
</html>
|<---