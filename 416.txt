--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML+RDFa 1.0//EN"
  "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd">
<html dir="ltr" version="XHTML+RDFa 1.0" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/terms/" xmlns:foaf="http://xmlns.com/foaf/0.1/" xmlns:og="http://ogp.me/ns#" xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:sioc="http://rdfs.org/sioc/ns#" xmlns:sioct="http://rdfs.org/sioc/types#" xmlns:skos="http://www.w3.org/2004/02/skos/core#" xmlns:xsd="http://www.w3.org/2001/XMLSchema#">
 <head profile="http://www.w3.org/1999/xhtml/vocab">
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="Drupal 7 (http://drupal.org)" name="Generator"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="html front not-logged-in no-sidebars page-node">
  <div id="skip-link">
   [ahref]
   
  </div>
  <div class="layout_home" id="page-wrapper">
   <div id="main-page-wrapper">
    <div class="home-wrapper">
     <div id="home-head-wrapper">
      <div class="center-wrapper" id="home-login-wrapper">
       <div id="home-login-bar">
        <div class="region-box" id="common-login-bar">
         <div class="region region-common-login-bar">
          <div class="block block-ewoo-home" id="block-ewoo-home-common-login-bar">
           <h2>
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h2>
           <div class="content">
            <div class="without-logo" id="common-login-bar-wrap">
             <div id="common-login-bar-guest-wrap">
              [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][pkeyx][ahref][pkeyx]
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="center-wrapper" id="home-header-box">
       <div id="home-logo">
        <div class="region-box" id="common-large-logo">
         <div class="region region-common-large-logo">
          <div class="block block-ewoo-home" id="block-ewoo-home-common-large-logo">
           <h2>
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
           </h2>
           <div class="content">
            <a href="/home" id="common-main-logo">
             <span>
              logo
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div id="home-comm-logo">
        <div class="region-box" id="common-comm-logo">
         <div class="region region-common-comm-logo">
          <div class="block block-ewoo-home" id="block-ewoo-home-common-comm-logo">
           <h2>
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <div class="content">
            <a href="t" id="common-comm-logo">
             <span>
              마을공간 동터[linkx][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][pkeyx][pkeyx][area1][keywordx][linkx][linkx]
             </span>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div id="home-menu-bar">
        <div class="region-box" id="common-menu-bar">
         <div class="region region-common-menu-bar">
          <div class="block block-ewoo-home" id="block-ewoo-home-common-menu-bar">
           <h2>
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <div class="content">
            <div class="item-list">
             <h3>
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <ul class="common-menu-bar-itemlist auto-toggle">
              <li class="first">
               <div class="common-menu-item">
                [linkx]
                
                <div class="submenu-panel" id="submenu0">
                 <table class="submenu-table">
                  <tbody>
                   <tr>
                    <td>
                     <a class="level_1" href="/sitemap/intro">
                      학교장 인사말
                     </a>
                    </td>
                    <td>
                     [linkx][ahref][area1][keywordx]
                    </td>
                    <td>
                     <a class="level_1" href="/sitemap/schoolname">
                      학교 이름 소개
                     </a>
                    </td>
                    <td>
                     [ahref]
                     
                     <a class="level_2" href="/sitemap/position">
                      - 학교의 법적 지위
                     </a>
                     [ahref]
                     
                     <a class="level_2" href="/sitemap/vision">
                      - 학교의 새 비젼
                     </a>
                     [ahref]
                     
                    </td>
                    <td>
                     <a class="level_1" href="/sitemap/purpose_mid">
                      교육 목표
                     </a>
                     [ahref]
                     
                     [linkx]
                     
                    </td>
                   </tr>
                   <tr>
                    <td>
                     [ahref]
                     
                    </td>
                    <td>
                     <a class="level_1" href="/sitemap/condition">
                      학교현황
                     </a>
                     <a class="level_2" href="/sitemap/condition">
                      - 학생 현황
                     </a>
                     <a class="level_2" href="/sitemap/condition2">
                      - 교사 현황
                     </a>
                     <a class="level_2" href="/sitemap/condition3">
                      - 시설 현황
                     </a>
                    </td>
                    <td>
                     [ahref]
                     
                    </td>
                    <td>
                     <a class="level_1" href="/sitemap/teacher">
                      교직원 소개
                     </a>
                     [ahref]
                     
                     [ahref]
                     
                    </td>
                    <td>
                     <a class="level_1" href="/board/media">
                      언론이 본 이우
                     </a>
                    </td>
                   </tr>
                   <tr class="last_line">
                    <td>
                     [ahref]
                     
                    </td>
                    <td>
                     <a class="level_1" href="/board/sharing_lessons">
                      함께 여는 교육
                     </a>
                    </td>
                    <td>
                     [linkx]
                     
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                   </tr>
                  </tbody>
                 </table>
                </div>
               </div>
              </li>
              <li class="delimeter">
               <div class="common-menu-delimeter-bar">
                |[linkx][area1][mkey1][pkeyx][pkeyx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][pkeyx]
               </div>
              </li>
              <li>
               <div class="common-menu-item">
                [linkx]
                 [linkx][linkx]<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
                
                <div class="submenu-panel" id="submenu1">
                 <table class="submenu-table">
                  <tbody>
                   <tr>
                    <td>
                     <a class="level_1" href="/sitemap/framework">
                      교육과정의 재구성
                     </a>
                     <a class="level_2" href="/sitemap/framework">
                      - 프레임워크
                     </a>
                     <a class="level_2" href="/sitemap/curriculum">
                      - 과정 및 절차
                     </a>
                    </td>
                    <td>
                     [linkx]
                     
                     [ahref]
                     
                     <a class="level_2" href="/sitemap/subject_cur">
                      - 교육과정 편성.운영
                     </a>
                    </td>
                    <td>
                     <a class="level_1" href="/sitemap/subject_cur2">
                      이우고등학교 교육과정
                     </a>
                     [linkx]
                     
                     <a class="level_2" href="/sitemap/subject_cur2">
                      - 교육과정편성.운영
                     </a>
                    </td>
                    <td>
                     [area1][keywordx]<li>[pkeyx]</li>[area1][keywordx][area1][keywordx]
                    </td>
                    <td>
                     [linkx]
                     
                    </td>
                   </tr>
                   <tr class="last_line">
                    <td>
                     [linkx]
                     
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                   </tr>
                  </tbody>
                 </table>
                </div>
               </div>
              </li>
              <li class="delimeter">
               <div class="common-menu-delimeter-bar">
                |
               </div>
              </li>
              <li>
               <div class="common-menu-item">
                [ahref]
                
                <div class="submenu-panel" id="submenu2">
                 <table class="submenu-table">
                  <tbody>
                   <tr class="last_line">
                    <td>
                     [linkx]
                     
                     [linkx]
                     
                     [ahref]
                     
                     <a class="level_2" href="/sitemap/edu2">
                      - 이사 소개
                     </a>
                     <a class="level_2" href="/board/24">
                      - 이사회 게시판
                     </a>
                     <a class="level_2" href="/board/24notice">
                      - 이사회 회의록
                     </a>
                     <a class="level_2" href="/board/org_money">
                      <h1>
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h1>
                      - 법인 예결산 현황
                     </a>
                     [ahref]
                     
                    </td>
                    <td>
                     [ahref]
                     
                     [linkx]
                     
                     <a class="level_3" href="/board/operation3">
                      - 구성현황
                     </a>
                     <a class="level_3" href="/board/operation2">
                      - 운영규정
                     </a>
                     [ahref]
                     
                     [ahref]
                     
                     [ahref]
                     
                     [ahref]
                     
                     [linkx]
                     
                     <a class="level_3" href="/board/moolpoom">
                      - 물품 및 공사계약
                     </a>
                     <a class="level_3" href="/board/sooikja">
                      - 수익자부담경비집행내역
                     </a>
                     [linkx]
                     
                     [linkx]
                     
                     [ahref]
                     
                     [ahref]
                     
                     <a class="level_3" href="/sitemap/donation">
                      - 학교발전기금 안내
                     </a>
                     [ahref]
                     
                     [ahref]
                     
                     <a class="level_2" href="/board/minwon_qna">
                      - 민원 신청
                     </a>
                     [linkx]
                     
                     [linkx]
                     
                     [linkx]
                     
                    </td>
                    <td>
                     <a class="level_1" href="/sitemap/charter">
                      이우인의 약속
                     </a>
                     [linkx]
                     
                     <a class="level_2" href="/board/regulation">
                      - 이우생활규범
                     </a>
                     <a class="level_2" href="/board/mid_rights_rule">
                      - 학교생활인권규정(이우중)
                     </a>
                     <a class="level_2" href="/board/high_rights_rule">
                      - 학교생활인권규정(이우고)
                     </a>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                   </tr>
                  </tbody>
                 </table>
                </div>
               </div>
              </li>
              <li class="delimeter">
               <div class="common-menu-delimeter-bar">
                |
               </div>
              </li>
              <li>
               <div class="common-menu-item">
                <a href="/sitemap/enter_middle">
                 <span>
                  입학안내
                 </span>
                </a>
                <div class="submenu-panel" id="submenu3">
                 <table class="submenu-table">
                  <tbody>
                   <tr>
                    <td>
                     [ahref]
                     
                     <a class="level_2" href="/sitemap/enter_middle">
                      - 이우 중학교
                     </a>
                     [linkx]
                     
                    </td>
                    <td>
                     [ahref]
                     
                    </td>
                    <td>
                     [linkx]
                     
                    </td>
                    <td>
                     [linkx]
                     
                    </td>
                    <td>
                     [linkx]
                     
                    </td>
                   </tr>
                   <tr class="last_line">
                    <td>
                     <a class="level_1" href="/sitemap/screening">
                      <span style="font-size:0.9em">
                       2020이우중신입학전형
                      </span>
                     </a>
                     [ahref]
                     
                     <a class="level_2" href="/sitemap/screen_registrate">
                      - 온라인 접수
                     </a>
                     [linkx]
                     
                     <a class="level_2" href="/sitemap/screen_result_1st">
                      - 1차 합격자 발표
                     </a>
                     [linkx]
                     
                    </td>
                    <td>
                     [ahref]
                     
                     [ahref]
                     
                     [ahref]
                     
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                   </tr>
                  </tbody>
                 </table>
                </div>
               </div>
              </li>
              <li class="delimeter">
               <div class="common-menu-delimeter-bar">
                |
               </div>
              </li>
              <li class="last">
               <div class="common-menu-item">
                <a href="/board/free">
                 <span>
                  열린마당
                 </span>
                </a>
                <div class="submenu-panel" id="submenu4">
                 <table class="submenu-table">
                  <tbody>
                   <li>[ahref]</li>[area1][keywordx]<li>[area1][mkey1]</li>[ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                  </tbody>
                 </table>
                </div>
               </div>
              </li>
             </ul>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="center-wrapper" id="home-body-wrapper">
      <div id="home-gate-image-wrapper">
       <div class="region-box" id="home-gate-image">
        <div class="region region-home-gate-image">
         <div class="block block-ewoo-home" id="block-ewoo-home-home-gate-image">
          <h2>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="content">
           <div id="home-gate-image-box" onmouseout='javascript:resumeSliding("home-gate-image")' onmouseover='javascript:pauseSliding("home-gate-image")'>
            <div class="home-gate-image-image-holer">
             <div class="inter-box">
              <div class="image_wrapper" id="sliding_holder_home-gate-image0" style="position:absolute;left:0px">
               [ahref]
               
              </div>
              <div class="image_wrapper" id="sliding_holder_home-gate-image1" style="position:absolute;left:1080px">
               [linkx]
               
              </div>
              <div class="image_wrapper" id="sliding_holder_home-gate-image2" style="position:absolute;left:2160px">
               [ahref]
               
              </div>
              <div class="image_wrapper" id="sliding_holder_home-gate-image3" style="position:absolute;left:3240px">
               <a href="" style="text-decoration:none;">
               </a>
              </div>
              <div class="image_wrapper" id="sliding_holder_home-gate-image4" style="position:absolute;left:4320px">
               <a href="" style="text-decoration:none;">
               </a>
              </div>
             </div>
            </div>
            <div class="image-buttons">
             [linkx]
             
             <[keywordx]>
             </[keywordx]>
            </div>
           </div>
           <div class="site-popup-list">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div id="home-grid-wrapper">
       <div class="region-box" id="home-grid">
        <div class="region region-home-grid">
         <div class="block block-ewoo-home" id="block-ewoo-home-home-grid">
          <h2>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="content">
           <div id="home-grid-box">
            <div class="home-grid-cell home-grid-cell-row-1 home-grid-cell-col-1" id="home-grid-cell-0">
             <div style="position:absolute;left:0px;top:0px;width:100%;height:100%;overflow:hidden">
              <div class="board_summary" id="main-grid-cell-header">
               <span class="home-grid-cell-header-title">
                공지사항
               </span>
               <div class="home-grid-cell-header-more">
                <a href="/board?name=notice">
                 <span>
                  more
                 </span>
                </a>
               </div>
               <div class="home-grid-cell-header-line">
               </div>
              </div>
              <div class="board-summary-lst list-style single-summary-list single-list-style">
               <div class="item-list">
                <ul>
                 <li class="first">
                  [ahref]
                  
                  <span class="new_out new-badge">
                   <span class="new_in">
                    new
                   </span>
                  </span>
                  <span class="date">
                   2019.08.12[area1][keywordx]<li>[linkx]</li><li>[linkx]</li>[area1][keywordx]
                  </span>
                 </li>
                 <li>
                  [ahref]
                   [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][mkey1][ahref][area1][mkey1][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][ahref][ahref][area1][mkey1][area1][mkey1][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][ahref][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][keywordx][pkeyx][linkx]
                  
                  <span class="date">
                   2019.08.08
                  </span>
                 </li>
                 <li>
                  <a class="title" href="/doc/649890?bid=1">
                   <span class="subject">
                    2020학년도 이우중 신입학 2차...
                   </span>
                  </a>
                  <span class="date">
                   2019.07.22
                  </span>
                 </li>
                 <li>
                  <a class="title" href="/doc/649583?bid=1">
                   <span class="subject">
                    2020학년도 대학수학능력시험 시...
                   </span>
                  </a>
                  <span class="date">
                   2019.07.11
                  </span>
                 </li>
                 <li>
                  [linkx]
                  
                  <span class="date">
                   2019.07.10
                  </span>
                 </li>
                 <li>
                  [ahref]
                  
                  <span class="date">
                   2019.07.04
                  </span>
                 </li>
                 <li class="last">
                  [linkx]
                  
                  <span class="date">
                   2019.06.29
                  </span>
                 </li>
                </ul>
               </div>
              </div>
             </div>
            </div>
            <div class="home-grid-cell home-grid-cell-row-1 home-grid-cell-col-2" id="home-grid-cell-1">
             <div style="position:absolute;left:0px;top:0px;width:100%;height:100%;overflow:hidden">
              <div class="board_summary" id="main-grid-cell-header">
               <span class="home-grid-cell-header-title">
                이우알림터[ahref][linkx][area1][mkey1][ahref][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][ahref][area1][mkey1][pkeyx][area1][keywordx][area1][mkey1][ahref][linkx][area1][keywordx][ahref][area1][keywordx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </span>
               <div class="home-grid-cell-header-more">
                [ahref]
                
               </div>
               <div class="home-grid-cell-header-line">
               </div>
              </div>
              <div class="board-summary-lst list-style single-summary-list single-list-style">
               <div class="item-list">
                <ul>
                 <li class="first">
                  [ahref]
                  
                  <span class="date">
                   2019.07.19
                  </span>
                 </li>
                 <li>
                  [ahref]
                  
                  <span class="date">
                   2019.07.01
                  </span>
                 </li>
                 <li>
                  [ahref]
                  
                  <span class="date">
                   2019.06.19
                  </span>
                 </li>
                 <li>
                  [ahref]
                  
                  <span class="date">
                   2019.06.19
                  </span>
                 </li>
                 <li>
                  <a class="title" href="/doc/647276?bid=8">
                   <span class="subject">
                    제9회 경기도 학생 디지털 사진 ...
                   </span>
                  </a>
                  <span class="date">
                   2019.05.17
                  </span>
                 </li>
                 <li>
                  <a class="title" href="/doc/647268?bid=8">
                   <span class="subject">
                    교육자원봉사 활성화를 위한 학부모...
                   </span>
                  </a>
                  <span class="date">
                   2019.05.17
                  </span>
                 </li>
                 <li class="last">
                  [ahref]
                  
                  <span class="date">
                   2019.05.17
                  </span>
                 </li>
                </ul>
               </div>
              </div>
             </div>
            </div>
            <div class="home-grid-cell home-grid-cell-row-1 home-grid-cell-col-3" id="home-grid-cell-2">
             <div>
              <div class="bannerset_touch_slide" id="main-grid-cell-header">
               <span class="home-grid-cell-header-title">
                알림판
               </span>
              </div>
              <div class="touch_slide">
               <div class="on" id="sliding_holder_5_0">
                <div>
                 [ahref]
                 
                </div>
               </div>
               <div class="off" id="sliding_holder_5_1">
                <div>
                 <a href="/board/visit_apply" style="text-decoration:none;">
                 </a>
                </div>
               </div>
               <div class="off" id="sliding_holder_5_2">
                <div>
                 [linkx]
                 
                </div>
               </div>
              </div>
              <div class="touch_slide_pager">
               [ahref]
               
               <span class="page">
                <span id="sliding_page_5_3">
                 1
                </span>
                <span class="among">
                 / 3
                </span>
               </span>
               [ahref]
               
              </div>
             </div>
            </div>
            <div class="home-grid-cell home-grid-cell-row-2 home-grid-cell-col-1" id="home-grid-cell-3">
             <div style="position:absolute;left:0px;top:0px;width:100%;height:100%;overflow:hidden">
              <div class="board_summary" id="main-grid-cell-header">
               <span class="home-grid-cell-header-title">
                포토 갤러리
               </span>
               <div class="home-grid-cell-header-more">
                [ahref]
                
               </div>
               <div class="home-grid-cell-header-line">
               </div>
              </div>
              <div class="board-summary-lst gallery-style single-summary-list single-gallery-style">
               <div class="item-list">
                <ul>
                 <li class="first">
                  <div class="gallery-item gallery-item-0">
                   <a class="thumb" href="/doc/648024?bid=2">
                   </a>
                   [linkx]
                   
                  </div>
                 </li>
                 <li>
                  <div class="gallery-item gallery-item-1">
                   <a class="thumb" href="/doc/647775?bid=2">
                   </a>
                   [ahref]
                   
                  </div>
                 </li>
                 <li>
                  <div class="gallery-item gallery-item-2">
                   [ahref]
                   
                   [ahref]
                   
                  </div>
                 </li>
                 <li>
                  <div class="gallery-item gallery-item-3">
                   [linkx]
                   
                   [linkx]
                   
                  </div>
                 </li>
                 <li>
                  <div class="gallery-item gallery-item-4">
                   [ahref]
                   
                   <a class="title" href="/doc/647073?bid=2">
                    <span class="subject">
                     [지역연대위원회] 게릴라가드닝...
                    </span>
                   </a>
                  </div>
                 </li>
                 <li class="last">
                  <div class="gallery-item gallery-item-5">
                   <a class="thumb" href="/doc/647072?bid=2">
                   </a>
                   [ahref]
                   
                  </div>
                 </li>
                </ul>
               </div>
              </div>
             </div>
            </div>
            <div class="home-grid-cell home-grid-cell-row-2 home-grid-cell-col-2" id="home-grid-cell-4">
             <div style="position:absolute;left:0px;top:0px;width:100%;height:100%;overflow:hidden">
              <div class="board_summary" id="main-grid-cell-header">
               <span class="home-grid-cell-header-title">
                동영상 갤러리
               </span>
               <div class="home-grid-cell-header-more">
                [ahref]
                
               </div>
               <div class="home-grid-cell-header-line">
               </div>
              </div>
              <div class="board-summary-lst gallery-style single-summary-list single-gallery-style">
               <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>[area1][mkey1][area1][mkey1]<li>[linkx]</li>
              </div>
             </div>
            </div>
            <div class="home-grid-cell home-grid-cell-row-2 home-grid-cell-col-3" id="home-grid-cell-5">
             <div>
              <div class="array">
               <div class="banner banner0">
                <div>
                 [ahref]
                 
                </div>
               </div>
               <div class="banner banner1">
                <div>
                 <a href="/" style="text-decoration:none;">
                 </a>
                </div>
               </div>
               <div class="banner banner2">
                <div>
                 [ahref]
                 
                </div>
               </div>
               <div class="banner banner3">
                <div>
                 <a href="/r/reading/search/schoolCodeSetting.jsp?schoolCode=266&amp;returnUrl=" style="text-decoration:none;">
                 </a>
                </div>
               </div>
               <div class="banner banner4">
                <div>
                 [linkx]
                 
                </div>
               </div>
               <div class="banner banner5">
                <div>
                 <a href="/edu" style="text-decoration:none;">
                 </a>
                </div>
               </div>
               <div class="banner banner6">
                <div>
                 [linkx]
                 
                </div>
               </div>
               <div class="banner banner7">
                <div>
                 [ahref]
                 
                </div>
               </div>
               <div class="banner banner8">
                <div>
                 [linkx]
                 
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div id="home-calendar-wrapper">
       <div class="region-box" id="home-calendar">
        <div class="region region-home-calendar">
         <div class="block block-ewoo-home" id="block-ewoo-home-home-calendar">
          <h2>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="content">
          </div>
         </div>
        </div>
       </div>
      </div>
      <div id="home-lower-line">
       <span>
       </span>
      </div>
      <div id="home-banners-wrapper">
       <div class="region-box" id="home-banners">
        <div class="region region-home-banners">
         <div class="block block-ewoo-home" id="block-ewoo-home-home-banners">
          <h2>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h2>
          <div class="content">
           <div id="home-banners-box" onmouseout='javascript:resumeSliding("home-banners")' onmouseover='javascript:pauseSliding("home-banners")'>
            <div class="home-banners-image-holer">
             [pkeyx][ahref][linkx]<li>[linkx]</li><li>[ahref]</li>
            </div>
            <div class="image-buttons">
             [ahref]
             
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="home-bottom-line">
      <span>
      </span>
     </div>
     <div class="center-wrapper" id="home-footer-wrapper">
      [area1][mkey1][area1][mkey1][ahref]<li>[pkeyx]</li>
     </div>
     <div class="center-wrapper" id="temp-login-wrapper">
      <div class="region-box" id="common-temp-login">
       <div class="region region-common-temp-login">
        <div class="block block-ewoo-home" id="block-ewoo-home-common-temp-login">
         <h2>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h2>
         <div class="content">
          <div>
           <span>
            dummy(common_temp_login)
           </span>
          </div>
         </div>
        </div>
        <div class="block block-user" id="block-user-login">
         <h2>
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h2>
         <div class="content">
          <form accept-charset="UTF-8" action="/node?destination=node" autocomplete="off" id="user-login-form" method="post">
           <div>
            <div class="login-box form-wrapper" id="edit-box">
             <div class="form-item form-type-textfield form-item-name">
              <label for="edit-name">
               아 이 디
               <span class="form-required" title="이 항목은 반드시 입력해야 합니다.">
                *
               </span>
              </label>
             </div>
             <div class="form-item form-type-password form-item-pass">
              <label for="edit-pass">
               비밀번호
               <span class="form-required" title="이 항목은 반드시 입력해야 합니다.">
                *
               </span>
              </label>
             </div>
             <div class="form-item form-type-checkbox form-item-keepid">
              <label class="option" for="edit-keepid">
               아이디저장
              </label>
             </div>
             <div class="item-list">
              <ul>
               <li class="first">
                <a href="/member/register" title="새로운 사용자 계정을 만듭니다.">
                 회원가입
                </a>
               </li>
               <li class="last">
                <a href="/member/password" title="새로운 비밀번호를 이메일로 보내달라고 요청합니다.">
                 아이디/비밀번호찾기
                </a>
               </li>
              </ul>
             </div>
             <div class="form-actions form-wrapper" id="edit-actions">
             </div>
            </div>
           </div>
          </form>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0459
  </b>
 </body>
</html>
|<---