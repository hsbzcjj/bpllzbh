--->|<!DOCTYPE HTML>
<html lang="ko">
 <head itemscope="">
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi" name="viewport">
  </meta>
 </head>
 <body class="renewal2015 view2016">
  <div class="sub-wrap gnb-news-00" id="wrap">
   <span class="skip-link">
    [ahref]
    
    [linkx]
    
    <a href="b">
     메뉴 바로가기
    </a>
   </span>
   <div class="header hdr2015" id="header">
    <div class="link-wrap">
     <strong class="logo-yna">
      [ahref]
      
     </strong>
     <div class="lang-wrap">
      <span class="hidden-obj">
       연합뉴스 다국어사이트 바로가기
      </span>
      <ul class="lang-site">
       <li class="en">
        [linkx]
        
       </li>
       <li class="zh">
        <a data-stat-code="header_lang_zh" data-stat-section="" href="/" title="(새창)Chinese Simplified Chinese characters">
         中文
        </a>
       </li>
       <li class="jp">
        [linkx]
        
       </li>
       <li class="ar">
        [linkx]
        
       </li>
       <li class="sp">
        [linkx]
        
       </li>
       <li class="fr">
        <a data-stat-code="header_lang_fr" data-stat-section="" href="r" title="(새창)French">
         Français
        </a>
       </li>
      </ul>
      <span class="bar">
       [ahref]
       
      </span>
      <span class="bar">
       [linkx]
       
      </span>
     </div>
     <div class="agency-svc agency-svc02">
      <dl class="svc-zone">
       <dt class="hidden-obj">
        연합뉴스 자회사 서비스 바로가기
       </dt>
       <dd>
        [ahref]
        
       </dd>
       <dd class="bar">
        <a data-stat-code="header_svc_mds" data-stat-section="" href="m" rel="nofollow" target="_blank" title="새창">
         MIDAS
        </a>
       </dd>
       <dd>
        [linkx]
        
       </dd>
       <dd>
        [linkx]
        
       </dd>
      </dl>
      <div class="account-zone">
       <div class="acc-active">
        <a class="login login02" data-stat-code="header_acc_login" data-stat-section="" href="/member/login" rel="nofollow">
         로그인
        </a>
       </div>
       <div class="acc-disable">
        [linkx]
        
        <a href="/member/update" rel="nofollow">
         정보수정
        </a>
       </div>
      </div>
      <dl class="sns-zone">
       <dt class="hidden-obj">
        연합뉴스 SNS 계정 바로가기
       </dt>
       <dd class="fb">
        [linkx]
        
       </dd>
       <dd class="tw">
        <a data-stat-code="header_sns_tw" data-stat-section="" href="/yonhaptweet" rel="nofollow" target="_blank" title="새창">
         트위터
        </a>
       </dd>
       <dd class="insta">
        [ahref]
        
       </dd>
       <dd class="kks">
        <a data-stat-code="header_sns_kks" data-stat-section="" href="/ch/yonhapmedia" rel="nofollow" target="_blank" title="새창">
         카카오스토리
        </a>
       </dd>
      </dl>
     </div>
     <div class="top-banner">
      <span class="blind">
       배너
      </span>
      <ul>
       <li class="top-banner1 ads-top01">
       </li>
       <li class="top-banner2 ads-top02">
       </li>
      </ul>
     </div>
     <div class="today today-weather">
      <span class="blind">
       날짜와 날씨
      </span>
      <span class="date" id="tickerWeatherDate">
       <strong>
       </strong>
       <em>
       </em>
      </span>
      <div class="weather main-top-weather" id="tickerWeather">
       [linkx]
       
      </div>
     </div>
    </div>
    <div class="navi-wrap">
     <div class="nav-zone" id="nav">
      <span class="hidden-obj">
       메뉴
      </span>
      <p class="home">
       <a href="/index">
        <span>
         뉴스 홈
        </span>
       </a>
      </p>
      <p class="d-news">
       <a href="/digital/index">
        <span>
         #D
        </span>
       </a>
      </p>
      <p class="hng-news">
       [ahref]
       
      </p>
      <ul class="nav">
       <li class="m01" name="m01">
        <span class="nochild">
         <a data-stat-code="navi_news" data-stat-section="" href="/news">
          최신기사
         </a>
        </span>
       </li>
       <li class="m02 gnb-wrap" name="m02">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m03 gnb-wrap" name="m03">
        <a data-stat-code="navi_nk" data-stat-section="" href="/nk/index">
         <span>
          북한
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/video/index">
            영상
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m04 gnb-wrap" name="m04">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/economy">
            경제
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/job">
            취업
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/consumer">
            유통/소비자
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m05 gnb-wrap" name="m05">
        <a data-stat-code="navi_stock" data-stat-section="" href="/stock/index">
         <span>
          금융/증권
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m06 gnb-wrap" name="m06">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           과학<li>[ahref]</li><li>[pkeyx]</li><li>[ahref]</li>[pkeyx]
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/health">
            건강
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m07 gnb-wrap" name="m07">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/women-child">
            여성/아동
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m08 gnb-wrap" name="m08">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>[pkeyx]<li>[pkeyx]</li>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gyeonggi/index">
            경기
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li><li>[pkeyx]</li>
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gangwon/index">
            강원
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/jeju/index">
            제주
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m09 gnb-wrap" name="m09">
        [linkx]
         [area1][keywordx]<li>[ahref]</li>[linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m10 gnb-wrap" name="m10">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/all">
            전체기사
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m11 gnb-wrap" name="m11">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][area1][mkey1][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][ahref][linkx]
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m12 gnb-wrap" name="m12">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/all">
            전체기사
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/centralsouth-america">
            중남미
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/international-org">
            국제기구
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m13" name="m13">
        <span class="nochild">
         [linkx]
         
        </span>
       </li>
       <li class="m14 gnb-wrap" name="m14">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/interview">
            인터뷰
           </a>
          </li>
         </ul>
        </div>
       </li>
       <li class="m15 gnb-wrap" name="m15">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m16" name="m16">
        <span class="nochild">
         <a data-stat-code="navi_opinion" data-stat-sectio="" href="/opinion/index">
          오피니언
         </a>
        </span>
       </li>
       <li class="m17 visual" name="m17">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/photo/index">
            포토
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li class="video">
           [linkx]
           
           <span>
            [ahref]
            
            [linkx]
            
           </span>
          </li>
          <li class="vrroom">
           [ahref]
           
          </li>
         </ul>
         <ul class="visual-list">
          <li>
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="fixed-bnr02">
    <span class="blind">
     배너
    </span>
    <div>
     <div class="ads-fixed01">
     </div>
    </div>
   </div>
   <div class="fixed-bnr03">
    <span class="blind">
     배너
    </span>
    <div>
    </div>
   </div>
   <div id="content">
    <[keywordx]>
    </[keywordx]>
    <div class="today-news-wrap" id="todayJuyo">
     <div class="today-news">
      <span class="today-sl-btn">
       <button class="today-prev">
        이전 슬라이드
       </button>
       <button class="today-next">
        다음 슬라이드
       </button>
      </span>
      <ul class="list">
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190813129800001?section=politics/all">
         <div class="news-con">
          <p class="tit-news">
           당정청 "소재부품장비 1조6천578억원규모 사업 이달내 예타면제"
          </p>
         </div>
        </a>
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190813081500001?section=politics/national-assembly">
         <div class="img-con">
         </div>
         <div class="news-con">
          <li>[area1][mkey1]</li>[ahref][area1][mkey1][area1][mkey1]
         </div>
        </a>
       </li>
       <li>
        [area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][ahref][ahref][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][ahref][area1][keywordx][area1][mkey1][ahref][linkx][area1][mkey1][ahref][area1][keywordx]
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190813077900061?section=society/environment">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           경기도 폭염경보 23개 시군 확대…내일까지 더위 지속
          </p>
         </div>
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190813075300001?section=politics/national-assembly">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           '두 쪽' 평화당, 첫날부터 기싸움 팽팽…중립파 3인 거취 '촉각'
          </p>
         </div>
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="in">
     </div>
    </div>
    <div class="contents">
     <div class="contents01 scroll-article-zone01">
      <div class="scroll-start01">
       <div class="scroll-in01">
        <div class="contents-box view-wrap">
         <div class="sta-wrap02" data-stat-code="lnb_news" data-stat-section="">
          <span class="tit">
           [ahref]
           
          </span>
         </div>
         <div class="article-wrap" id="articleWrap">
          <h1 class="tit-article">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h1>
          <div class="article-sns-md sns-md04">
           <div class="share-info">
            <span class="tt">
             송고시간 |
             <em>
              2016-10-06 08:10
             </em>
            </span>
            <div class="sns-share01">
             <button class="fb" data-stat-code="share_fb" data-stat-section="" onclick="javascript:SNS.fbShare();" type="button">
              <span>
               페이스북
              </span>
             </button>
             <button class="tw" data-stat-code="share_tw" data-stat-section="" onclick="javascript:SNS.twit();" type="button">
              <span>
               트위터
              </span>
             </button>
             <button class="kks" data-stat-code="share_kks" data-stat-section="" onclick="javascript:SNS.kakaostory();" type="button">
              <span>
               카카오스토리
              </span>
             </button>
             <div class="more-wrap">
              <button class="more" type="button">
               <span>
                더보기
               </span>
              </button>
              <div class="more-list">
               <button class="fbm" data-stat-code="share_fbm" data-stat-section="" onclick="javascript:SNS.fmShare();" type="button">
                <span>
                 페이스북메신저
                </span>
               </button>
               <button class="band" data-stat-code="share_band" data-stat-section="" onclick="javascript:SNS.band();" type="button">
                <span>
                 밴드
                </span>
               </button>
               <button class="blog" data-stat-code="share_blog" data-stat-section="" onclick="javascript:SNS.blog();" type="button">
                <span>
                 블로그
                </span>
               </button>
               <button class="pin" data-stat-code="share_pin" data-stat-section="" onclick="javascript:SNS.pinShare();" type="button">
                <span>
                 핀터레스트
                </span>
               </button>
              </div>
             </div>
            </div>
            <ul class="link-btn-md">
             <li class="btn_print">
              [linkx]
              
             </li>
             <li class="btn_zoom_in">
              [linkx]
              
             </li>
             <li class="btn_zoom_out">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="link-info">
            <ul class="link-site">
            </ul>
           </div>
          </div>
          <div class="article">
           <div class="stit">
            <strong>
             <b>
              지름 50㎜·무게 70ｇ 일반대추의 4배, 얼핏 보면 사과
              <br/>
              달고 아삭거리는 식감 일품…이달부터 본격 출하 시작
             </b>
            </strong>
           </div>
           <div class="article-img">
            <li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>
           </div>
           <p>
            (보은=연합뉴스) 박병기 기자 = 충북 보은서 달걀보다 큰 왕대추가 생산되고 있다. 어린아이 주먹만한 크기에 붉은빛이 곱게 올라 얼핏 보면 사과인듯한 착각마저 든다.
            <br/>
           </p>
           <div class="article-img">
            <div class="img-info">
             <strong>
              달걀보다 큰 왕대추.
             </strong>
            </div>
           </div>
           <p>
            보은대추마을을 운영하는 정용우(55)씨 밭에는 요즘 일반 대추보다 4∼5배 큰 왕대추가 주렁주렁 매달려 있다. 개중에는 지름 50㎜, 무게 70ｇ 나가는 '대물'도 있다.
           </p>
           <p>
            덩치만 큰 게 아니라 아삭거리는 식감 역시 일품이다. 당도도 30∼35브릭스로 여느 대추보다 달다.
           </p>
           <div class="banner-0-wrap">
            <div class="ads-article01">
            </div>
           </div>
           <p>
            이 대추는 다음 달 서울 코엑스에서 열리는 한국 과일 대전에 출품될 예정이다.
           </p>
           <p>
            왕대추를 매단 나무는 순수 토종이다. 알 굵은 토종 대추의 모종을 받아 여러 해 육종하면서 정씨 스스로 재배기술을 터득했다.
           </p>
           <p>
            그는 "우량 종자를 비옥한 토양에 재배하면서, 적당하게 가지를 치고 알을 솎아준 게 왕대추 생산 비결"이라며 "올해는 유독 큰 대추가 많이 매달려 나뭇가지가 휠 지경"이라고 말했다.
            <br/>
           </p>
           <div class="article-img">
            <div class="img-info">
             <strong>
              달걀보다 큰 왕대추.
             </strong>
            </div>
           </div>
           <p>
            이 지역에는 정씨 말고도 왕대추를 생산하는 농장이 숱하다.[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li><li>[area1][mkey1]</li>
           </p>
           <p>
            대추는 대개 지름 30㎜ 이상이면 '대과'로 분류하는 데, 올해는 농장마다 20∼30%씩 대과가 나온다.
           </p>
           <p>
            일부 가뭄 피해가 있었지만, 무더위 속 풍족했던 일사량 덕분이다.
           </p>
           <p>
            보은군과 농민들은 올해 대추가격(1㎏)을 지름 30㎜ 미만 2만원, 28㎜ 미만 1만8천원, 26㎜ 미만 1만3천원으로 정했다.
           </p>
           <p>
            이보다 큰 '대과' 가격은 농가 자율에 맡겼는데, 보통 2만5천∼3만원씩 출하되는 것으로 알려졌다.
           </p>
           <p>
            보은군은 10여년 전부터 '대추는 과일이다'라는 슬로건을 내걸고 대추를 육성해왔다.
            <br/>
           </p>
           <div class="article-img">
            <div class="img-info">
             <strong>
              달걀보다 큰 왕대추.
             </strong>
            </div>
           </div>
           <p>
            이를 통해 대추 재배농가는 1천400여곳으로 늘었고, 720㏊의 대추밭이 조성돼 해마다 국내 유통량의 10%에 해당하는 2천200t의 대추가 생산된다.
           </p>
           <p>
            장덕수 보은군청 대추계장은 "속리산 주변 황토밭에서 재배되는 보은대추는 달고 알이 굵어 전체의 60%가량이 생과일 상태로 소비된다"고 설명했다.
           </p>
           <p>
            보은군은 대추 직거래를 위해 이달 14∼23일 보은읍 뱃들공원 일원서 대추축제를 연다.
           </p>
           <p>
            보은 대추축제는 2014년부터 3년 연속 충북도 유망축제로 지정됐다.
            <br/>
           </p>
           <div class="article-img">
            <div class="img-info">
             <strong>
              달걀보다 큰 왕대추.
             </strong>
            </div>
           </div>
           <p>
            작년 축제에는 82만8천명이 방문해 대추 등 94억3천만원 어치의 농산물을 구입해갔다.
           </p>
           <p>
            bgipark@yna.co.kr
            <br/>
           </p>
           <p class="adrs">
            <span class="cprgt">
             <저작권자(c) 연합뉴스, 무단 전재-재배포 금지>
            </span>
            <span class="pblsh">
             2016/10/06 08:10 송고
            </span>
           </p>
          </div>
         </div>
         <div class="view-ad-wrap">
          <span class="blind">
           광고
          </span>
          <ul id="ad2235_1548979385783">
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text01" scrolling="no" src="https://www.kodcad.kr/ad/43/d27b94fe14563f6097725a5dce7e632c.html" title="엠엔에이치마케팅 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text04" scrolling="no" src="https://adv.imadrep.co.kr/3588_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text05" scrolling="no" src="https://adv.imadrep.co.kr/3554_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4136_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4137_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
          </ul>
         </div>
         <div class="ad-ifm01">
          <iframe frameborder="0" height="180" name="ifm-ad-joyninfo01" scrolling="no" src="//m.joyninfo.com/yna/yna_w1.asp" title="조인&amp;amp;인포 텍스트 광고" width="586">
          </iframe>
         </div>
         <div class="comment-wrap">
          <span class="blind">
           댓글쓰기
          </span>
          <div data-id="yonhapnews" data-uid="NTYvNzAxLzYz" id="lv-container">
          </div>
         </div>
         <div class="banner-box09">
          <div class="con">
           <div id="div-gpt-ad-1564047709377-0" style="width: 300px; height: 250px;">
           </div>
           <div id="div-gpt-ad-1564047859628-0" style="width: 300px; height: 250px;">
           </div>
          </div>
         </div>
         <div class="floating-banner01">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
        <div class="contents-box view-wrap03">
         [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][ahref][linkx][area1][keywordx][area1][mkey1]
        </div>
        <div class="contents-box view-wrap02">
         [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
        </div>
       </div>
      </div>
     </div>
     <div class="contents02 scroll-article-zone02">
      <div class="scroll-start02">
       <div class="scroll-in02">
        <div class="contents-box aside-top-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-topright01">
          </li>
         </ul>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe allowtransparency="yes" border="0" frameborder="no" height="26" id="popin_iframe_ad" marginheight="0" marginwidth="0" scrolling="no" src="https://api.popin.cc/iframe/code.html?id=yna_right_text&amp;w=290px&amp;h=26px&amp;containerId=_popIn_recommend_text_iframe&amp;media=www.yna.co.kr_text" width="290">
         </iframe>
         <iframe allowtransparency="true" frameborder="0" height="235" marginheight="0" marginwidth="0" name="ifm-ad-imad-text01" scrolling="no" src="//adv.imadrep.co.kr/2161_01.html" title="아이엠애드 광고(텍스트8)" width="290">
         </iframe>
        </div>
        <iframe class="ifm-hot-news" frameborder="0" height="370" name="ifm-hot-news" scrolling="no" src="//www.yna.co.kr/program/hot-news" title="핫뉴스 프레임" width="340">
        </iframe>
        <iframe class="ifm-ad-bithumb" frameborder="0" height="253" name="ifm-ad-bithumb" scrolling="no" src="/program/bithumb" title="빗썸배너광고" width="340">
        </iframe>
        <div class="contents-box aside-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-right01">
          </li>
          <li class="ads-right02">
          </li>
          <li class="ads-right03">
          </li>
          <li class="ads-right04">
          </li>
          <li class="ads-right05">
          </li>
          <li class="ads-right06">
          </li>
          <li class="ads-right07">
          </li>
          <li class="ads-right08">
          </li>
          <li class="ads-right09">
          </li>
         </ul>
        </div>
        <div class="contents-box list-style01 popularnews-zone">
         <h5 class="tit-type01" data-stat-code="box_popularnews_tit" data-stat-section="">
          [ahref]
          
         </h5>
         <h5 class="tit-type03" data-stat-code="box_popularnews_tit" data-stat-section="">
          [ahref]
          
         </h5>
         <div class="tab-wrap01 tab-setting" data-stat-code="box_popularnews_tab" data-stat-section="">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="y">
             사회
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
         <div class="list-wrap" id="popularTotal">
          <h6 class="hidden-obj">
           종합
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularPolitics">
          <h6 class="hidden-obj">
           정치
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEconomy">
          <h6 class="hidden-obj">
           산업/경제[area1][keywordx][area1][mkey1][area1][keywordx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][linkx][ahref][linkx][ahref][area1][mkey1][linkx][ahref][area1][keywordx][ahref][area1][mkey1][area1][keywordx]
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSociety">
          <h6 class="hidden-obj">
           사회
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularLocal">
          <h6 class="hidden-obj">
           전국
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSports">
          <h6 class="hidden-obj">
           스포츠
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEntertainment">
          <h6 class="hidden-obj">
           연예ㆍ문화
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularWorld">
          <h6 class="hidden-obj">
           세계
          </h6>
          <ul>
          </ul>
         </div>
         [linkx]
         
        </div>
        <div class="contents-box ad-wrap02">
         <iframe allowtransparency="true" frameborder="0" height="96" name="ifm-ad-imad-text02" scrolling="no" src="//adv.imadrep.co.kr/2162_01.html" title="아이엠애드 광고(텍스트4)" width="290">
         </iframe>
        </div>
        <div class="contents-box ad-wrap01">
        </div>
        <iframe class="iframe-todaynews" frameborder="0" name="ifm-todaynews" scrolling="no" src="//www.yna.co.kr/program/major-news" title="오늘의 주요 뉴스">
        </iframe>
        <div class="contents-box list-style01 yspecial-wrap">
         <div class="iframe-yspecial" name="ifm-yspecial">
          <div class="y-special-zone">
           <h5 class="tit-category">
           </h5>
           <h5 class="tit-type01" data-stat-code="y_special_tit" data-stat-section="">
            [ahref]
            
           </h5>
           <div class="bnr-y-special">
            <a href="/" rel="nofollow" target="_blank" title="새창">
            </a>
           </div>
          </div>
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe border="0" frameborder="0" height="156" leftmargin="0" name="ifm-ad-sw-text02" scrolling="no" src="//ad.sunnyworks.co.kr/data/SW125152.html" title="써니웍스 광고(텍스트 6줄)" topmargin="0" width="290">
         </iframe>
        </div>
        <div class="contents-box goolge-banner">
         <span class="blind">
          광고
         </span>
         <div id="ad_visual" title="인라이플 광고">
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe frameborder="0" height="192" name="ifm-ad-imad-text03" scrolling="no" src="//adv.imadrep.co.kr/2837_01.html" title="아이엠애드 광고(텍스트7)" width="100%">
         </iframe>
        </div>
        <div class="contents-box list-style02 journey-zone">
         <h5 class="tit-type03">
          <span class="arr">
           여행/축제
          </span>
         </h5>
         <ul class="area">
          <li>
           <div class="box-flex">
            <a data-stat-code="box_journey" data-stat-section="" href="/view/AKR20190813100800061?section=local/gyeonggi/index" target="_top">
             <div class="img-con">
              <span class="over">
              </span>
             </div>
             <div class="tit-con">
              <h3 class="tit">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </a>
           </div>
          </li>
          <li>
           <div class="box-flex">
            [ahref]
            
           </div>
          </li>
         </ul>
         <a class="btn_more" data-stat-code="box_journey_btn_more" data-stat-section="" href="/travel-festival/index" target="_top" title="여행 더보기">
          더보기
         </a>
        </div>
        <div class="contents-box list-style02 banner-box06">
         <span class="ad-tag">
         </span>
         <div class="con">
          <iframe allowtransparency="false" frameborder="0" height="224" marginheight="0" marginwidth="0" name="ifm-ad-imad-text04" scrolling="no" src="//adv.imadrep.co.kr/1247_01.html" title="아이엠애드 광고" width="290">
          </iframe>
         </div>
        </div>
        <div class="hng-zone" id="hngZone">
         <h5 class="tit02">
          [linkx]
          
         </h5>
         <ul class="list">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="box_hng" data-stat-section="" href="e" rel="nofollow" target="_blank" title="새창">
            <div class="img-con">
             <span class="over">
             </span>
            </div>
            <div class="news-con">
             <h4 class="tit">
             </h4>
            </div>
           </a>
          </li>
         </ul>
         [linkx]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <span class="btn-top" id="btnScrollTop">
    <button type="button">
     맨위로
    </button>
   </span>
   <div id="footer">
    <div class="footer-wrap01 service-wrap">
     <span class="blind">
      전체메뉴
     </span>
     <div class="footer-menu01">
      <div class="menu-zone01">
       <div class="link-con">
        <dl class="list01">
         <dt class="tit">
          [linkx]
          
         </dt>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="/politics/index">
           정치
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          문화[linkx][area1][mkey1]<li>[area1][mkey1]</li>[pkeyx][ahref]
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx]
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="/opinion/index">
           오피니언
          </a>
         </dd>
        </dl>
       </div>
      </div>
      <div class="menu-zone02">
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [linkx]
           
          </dt>
          <dd>
           <a href="/people/personnel">
            인사
           </a>
          </dd>
          <dd>
           [pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][linkx]
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit space01">
           [linkx]
           
          </dt>
          <dd class="br">
           <a href="/opinion/paper">
            주요신문
            <br/>
            톱뉴스/사설
           </a>
          </dd>
          <dd>
           <a href="/opinion/headline">
            이 시각 헤드라인
           </a>
          </dd>
         </dl>
         <div class="list01">
          <p class="tit">
           [linkx]
           
          </p>
         </div>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           테마별뉴스
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/theme/breaknews">
            긴급뉴스
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [linkx]
           
          </dt>
          <dd>
           <a href="/mobile-service/web">
            모바일웹
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
         <dl class="list01">
          <dt class="hidden-obj">
           비주얼뉴스
          </dt>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           외국어
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
       </div>
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/product/premium">
            뉴스 상품
           </a>
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/product/newsleader">
            뉴스리더
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           출판물
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/advertisement/ktx">
            광고
           </a>
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/advertisement/mobile">
            모바일
           </a>
          </dd>
          <dd>
           <a href="/advertisement/pc">
            PC/홈페이지
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/" target="_blank" title="새창">
            콘텐츠 판매
           </a>
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/YNA/ContentsSales/ContentsData/YISW_PeopleHome.aspx" rel="nofollow" target="_blank" title="새창">
            인물정보
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           관련사이트
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            채용
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list02">
          <dt class="tit">
           유튜브
          </dt>
          <dd class="yna">
           [linkx]
           
          </dd>
          <dd class="tong">
           <a href="/channel/UCHzW_7Mf8G0JxP4b0LoAd7A" rel="nofollow" target="_blank" title="새창">
            통통TV
           </a>
          </dd>
          <dd class="kn">
           [linkx]
           
          </dd>
          <dd class="yttv">
           [ahref]
           
          </dd>
         </dl>
        </div>
       </div>
      </div>
     </div>
     <div class="footer-menu02">
      [ahref]
      
     </div>
    </div>
    <ul class="footer-link" data-stat-code="footer" data-stat-section="">
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <div class="addr-info">
     <address>
      연합뉴스 서울시 종로구 율곡로2길 25 | 등록번호 문화, 나00009 | 등록일자 1980.12.29 | 발행일자 1980.12.29 | Tel. 02-398-3114
     </address>
    </div>
    <ul class="copy">
     <li>
      <strong>
       (C) Yonhapnews
      </strong>
     </li>
     <li class="copy-in">
      [대표이사] 조성부
     </li>
     <li class="copy-in">
      [편집인] 김경석
     </li>
    </ul>
   </div>
  </div>
  <div class="article-ad-box">
   <div id="div-gpt-ad-1564047529956-0" style="width: 300px; height: 250px;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0047
  </b>
 </body>
</html>|<---