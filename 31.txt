--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "//www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="//www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="no-cache" http-equiv="Cache-Control"/>
  <meta content="0" http-equiv="Expires"/>
  <meta content="no-cache" http-equiv="Pragma"/>
  <meta content="website" property="og:type"/>
  <meta content="https://hanbandokr.com/web/product/big/201906/05c43b26026e182f77a06db8d41e549d.jpg" property="og:image"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="https://hanbandokr.com/product/애플쥬베-사과대추-16kg/25/" property="og:url">
   <meta content="[애플쥬베] 사과대추 - 1.6kg" property="og:title">
    <meta content="일반 대추와 비교하여 크기가 2배 이상 큰 사과대추는 과즙이 풍부하고 아삭아삭한 식감을 자랑합니다.  대추의 이로운 성분 및 효능은 물론, 비타민 C는 사과의 20배 이상을 함유하고  있습니다. 1년에 단 한철뿐인 품귀성 덕에 선물로 준비하셔도 아주 좋습니다." property="og:description">
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="product" property="og:type"/>
     <meta content="https://hanbandokr.com/web/product/big/201707/25_shop1_347441.jpg" property="og:image"/>
     <meta content="39000" property="product:price:amount"/>
     <meta content="KRW" property="product:price:currency"/>
     <meta content="39000" property="product:sale_price:amount"/>
     <meta content="KRW" property="product:sale_price:currency"/>
     <title>
      [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </title>
     <meta content="PRODUCT_DETAIL" name="path_role"/>
     <meta content="[농업회사법인 한반도]" name="author"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
     <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
     <meta content="/product/detail.html" name="design_html_path"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-WGX8WS3" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div id="skipNavigation">
   <p>
    <a href="y">
     전체상품목록 바로가기
    </a>
   </p>
   <p>
    [linkx]
    
   </p>
  </div>
  <div class="animsition" id="wrapper">
   <div id="container">
    <div id="header">
     <h1 class="xans-element- xans-layout xans-layout-logotop">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h1>
     <div class="header_member">
      <ul class="xans-element- xans-layout xans-layout-statelogoff">
       <li class="first">
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/myshop/index.html">
         마이페이지
        </a>
       </li>
       <br/>
       <li class="first">
        <a class="log" href="/member/login.html">
         로그인
        </a>
       </li>
       <li style="position:relative;">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div id="menu">
      <ul class="group" id="category">
       <li class="xans-element- xans-layout xans-layout-category sub_menu">
        <span>
         <a href="/shopinfo/company.html">
          회사소개
         </a>
        </span>
        <span class="pst1 xans-record-">
         [linkx]
         
        </span>
        <span class="pst2 xans-record-">
         <a href="/product/list.html?cate_no=42">
          경산대추
         </a>
        </span>
        <span class="pst3 xans-record-">
         [linkx]
         
        </span>
        <span class="pst4 xans-record-">
         [ahref]
         
        </span>
        <span class="pst5 xans-record-">
         [ahref]
         
        </span>
       </li>
      </ul>
      <div class="line">
      </div>
      <ul class="group" id="board">
       <li class="xans-element- xans-layout xans-layout-boardinfo sub_menu">
        <span class="xans-record-">
         [linkx]
         
        </span>
        <span class="xans-record-">
         [linkx]
         
        </span>
        <span class="xans-record-">
         [ahref]
         
        </span>
        <span class="xans-record-">
         [ahref]
         
        </span>
       </li>
      </ul>
      <ul class="group" id="magazine">
       <li class="sub_menu">
        <span>
         [linkx]
         
        </span>
        <span>
         [ahref]
         
        </span>
       </li>
      </ul>
     </div>
     <form action="/product/search.html" enctype="multipart/form-data" id="searchBarForm" method="get" name="" target="_self">
      <div class="xans-element- xans-layout xans-layout-searchheader">
       <fieldset>
        <legend>
         검색
        </legend>
       </fieldset>
      </div>
     </form>
     <ul class="talk">
      <li class="naver">
       <a href="e" onclick="popWin = window.open('https://talk.naver.com/ct/wc665d','windows','width=600,height=670,scrollbars=yes'); popWin.focus(); return false;">
        <strong>
         네이버톡톡
         <strong>
          문의하기
         </strong>
        </strong>
       </a>
      </li>
      <li class="kakao">
       [linkx]
       
      </li>
     </ul>
     <ul class="pay">
      <li class="">
      </li>
      <li class="">
      </li>
     </ul>
     <div class="offmenu">
      <div class="xans-element- xans-layout xans-layout-multishoplist thumb">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="xans-element- xans-layout xans-layout-multishoplistitem">
        <li class="xans-record-">
         [linkx]
         
        </li>
        <li class="xans-record-">
         [linkx]
         
        </li>
        <li class="xans-record-">
         [ahref]
         
        </li>
        <li class="xans-record-">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="xans-element- xans-layout xans-layout-info tel">
       <h3>
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="tel">
        <i class="fa fa-phone">
        </i>
        053-854-7666
       </p>
       <ul>
        <li>
         OPEN AM 10:00 - PM 06:00
         <br/>
         SAT/SUN/HOLIDAY CLOSE !!
         <br/>
         <br/>
         Lunch 12:00pm - 01:00pm
         <br/>
         Sat, Sun, Holiday Off
        </li>
        <li>
         CJ대한통운 -
         <a href="/parcel/pa_004.jsp" target="_blank">
          TRACKING
         </a>
        </li>
       </ul>
      </div>
      <div class="bank">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul>
        <li>
         기업은행
         <strong>
          545-035097-01-010
         </strong>
        </li>
        <li>
         예금주 농업회사법인 (주)한반도
        </li>
       </ul>
      </div>
      <div class="return">
       <h3>
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        <i class="fa fa-map-marker">
        </i>
        교환/반품 배송지
       </p>
       <ul>
        <li>
         경북 경산시 진량읍 가야리 134-2
        </li>
        <li>
         물류센터
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div id="contents">
     <div class="xans-element- xans-product xans-product-headcategory path">
      <span>
       현재 위치
      </span>
      <ol>
       <li>
        <a href="/">
         <i class="fa fa-home">
         </i>
        </a>
       </li>
       <li class="">
        <a href="/category/제품구매/24/">
         제품구매
        </a>
       </li>
       <li class="">
        <a href="/category/사과대추-애플쥬베/44/">
         사과대추 애플쥬베
        </a>
       </li>
       <li class="displaynone">
        [ahref]
        
       </li>
       <li class="displaynone">
        <strong>
         [linkx]
         
        </strong>
       </li>
      </ol>
     </div>
     <div class="xans-element- xans-product xans-product-detail">
      <div class="detailArea">
       <div class="xans-element- xans-product xans-product-image imgArea">
        <div class="keyImg">
         <div class="likeButton likePrd likePrd_25">
          <button type="button">
           <li>[pkeyx]</li><li>[area1][keywordx]</li>[area1][keywordx][pkeyx][area1][mkey1]
          </button>
         </div>
         <div class="thumbnail">
          [ahref]
          
          <div id="zoom_wrap">
          </div>
         </div>
        </div>
        <div class="xans-element- xans-product xans-product-addimage listImg">
         <ul>
          <li class="xans-record-">
          </li>
         </ul>
        </div>
       </div>
       <div class="infoArea">
        <div class="headingArea">
         <div class="color displaynone">
         </div>
         <h2 id="product_name">
          <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
         </h2>
         <span class="delivery displaynone">
          (해외배송 가능상품)
         </span>
         [ahref]
         
         <div class="supply displaynone">
          <span>
          </span>
          <a href="e" onclick="">
          </a>
         </div>
        </div>
        <div class="xans-element- xans-product xans-product-detaildesign">
         <table border="1" summary="">
          <caption>
           기본 정보
          </caption>
          <tbody>
           <tr class="xans-record-" style="display:none;">
            <th scope="row">
             <span style="font-size:16px;color:#000000;font-weight:bold;">
              상품명
             </span>
            </th>
            <td>
             <span style="font-size:16px;color:#000000;font-weight:bold;">
              [애플쥬베] 사과대추 - 1.6kg
             </span>
            </td>
           </tr>
           <tr class="xans-record-">
            <th scope="row">
             <span style="font-size:12px;color:#555555;">
              상품요약정보
             </span>
            </th>
            <td>
             <span style="font-size:12px;color:#555555;">
              1년 중 단 한번 (9월~10월)
             </span>
            </td>
           </tr>
           <tr class="xans-record-">
            <th scope="row">
             <span style="font-size:12px;color:#555555;">
              소비자가
             </span>
            </th>
            <td>
             <span style="font-size:12px;color:#555555;">
              <span id="span_product_price_custom">
               <strike>
                42,000원
               </strike>
              </span>
             </span>
            </td>
           </tr>
           <tr class="xans-record-">
            <th scope="row">
             <span style="font-size:16px;color:#000000;font-weight:bold;">
              판매가
             </span>
            </th>
            <td>
             <span style="font-size:16px;color:#000000;font-weight:bold;">
              <strong id="span_product_price_text">
               39,000원
              </strong>
             </span>
            </td>
           </tr>
           <tr class="xans-record-">
            <th scope="row">
             <span style="font-size:12px;color:#555555;">
              상품간략설명
             </span>
            </th>
            <td>
             <span style="font-size:12px;color:#555555;">
              일반 대추와 비교하여 크기가 2배 이상 큰 사과대추는 과즙이 풍부하고 아삭아삭한 식감을 자랑합니다. 
대추의 이로운 성분 및 효능은 물론, 비타민 C는 사과의 20배 이상을 함유하고  있습니다.
1년에 단 한철뿐인 품귀성 덕에 선물로 준비하셔도 아주 좋습니다.
             </span>
            </td>
           </tr>
          </tbody>
         </table>
        </div>
        <table border="1" summary="">
         <caption>
          SNS 상품홍보
         </caption>
         <tbody>
          <tr class="">
           <th scope="row">
            SNS 상품홍보
           </th>
           <td class="social">
            <ul class="xans-element- xans-product xans-product-customsns xans-record-">
             <li>
             </li>
            </ul>
           </td>
          </tr>
         </tbody>
        </table>
        <p class="displaynone">
        </p>
        <table border="1" summary="">
         <caption>
          상품 옵션
         </caption>
         <tbody class="xans-element- xans-product xans-product-option xans-record-">
          <tr class="displaynone" id="">
           <td class="selectButton" colspan="2">
            [linkx]
            
           </td>
          </tr>
         </tbody>
        </table>
        <div class="guideArea">
         <p class="info">
          (최소주문수량 1개 이상
          <span class="displaynone">
           / 최대주문수량 0개 이하
          </span>
          )
         </p>
         <span class="sizeGuide displaynone">
          <a class="size_guide_info" href="e" product_no="25">
           <i class="fa fa-folder">
           </i>
           사이즈 가이드
           <i class="fa fa-angle-right">
           </i>
          </a>
         </span>
        </div>
        <div class="" id="totalProducts">
         <table border="1" summary="">
          <caption>
           상품 목록
          </caption>
          <colgroup>
           <col style="width:284px;"/>
           <col style="width:80px;"/>
           <col style="width:110px;"/>
          </colgroup>
          <thead>
           <tr>
            <th scope="col">
             상품명
            </th>
            <th scope="col">
             상품수
            </th>
            <th scope="col">
             가격
            </th>
           </tr>
          </thead>
          <tbody class="">
           <tr>
            <td>
             [애플쥬베] 사과대추 - 1.6kg
            </td>
            <td>
             <span class="quantity">
              [linkx]
              
              <a href="e">
              </a>
             </span>
            </td>
            <td class="right">
             <span class="quantity_price">
              39000
             </span>
             <span class="mileage displaynone">
              (
              <span class="mileage_price">
               0
              </span>
              )
             </span>
            </td>
           </tr>
          </tbody>
          <tbody>
          </tbody>
          <tfoot>
           <tr>
            <td colspan="3">
             <strong>
              총 상품금액
             </strong>
             (수량) :
             <span class="total">
              <strong>
               <em>
                0
               </em>
              </strong>
              (0개)
             </span>
             <p class="ec-base-help txt11 displaynone EC-price-warning">
              할인가가 적용된 최종 결제예정금액은 주문 시 확인할 수 있습니다.
             </p>
            </td>
           </tr>
          </tfoot>
         </table>
        </div>
        <div class="xans-element- xans-product xans-product-action">
         <div class="ec-base-button">
          [linkx][area1][mkey1][pkeyx][area1][keywordx][pkeyx][linkx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][pkeyx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx]
         </div>
         <div class="m_pay">
         </div>
         <div id="NaverChk_Button">
         </div>
        </div>
       </div>
      </div>
      <div class="supplyInfo displaynone">
      </div>
      <div class="eventArea displaynone">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <div class="event">
       </div>
      </div>
     </div>
     <div class="xans-element- xans-product xans-product-additional">
      <div id="prdDetail">
       <ul class="link">
        <li class="selected">
         <a href="l">
          Detail
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <div class="cont" id="prd_img" style="text-align:center;">
        <p align="center">
        </p>
        <p align="center">
         <br/>
        </p>
        <p align="center">
        </p>
        <p align="center">
        </p>
        <p align="center">
         <br/>
        </p>
       </div>
      </div>
      <div id="prdInfo">
       <ul class="link">
        <li>
         [linkx]
         
        </li>
        <li class="selected">
         [linkx]
         
        </li>
        <li>
         <a href="w">
          Review
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <h2>
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <p class="desc">
        고객센터를 통해 확인하실 수 있습니다.
       </p>
       <div class="prdInfo">
        [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][pkeyx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
       </div>
      </div>
      <div id="prdReview">
       <ul class="link">
        <li>
         <a href="l">
          Detail
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li class="selected">
         [linkx]
         
        </li>
        <li>
         Q&amp;A<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </li>
       </ul>
       <div class="board">
        <p class="desc">
         상품의 사용후기를 적어주세요.
        </p>
        <div class="xans-element- xans-product xans-product-review">
         [ahref]
         
         <p class="noAccess displaynone">
          글읽기 권한이 없습니다.
         </p>
         <div class="minor displaynone">
          <p>
          </p>
          <p class="button">
           [ahref]
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[area1][mkey1]</li><li>[linkx]</li><li>[area1][mkey1]</li>
           
          </p>
         </div>
         <div class="ec-base-table typeList">
          <table border="1" class="" summary="">
           <caption>
            상품사용후기
           </caption>
           <colgroup>
            <col style="width:70px;"/>
            <col style="width:auto"/>
            <col style="width:100px;"/>
            <col style="width:100px;"/>
            <col style="width:80px;"/>
            <col class="displaynone" style="width:80px;"/>
           </colgroup>
           <thead>
            <tr>
             <th scope="col">
              번호
             </th>
             <th scope="col">
              제목
             </th>
             <th scope="col">
              작성자
             </th>
             <th scope="col">
              작성일
             </th>
             <th scope="col">
              조회
             </th>
             <th class="displaynone" scope="col">
              평점
             </th>
            </tr>
           </thead>
           <tbody class="center">
            <tr class="xans-record-">
             <td>
              14
             </td>
             <td class="subject left txtBreak">
              <a href="/article/제품후기/4/172/?no=172&amp;board_no=4&amp;spread_flag=T">
               보통
              </a>
              <span class="txtWarn">
               [1]
              </span>
             </td>
             <td>
              네****
             </td>
             <td class="txtInfo txt11">
              2018-12-19
             </td>
             <td class="txtInfo txt11">
              89
             </td>
             <td class="displaynone">
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              13
             </td>
             <td class="subject left txtBreak">
              [linkx]
              
              <span class="txtWarn">
               [1]
              </span>
             </td>
             <td>
              네****
             </td>
             <td class="txtInfo txt11">
              2018-10-26
             </td>
             <td class="txtInfo txt11">
              97[pkeyx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][pkeyx][area1][mkey1][linkx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx]
             </td>
             <td class="displaynone">
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              12
             </td>
             <td class="subject left txtBreak">
              [linkx]
              
              <span class="txtWarn">
               [1]
              </span>
             </td>
             <td>
              네****
             </td>
             <td class="txtInfo txt11">
              2018-10-25
             </td>
             <td class="txtInfo txt11">
              89
             </td>
             <td class="displaynone">
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              11
             </td>
             <td class="subject left txtBreak">
              [linkx]
              
              <span class="txtWarn">
               [1]
              </span>
             </td>
             <td>
              네****
             </td>
             <td class="txtInfo txt11">
              2018-10-24
             </td>
             <td class="txtInfo txt11">
              98
             </td>
             <td class="displaynone">
              <li>[linkx]</li>[linkx][pkeyx]
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              10
             </td>
             <td class="subject left txtBreak">
              [ahref]
              
              <span class="txtWarn">
               [1]
              </span>
             </td>
             <td>
              네****
             </td>
             <td class="txtInfo txt11">
              2018-10-24
             </td>
             <td class="txtInfo txt11">
              93
             </td>
             <td class="displaynone">
             </td>
            </tr>
           </tbody>
          </table>
         </div>
        </div>
        <p class="ec-base-button typeBorder">
         <span class="gRight">
          <span class="btn_gray_a">
           [ahref]
           
          </span>
          <span class="btn_white_a">
           <a href="/board/product/list.html?board_no=4">
            모두 보기
           </a>
          </span>
         </span>
        </p>
        <div class="xans-element- xans-product xans-product-reviewpaging ec-base-paginate typeSub">
         [ahref]
         
         [ahref]
         
         <ol>
          <li class="xans-record-">
           <a class="this" href="w">
            1
           </a>
          </li>
          <li class="xans-record-">
           <a class="other" href="w">
            2
           </a>
          </li>
          <li class="xans-record-">
           <a class="other" href="w">
            3[pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]
           </a>
          </li>
         </ol>
         <a href="w">
          <i class="fa fa-angle-right">
          </i>
         </a>
         [linkx]
         
        </div>
       </div>
      </div>
      <div id="prdQnA">
       <ul class="link">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li class="selected">
         [linkx]
         
        </li>
       </ul>
       <div class="board">
        <p class="desc">
         상품에 대해 궁금한 점을 해결해 드립니다.
        </p>
        <p class="nodata">
         게시물이 없습니다
        </p>
        <p class="ec-base-button typeBorder">
         <span class="gRight">
          <span class="btn_gray_a">
           [ahref]
           
          </span>
          <span class="btn_white_a">
           [linkx]
           
          </span>
         </span>
        </p>
       </div>
      </div>
     </div>
     <div id="footer">
      <div class="about">
       <ul class="left">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="/shopinfo/guide.html">
          GUIDE
         </a>
        </li>
       </ul>
      </div>
      <div class="footer_banner">
       <ul>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
        <li>
        </li>
       </ul>
      </div>
      <div class="inner">
       <div class="xans-element- xans-layout xans-layout-footer company_info">
        <p class="address">
         <span>
          <strong>
           COMPANY
          </strong>
          농업회사법인 주식회사 한반도
         </span>
         <span>
          <strong>
           OWNER
          </strong>
          배강찬
         </span>
         <span>
          <strong>
           TEL
          </strong>
          053-854-7666
         </span>
         <br>
          <span>
           <strong>
            ADDRESS
           </strong>
           38497 경상북도 경산시 진량읍 가야로66길 11
          </span>
          <span>
           <strong>
            CPO
           </strong>
           <a href="m">
            최명환 ( hanbando@hanbandokr.com )
           </a>
          </span>
          <br>
           <span>
            <strong>
             BUSINESS LICENCE
            </strong>
            507-81-14514
           </span>
           <span>
            <strong>
             MAIL-ORDER LICENCE
            </strong>
            제 2017-경북경산-0103호
            [linkx]
            
           </span>
           <br>
            <span class="xans-element- xans-layout xans-layout-footer">
             COPYRIGHT ©
             <strong class="name">
              농업회사법인 주식회사 한반도
             </strong>
             ALL RIGHTS RESERVED.
             [ahref]
             
            </span>
           </br>
          </br>
         </br>
        </p>
       </div>
       <div class="escrow">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div id="rightbar">
     <div class="xans-element- xans-layout xans-layout-multishoplist thumb">
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul class="xans-element- xans-layout xans-layout-multishoplistitem">
       <li class="xans-record-">
        <a href="/">
        </a>
       </li>
       <li class="xans-record-">
        [linkx]
        
       </li>
       <li class="xans-record-">
        [linkx]
         <li>[area1][mkey1]</li><li>[ahref]</li>[ahref]<li>[area1][keywordx]</li>[pkeyx]
        
       </li>
       <li class="xans-record-">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="xans-element- xans-layout xans-layout-info tel">
      <h3>
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <p class="tel">
       <i class="fa fa-phone">
       </i>
       053-854-7666
      </p>
      <ul>
       <li>
        OPEN AM 10:00 - PM 06:00
        <br/>
        SAT/SUN/HOLIDAY CLOSE !!
        <br/>
        <br/>
        Lunch 12:00pm - 01:00pm
        <br/>
        Sat, Sun, Holiday Off
       </li>
       <li>
        CJ대한통운 -
        [linkx]
        
       </li>
      </ul>
     </div>
     <div class="bank">
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <ul>
       <li>
        기업은행
        <strong>
         545-035097-01-010
        </strong>
       </li>
       <li>
        예금주 농업회사법인 (주)한반도
       </li>
      </ul>
     </div>
     <div class="return">
      <h3>
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <p>
       <i class="fa fa-map-marker">
       </i>
       교환/반품 배송지
      </p>
      <ul>
       <li>
        경북 경산시 진량읍 가야리 134-2
       </li>
       <li>
        물류센터
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div id="pagetop" style="display:none">
    [ahref]
    
    [ahref]
    
    [linkx]
    
   </div>
  </div>
  <div id="progressPaybar" style="display:none;">
   <div class="layerProgress" id="progressPaybarBackground">
   </div>
   <div id="progressPaybarView">
    <div class="box">
     <p class="graph">
      <span>
      </span>
      <span>
      </span>
     </p>
     <p class="txt">
      본 결제 창은 결제완료 후 자동으로 닫히며,결제 진행 중에 본 결제 창을 닫으시면
      <br>
       주문이 되지 않으니 결제 완료 될 때 까지 닫지 마시기 바랍니다.
      </br>
     </p>
    </div>
   </div>
  </div>
  <div class="xans-element- xans-layout xans-layout-multishopshipping">
   <div class="dimmed">
   </div>
   <div class="worldshipLayer ec-base-layer">
    <div class="header">
     <h3>
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
    </div>
    <div class="content">
     <p class="desc">
      PLEASE SELECT THE DESTINATION COUNTRY AND LANGUAGE :
     </p>
     <div class="select">
      <select class="xans-element- xans-layout xans-layout-multishopshippingcountrylist">
       <option class="xans-record-" value="GH">
        SHIPPING TO : 가나(GHANA)
       </option>
       <option class="xans-record-" value="GA">
        SHIPPING TO : 가봉(GABON)<li>[ahref]</li>[pkeyx]<li>[ahref]</li><li>[linkx]</li><li>[pkeyx]</li>
       </option>
       <option class="xans-record-" value="GY">
        SHIPPING TO : 가이아나(GUYANA)
       </option>
       <option class="xans-record-" value="GM">
        SHIPPING TO : 감비아(GAMBIA)
       </option>
       <option class="xans-record-" value="GT">
        SHIPPING TO : 과테말라(GUATEMALA)
       </option>
       <option class="xans-record-" value="GD">
        SHIPPING TO : 그레나다(GRENADA)
       </option>
       <option class="xans-record-" value="GE">
        SHIPPING TO : 그루지야(GEORGIA)
       </option>
       <option class="xans-record-" value="GR">
        SHIPPING TO : 그리스(GREECE)
       </option>
       <option class="xans-record-" value="GN">
        SHIPPING TO : 기니(GUINEA)
       </option>
       <option class="xans-record-" value="GW">
        SHIPPING TO : 기니비소(GUINEA-BISSAU)
       </option>
       <option class="xans-record-" value="NA">
        SHIPPING TO : 나미비아(NAMIBIA)
       </option>
       <option class="xans-record-" value="NG">
        SHIPPING TO : 나이지리아(NIGERIA)
       </option>
       <option class="xans-record-" value="ZA">
        SHIPPING TO : 남아프리카공화국(SOUTH AFRICA)
       </option>
       <option class="xans-record-" value="AN">
        SHIPPING TO : 네덜란드(네덜란드령앤틸리스)(NETHERLANDS(ANTILLES))
       </option>
       <option class="xans-record-" value="NL">
        SHIPPING TO : 네덜란드(네델란드)(NETHERLANDS)
       </option>
       <option class="xans-record-" value="AW">
        SHIPPING TO : 네덜란드(아루바섬)(ARUBA)
       </option>
       <option class="xans-record-" value="NP">
        SHIPPING TO : 네팔(NEPAL)
       </option>
       <option class="xans-record-" value="NO">
        SHIPPING TO : 노르웨이(NORWAY)
       </option>
       <option class="xans-record-" value="NZ">
        SHIPPING TO : 뉴질란드(NEW ZEALAND)
       </option>
       <option class="xans-record-" value="NE">
        SHIPPING TO : 니제르(NIGER)
       </option>
       <option class="xans-record-" value="NI">
        SHIPPING TO : 니카라과(NICARAGUA)
       </option>
       <option class="xans-record-" value="KR">
        SHIPPING TO : 대한민국(KOREA (REP OF,))
       </option>
       <option class="xans-record-" value="DK">
        SHIPPING TO : 덴마크(DENMARK)
       </option>
       <option class="xans-record-" value="GL">
        SHIPPING TO : 덴마크(그린란드)(GREENLAND)
       </option>
       <option class="xans-record-" value="FO">
        SHIPPING TO : 덴마크(페로즈제도)(FAROE ISLANDS)
       </option>
       <option class="xans-record-" value="DO">
        SHIPPING TO : 도미니카공화국(DOMINICAN REPUBLIC)
       </option>
       <option class="xans-record-" value="DM">
        SHIPPING TO : 도미니카연방(DOMINICA)
       </option>
       <option class="xans-record-" value="DE">
        SHIPPING TO : 독일(GERMANY)
       </option>
       <option class="xans-record-" value="TL">
        SHIPPING TO : 동티모르(TIMOR-LESTE)
       </option>
       <option class="xans-record-" value="LA">
        SHIPPING TO : 라오스(LAO PEOPLE'S DEM REP)
       </option>
       <option class="xans-record-" value="LR">
        SHIPPING TO : 라이베리아(LIBERIA)
       </option>
       <option class="xans-record-" value="LV">
        SHIPPING TO : 라트비아(LATVIA)
       </option>
       <option class="xans-record-" value="RU">
        SHIPPING TO : 러시아(RUSSIAN FEDERATION)
       </option>
       <option class="xans-record-" value="LB">
        SHIPPING TO : 레바논(LEBANON)
       </option>
       <option class="xans-record-" value="LS">
        SHIPPING TO : 레소토(LESOTHO)
       </option>
       <option class="xans-record-" value="RO">
        SHIPPING TO : 루마니아(ROMANIA)
       </option>
       <option class="xans-record-" value="LU">
        SHIPPING TO : 룩셈부르크(LUXEMBOURG)
       </option>
       <option class="xans-record-" value="RW">
        SHIPPING TO : 르완다(RWANDA)
       </option>
       <option class="xans-record-" value="LY">
        SHIPPING TO : 리비아(LIBYAN ARAB JAMAHIRIYA)
       </option>
       <option class="xans-record-" value="LI">
        SHIPPING TO : 리첸쉬테인(LIECHTENSTEIN)
       </option>
       <option class="xans-record-" value="LT">
        SHIPPING TO : 리투아니아(LITHUANIA)
       </option>
       <option class="xans-record-" value="MG">
        SHIPPING TO : 마다가스카르(MADAGASCAR)[area1][mkey1][area1][keywordx][area1][mkey1][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][mkey1][area1][keywordx][ahref][linkx][area1][keywordx][ahref][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][ahref]
       </option>
       <option class="xans-record-" value="MK">
        SHIPPING TO : 마케도니아(MACEDONIA)
       </option>
       <option class="xans-record-" value="MW">
        SHIPPING TO : 말라위(MALAWI)
       </option>
       <option class="xans-record-" value="MY">
        SHIPPING TO : 말레이지아(MALAYSIA)
       </option>
       <option class="xans-record-" value="ML">
        SHIPPING TO : 말리(MALI)
       </option>
       <option class="xans-record-" value="MX">
        SHIPPING TO : 멕시코(MEXICO)
       </option>
       <option class="xans-record-" value="MC">
        SHIPPING TO : 모나코(MONACO)
       </option>
       <option class="xans-record-" value="MA">
        SHIPPING TO : 모로코(MOROCCO)
       </option>
       <option class="xans-record-" value="MU">
        SHIPPING TO : 모리셔스(MAURITIUS)
       </option>
       <option class="xans-record-" value="MR">
        SHIPPING TO : 모리타니(MAURITANIA)
       </option>
       <option class="xans-record-" value="MZ">
        SHIPPING TO : 모잠비크(MOZAMBIQUE)
       </option>
       <option class="xans-record-" value="ME">
        SHIPPING TO : 몬테네그로(MONTENEGRO)
       </option>
       <option class="xans-record-" value="MD">
        SHIPPING TO : 몰도바(MOLDOVA, REPUBLIC OF)
       </option>
       <option class="xans-record-" value="MV">
        SHIPPING TO : 몰디브(MALDIVES)
       </option>
       <option class="xans-record-" value="MT">
        SHIPPING TO : 몰타(MALTA)
       </option>
       <option class="xans-record-" value="MN">
        SHIPPING TO : 몽고(MONGOLIA)
       </option>
       <option class="xans-record-" value="US">
        SHIPPING TO : 미국(U.S.A)
       </option>
       <option class="xans-record-" value="GU">
        SHIPPING TO : 미국(괌)(GUAM)
       </option>
       <option class="xans-record-" value="MH">
        SHIPPING TO : 미국(마아샬제도)(MARSHALL ISLANDS)
       </option>
       <option class="xans-record-" value="VI">
        SHIPPING TO : 미국(버진제도)(VIRGIN ISLANDS U.S.)
       </option>
       <option class="xans-record-" value="WS">
        SHIPPING TO : 미국(사모아, 구 서사모아)(SAMOA)
       </option>
       <option class="xans-record-" value="AS">
        SHIPPING TO : 미국(사모아제도)(AMERICAN SAMOA)
       </option>
       <option class="xans-record-" value="MP">
        SHIPPING TO : 미국(사이판)(NORTHERN MARIANA ISLANDS)
       </option>
       <option class="xans-record-" value="PW">
        SHIPPING TO : 미국(팔라우섬)(PALAU)
       </option>
       <option class="xans-record-" value="PR">
        SHIPPING TO : 미국(푸에르토리코섬)(PUERTO RICO)
       </option>
       <option class="xans-record-" value="MM">
        SHIPPING TO : 미얀마(MYANMAR)
       </option>
       <option class="xans-record-" value="FM">
        SHIPPING TO : 미크로네시아(마이크로네시아)(MICRONESIA)
       </option>
       <option class="xans-record-" value="VU">
        SHIPPING TO : 바누아투(VANUATU)
       </option>
       <option class="xans-record-" value="BH">
        SHIPPING TO : 바레인(BAHRAIN)
       </option>
       <option class="xans-record-" value="BB">
        SHIPPING TO : 바베이도스(BARBADOS)
       </option>
       <option class="xans-record-" value="BS">
        SHIPPING TO : 바하마(BAHAMAS)
       </option>
       <option class="xans-record-" value="BD">
        SHIPPING TO : 방글라데시(BANGLADESH)
       </option>
       <option class="xans-record-" value="VE">
        SHIPPING TO : 베네수엘라(VENEZUELA)
       </option>
       <option class="xans-record-" value="BJ">
        SHIPPING TO : 베넹(BENIN)
       </option>
       <option class="xans-record-" value="VN">
        SHIPPING TO : 베트남(VIET NAM)[linkx][ahref]<li>[area1][mkey1]</li>[linkx]<li>[area1][mkey1]</li>
       </option>
       <option class="xans-record-" value="BE">
        SHIPPING TO : 벨기에(BELGIUM)
       </option>
       <option class="xans-record-" value="BY">
        SHIPPING TO : 벨라루스(BELARUS)
       </option>
       <option class="xans-record-" value="BZ">
        SHIPPING TO : 벨리세(BELIZE)
       </option>
       <option class="xans-record-" value="BA">
        SHIPPING TO : 보스니아헤르체코비나(Bosnia and Herzegovina)
       </option>
       <option class="xans-record-" value="BW">
        SHIPPING TO : 보츠와나(BOTSWANA)
       </option>
       <option class="xans-record-" value="BO">
        SHIPPING TO : 볼리비아(BOLIVIA)
       </option>
       <option class="xans-record-" value="BF">
        SHIPPING TO : 부르키나파소(BURKINA FASO)
       </option>
       <option class="xans-record-" value="BT">
        SHIPPING TO : 부탄(BHUTAN)
       </option>
       <option class="xans-record-" value="BG">
        SHIPPING TO : 불가리아(BULGARIA(REP))
       </option>
       <option class="xans-record-" value="BR">
        SHIPPING TO : 브라질(BRAZIL)
       </option>
       <option class="xans-record-" value="BN">
        SHIPPING TO : 브루네이(나이)(BRUNEI DARUSSALAM)
       </option>
       <option class="xans-record-" value="BI">
        SHIPPING TO : 브룬디(BURUNDI)
       </option>
       <option class="xans-record-" value="SA">
        SHIPPING TO : 사우디아라비아(SAUDI ARABIA)
       </option>
       <option class="xans-record-" value="CY">
        SHIPPING TO : 사이프러스(CYPRUS)
       </option>
       <option class="xans-record-" value="SM">
        SHIPPING TO : 산마리노(SAN MARINO)
       </option>
       <option class="xans-record-" value="SN">
        SHIPPING TO : 세네갈(SENEGAL)
       </option>
       <option class="xans-record-" value="RS">
        SHIPPING TO : 세르비아/코소보(SERBIA/KOSOVO)
       </option>
       <option class="xans-record-" value="SC">
        SHIPPING TO : 세이셸(SEYCHELLES)
       </option>
       <option class="xans-record-" value="LC">
        SHIPPING TO : 세인트 루시아(SAINT LUCIA)
       </option>
       <option class="xans-record-" value="VC">
        SHIPPING TO : 세인트빈센트그레나딘(SAINT VINCENT AND THE GRENADINES)
       </option>
       <option class="xans-record-" value="KN">
        SHIPPING TO : 세인트키츠네비스(SAINT KITTS AND NEVIS)
       </option>
       <option class="xans-record-" value="SB">
        SHIPPING TO : 솔로몬아일란드(SOLOMON ISLANDS)
       </option>
       <option class="xans-record-" value="SR">
        SHIPPING TO : 수리남(SURINAME)
       </option>
       <option class="xans-record-" value="LK">
        SHIPPING TO : 스리랑카(SRI LANKA)
       </option>
       <option class="xans-record-" value="SZ">
        SHIPPING TO : 스와질랜드(SWAZILAND)
       </option>
       <option class="xans-record-" value="SE">
        SHIPPING TO : 스웨덴(SWEDEN)
       </option>
       <option class="xans-record-" value="CH">
        SHIPPING TO : 스위스(SWITZERLAND)
       </option>
       <option class="xans-record-" value="ES">
        SHIPPING TO : 스페인(에스파니아)(SPAIN)
       </option>
       <option class="xans-record-" value="SK">
        SHIPPING TO : 슬로바키아(SLOVAKIA)
       </option>
       <option class="xans-record-" value="SI">
        SHIPPING TO : 슬로베니아(SLOVENIA)
       </option>
       <option class="xans-record-" value="SL">
        SHIPPING TO : 시에라리온(SIERRA LEONE)
       </option>
       <option class="xans-record-" value="SG">
        SHIPPING TO : 싱가포르(SINGAPORE)
       </option>
       <option class="xans-record-" value="AE">
        SHIPPING TO : 아랍에미레이트연합국(UNITED ARAB EMIRATES)
       </option>
       <option class="xans-record-" value="AM">
        SHIPPING TO : 아르메니아(ARMENIA)
       </option>
       <option class="xans-record-" value="AR">
        SHIPPING TO : 아르헨티나(ARGENTINA)[area1][mkey1][area1][keywordx][ahref][pkeyx][area1][keywordx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref][area1][keywordx][area1][mkey1][ahref][area1][keywordx][ahref]
       </option>
       <option class="xans-record-" value="IS">
        SHIPPING TO : 아이슬란드(ICELAND)<li>[pkeyx]</li>[linkx][linkx]<li>[linkx]</li>[area1][mkey1]
       </option>
       <option class="xans-record-" value="HT">
        SHIPPING TO : 아이티(HAITI)
       </option>
       <option class="xans-record-" value="IE">
        SHIPPING TO : 아일란드(에이레)(IRELAND)
       </option>
       <option class="xans-record-" value="AZ">
        SHIPPING TO : 아제르바이잔(AZERBAIJAN)
       </option>
       <option class="xans-record-" value="AF">
        SHIPPING TO : 아프가니스탄(AFGHANISTAN)
       </option>
       <option class="xans-record-" value="AD">
        SHIPPING TO : 안도라(ANDORRA)
       </option>
       <option class="xans-record-" value="AL">
        SHIPPING TO : 알바니아(ALBANIA)
       </option>
       <option class="xans-record-" value="DZ">
        SHIPPING TO : 알제리(ALGERIA)
       </option>
       <option class="xans-record-" value="AO">
        SHIPPING TO : 앙골라(ANGOLA)
       </option>
       <option class="xans-record-" value="AG">
        SHIPPING TO : 앤티과바부다(ANTIGUA AND BARBUDA)
       </option>
       <option class="xans-record-" value="ER">
        SHIPPING TO : 에리트리아(ERITREA)
       </option>
       <option class="xans-record-" value="EE">
        SHIPPING TO : 에스토니아(ESTONIA)
       </option>
       <option class="xans-record-" value="EC">
        SHIPPING TO : 에콰도르(ECUADOR)
       </option>
       <option class="xans-record-" value="SV">
        SHIPPING TO : 엘살바도르(EL SALVADOR)
       </option>
       <option class="xans-record-" value="GB">
        SHIPPING TO : 영국(UNITED KINGDOM)
       </option>
       <option class="xans-record-" value="MS">
        SHIPPING TO : 영국(몽세라)(MONTSERRAT)
       </option>
       <option class="xans-record-" value="BM">
        SHIPPING TO : 영국(버뮤다섬)(BERMUDA)
       </option>
       <option class="xans-record-" value="VG">
        SHIPPING TO : 영국(버진제도)(VIRGIN ISLANDS BRITISH)
       </option>
       <option class="xans-record-" value="AI">
        SHIPPING TO : 영국(안귈라섬)(ANGUILLA)<li>[ahref]</li><li>[area1][keywordx]</li>[area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]
       </option>
       <option class="xans-record-" value="GI">
        SHIPPING TO : 영국(지브롤터)(GIBRALTAR)
       </option>
       <option class="xans-record-" value="KY">
        SHIPPING TO : 영국(케이만제도)(CAYMAN ISLANDS)
       </option>
       <option class="xans-record-" value="TC">
        SHIPPING TO : 영국(터크스케이코스제도)(TURKS AND CAICOS ISLANDS)
       </option>
       <option class="xans-record-" value="YE">
        SHIPPING TO : 예멘(YEMEN)
       </option>
       <option class="xans-record-" value="OM">
        SHIPPING TO : 오만(OMAN)
       </option>
       <option class="xans-record-" value="NF">
        SHIPPING TO : 오스트레일리아(노퍽섬)(NORFOLK ISLAND)
       </option>
       <option class="xans-record-" value="AU">
        SHIPPING TO : 오스트레일리아(호주)(AUSTRALIA)
       </option>
       <option class="xans-record-" value="AT">
        SHIPPING TO : 오스트리아(AUSTRIA)
       </option>
       <option class="xans-record-" value="HN">
        SHIPPING TO : 온두라스(HONDURAS)
       </option>
       <option class="xans-record-" value="JO">
        SHIPPING TO : 요르단(JORDAN)
       </option>
       <option class="xans-record-" value="UG">
        SHIPPING TO : 우간다(UGANDA)
       </option>
       <option class="xans-record-" value="UY">
        SHIPPING TO : 우루과이(URUGUAY)
       </option>
       <option class="xans-record-" value="UZ">
        SHIPPING TO : 우즈베크(UZBEKISTAN)
       </option>
       <option class="xans-record-" value="UA">
        SHIPPING TO : 우크라이나(UKRAINE)
       </option>
       <option class="xans-record-" value="ET">
        SHIPPING TO : 이디오피아(ETHIOPIA)
       </option>
       <option class="xans-record-" value="IQ">
        SHIPPING TO : 이라크(IRAQ)
       </option>
       <option class="xans-record-" value="IR">
        SHIPPING TO : 이란(IRAN(ISLAMIC REP))
       </option>
       <option class="xans-record-" value="IL">
        SHIPPING TO : 이스라엘(ISRAEL)
       </option>
       <option class="xans-record-" value="EG">
        SHIPPING TO : 이집트(EGYPT)
       </option>
       <option class="xans-record-" value="IT">
        SHIPPING TO : 이탈리아(이태리)(ITALY)
       </option>
       <option class="xans-record-" value="IN">
        SHIPPING TO : 인도(INDIA)
       </option>
       <option class="xans-record-" value="ID">
        SHIPPING TO : 인도네시아(INDONESIA)
       </option>
       <option class="xans-record-" value="JP">
        SHIPPING TO : 일본(JAPAN)
       </option>
       <option class="xans-record-" value="JM">
        SHIPPING TO : 자메이카(JAMAICA)
       </option>
       <option class="xans-record-" value="ZM">
        SHIPPING TO : 잠비아(ZAMBIA)
       </option>
       <option class="xans-record-" selected="selected" value="CN">
        SHIPPING TO : 중국(CHINA(PEOPLE'S REP))
       </option>
       <option class="xans-record-" value="MO">
        SHIPPING TO : 중국(마카오)(MACAO)
       </option>
       <option class="xans-record-" value="HK">
        SHIPPING TO : 중국(홍콩)(HONG KONG)
       </option>
       <option class="xans-record-" value="CF">
        SHIPPING TO : 중앙 아프리카(CENTRAL AFRICAN REPUBLIC)
       </option>
       <option class="xans-record-" value="DJ">
        SHIPPING TO : 지부티(DJIBOUTI)
       </option>
       <option class="xans-record-" value="ZW">
        SHIPPING TO : 짐바브웨(ZIMBABWE)
       </option>
       <option class="xans-record-" value="TD">
        SHIPPING TO : 차드(CHAD)
       </option>
       <option class="xans-record-" value="CZ">
        SHIPPING TO : 체코(CZECH REP)
       </option>
       <option class="xans-record-" value="CL">
        SHIPPING TO : 칠레(CHILE)
       </option>
       <option class="xans-record-" value="CM">
        SHIPPING TO : 카메룬(CAMEROON)
       </option>
       <option class="xans-record-" value="CV">
        SHIPPING TO : 카보베르데(CAPE VERDE)
       </option>
       <option class="xans-record-" value="KZ">
        SHIPPING TO : 카자흐(KAZAKHSTAN)
       </option>
       <option class="xans-record-" value="QA">
        SHIPPING TO : 카타르(QATAR)
       </option>
       <option class="xans-record-" value="KH">
        SHIPPING TO : 캄보디아(CAMBODIA)
       </option>
       <option class="xans-record-" value="CA">
        SHIPPING TO : 캐나다(CANADA)
       </option>
       <option class="xans-record-" value="KE">
        SHIPPING TO : 케냐(KENYA)
       </option>
       <option class="xans-record-" value="CR">
        SHIPPING TO : 코스타리카(COSTA RICA)
       </option>
       <option class="xans-record-" value="CI">
        SHIPPING TO : 코트디봐르(COTE D IVOIRE)
       </option>
       <option class="xans-record-" value="CO">
        SHIPPING TO : 콜롬비아(COLOMBIA)
       </option>
       <option class="xans-record-" value="CG">
        SHIPPING TO : 콩고(CONGO)
       </option>
       <option class="xans-record-" value="CU">
        SHIPPING TO : 쿠바(CUBA)
       </option>
       <option class="xans-record-" value="KW">
        SHIPPING TO : 쿠웨이트(KUWAIT)
       </option>
       <option class="xans-record-" value="HR">
        SHIPPING TO : 크로아티아(CROATIA)
       </option>
       <option class="xans-record-" value="KG">
        SHIPPING TO : 키르키즈스탄(KYRGYZSTAN)
       </option>
       <option class="xans-record-" value="KI">
        SHIPPING TO : 키리바티(KIRIBATI)
       </option>
       <option class="xans-record-" value="TH">
        SHIPPING TO : 타이(태국)(THAILAND)
       </option>
       <option class="xans-record-" value="TW">
        SHIPPING TO : 타이완(대만)(TAIWAN)
       </option>
       <option class="xans-record-" value="TJ">
        SHIPPING TO : 타지키스탄(TAJIKISTAN)
       </option>
       <option class="xans-record-" value="TZ">
        SHIPPING TO : 탄자니아(TANZANIA(UNITED REP))
       </option>
       <option class="xans-record-" value="TR">
        SHIPPING TO : 터키(TURKEY)
       </option>
       <option class="xans-record-" value="TG">
        SHIPPING TO : 토고(TOGO)
       </option>
       <option class="xans-record-" value="TO">
        SHIPPING TO : 통가(TONGA)
       </option>
       <option class="xans-record-" value="TM">
        SHIPPING TO : 투르크메니스탄(TURKMENISTAN)
       </option>
       <option class="xans-record-" value="TV">
        SHIPPING TO : 투발루(TUVALU)
       </option>
       <option class="xans-record-" value="TN">
        SHIPPING TO : 튀니지(TUNISIA)
       </option>
       <option class="xans-record-" value="TT">
        SHIPPING TO : 트리니다드토바고(TRINIDAD AND TOBAGO)
       </option>
       <option class="xans-record-" value="PA">
        SHIPPING TO : 파나마(PANAMA(REP))
       </option>
       <option class="xans-record-" value="PY">
        SHIPPING TO : 파라과이(PARAGUAY)
       </option>
       <option class="xans-record-" value="PK">
        SHIPPING TO : 파키스탄(PAKISTAN)
       </option>
       <option class="xans-record-" value="PG">
        SHIPPING TO : 파푸아뉴기니(PAPUA NEW GUINEA)
       </option>
       <option class="xans-record-" value="PE">
        SHIPPING TO : 페루(PERU)
       </option>
       <option class="xans-record-" value="PT">
        SHIPPING TO : 포르투갈(PORTUGAL)
       </option>
       <option class="xans-record-" value="PL">
        SHIPPING TO : 폴란드(POLAND(REP))
       </option>
       <option class="xans-record-" value="FR">
        SHIPPING TO : 프랑스(FRANCE)
       </option>
       <option class="xans-record-" value="GP">
        SHIPPING TO : 프랑스(과데루프섬)(GUADELOUPE)
       </option>
       <option class="xans-record-" value="GF">
        SHIPPING TO : 프랑스(기아나)(FRENCH GUIANA)
       </option>
       <option class="xans-record-" value="NC">
        SHIPPING TO : 프랑스(뉴칼레도니아섬)(NEW CALEDONIA)
       </option>
       <option class="xans-record-" value="RE">
        SHIPPING TO : 프랑스(레위니옹섬)(REUNION)
       </option>
       <option class="xans-record-" value="MQ">
        SHIPPING TO : 프랑스(마르티니크섬)(MARTINIQUE)
       </option>
       <option class="xans-record-" value="PF">
        SHIPPING TO : 프랑스(폴리네시아)(FRENCH POLYNESIA)
       </option>
       <option class="xans-record-" value="FJ">
        SHIPPING TO : 피지(FIJI)
       </option>
       <option class="xans-record-" value="FI">
        SHIPPING TO : 필란드(FINLAND)
       </option>
       <option class="xans-record-" value="PH">
        SHIPPING TO : 필리핀(PHILIPPINES)
       </option>
       <option class="xans-record-" value="HU">
        SHIPPING TO : 헝가리(HUNGARY(REP))
       </option>
      </select>
     </div>
     <div class="select">
      <select class="xans-element- xans-layout xans-layout-multishopshippinglanguagelist">
       <option class="xans-record-" selected="selected" value="hanbandokr.com">
        LANGUAGE : 한국어
       </option>
       <option class="xans-record-" value="en.hanbandokr.com">
        LANGUAGE : English
       </option>
       <option class="xans-record-" value="cn.hanbandokr.com">
        LANGUAGE : 中文
       </option>
       <option class="xans-record-" value="jp.hanbandokr.com">
        LANGUAGE : 日本語
       </option>
      </select>
     </div>
    </div>
    <div class="ec-base-button">
     <span class="btn_gray">
      <a href="e">
       GO
      </a>
     </span>
    </div>
    [ahref]
    
   </div>
  </div>
  <div id="multi_option" style="display:none;">
  </div>
  <form id="frm_image_zoom" style="display:none;">
  </form>
  <div id="fap_common_top_script" style="display:none;">
   <noscript>
   </noscript>
  </div>
  <div id="fap_product_detail_script" style="display:none;">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0037
  </b>
 </body>
</html>
|<---