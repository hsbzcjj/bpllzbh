--->|<!DOCTYPE HTML>
<html lang="ko">
 <head itemscope="">
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi" name="viewport">
  </meta>
 </head>
 <body class="renewal2015 view2016">
  <div class="sub-wrap gnb-news-00" id="wrap">
   <span class="skip-link">
    [ahref]
    
    [linkx]
    
    [ahref]
    
   </span>
   <div class="header hdr2015" id="header">
    <div class="link-wrap">
     [ahref][linkx][pkeyx][ahref][linkx][area1][keywordx][linkx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][mkey1][area1][keywordx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx]
    </div>
    <div class="navi-wrap">
     <div class="nav-zone" id="nav">
      <span class="hidden-obj">
       메뉴
      </span>
      <p class="home">
       [ahref]
       
      </p>
      <p class="d-news">
       [linkx]
       
      </p>
      <p class="hng-news">
       <a href="r" rel="nofollow">
        <span>
         #흥<li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx]
        </span>
       </a>
      </p>
      <ul class="nav">
       <li class="m01" name="m01">
        <span class="nochild">
         [linkx]
         
        </span>
       </li>
       <li class="m02 gnb-wrap" name="m02">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/all">
            전체기사
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_politics_dep02" data-stat-section="" href="/politics/national-assembly">
            국회/정당
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m03 gnb-wrap" name="m03">
        <a data-stat-code="navi_nk" data-stat-section="" href="/nk/index">
         <span>
          북한
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/person/index">
            인물
           </a>
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/conference/index">
            학술·연구
           </a>
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/video/index">
            영상
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m04 gnb-wrap" name="m04">
        <a data-stat-code="navi_economy" data-stat-section="" href="/economy/index">
         <span>
          산업/경제
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/all">
            전체기사
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/real-estate">
            부동산
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/auto">
            자동차
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/global-economy">
            해외경제
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m05 gnb-wrap" name="m05">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_stock_dep02" data-stat-section="" href="/stock/finance">
            금융
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m06 gnb-wrap" name="m06">
        <a data-stat-code="navi_it" data-stat-section="" href="/it/index">
         <span>
          IT/과학
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx][pkeyx][linkx][linkx][pkeyx][area1][mkey1][area1][mkey1][linkx][pkeyx][area1][mkey1][linkx]
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/science">
            과학
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m07 gnb-wrap" name="m07">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/education">
            교육[pkeyx]<li>[ahref]</li><li>[linkx]</li>
           </a>
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/welfare-labor">
            복지/노동
           </a>
          </li>
          <li>
           <a data-stat-code="navi_society_dep02" data-stat-section="" href="/society/environment">
            환경
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m08 gnb-wrap" name="m08">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/all">
            전체기사
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/busan/index">
            부산
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/ulsan/index">
            울산
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/daegu-gyeongbuk/index">
            대구/경북
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gwangju-jeonnam/index">
            광주/전남
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/daejeon-chungnam-sejong/index">
            대전/충남/세종
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/chungbuk/index">
            충북
           </a>
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/gangwon/index">
            강원
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m09 gnb-wrap" name="m09">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_entertainment_dep02" data-stat-section="" href="/entertainment/pop-song">
            가요
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m10 gnb-wrap" name="m10">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/religion">
            종교
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/performance-exhibition">
            공연/전시
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/media">
            미디어
           </a>
          </li>
          <li>
           <a data-stat-code="navi_culture_dep02" data-stat-section="" href="/culture/fashion">
            패션
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m11 gnb-wrap" name="m11">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
            [linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][ahref][area1][mkey1][linkx][area1][mkey1]
           
          </li>
          <li>
           <a data-stat-code="navi_sports_dep02" data-stat-section="" href="/sports/basketball-volleyball">
            농구/배구
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m12 gnb-wrap" name="m12">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/china">
            중국
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/japan">
            일본
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/europe">
            유럽
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/centralsouth-america">
            중남미
           </a>
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/middleeast-africa">
            중동/아프리카
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx][linkx][linkx][area1][mkey1][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m13" name="m13">
        <span class="nochild">
         [linkx]
         
        </span>
       </li>
       <li class="m14 gnb-wrap" name="m14">
        <a data-stat-code="navi_people" data-stat-section="" href="/people/index">
         <span>
          사람들
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="m15 gnb-wrap" name="m15">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_travel_festival_dep02" data-stat-section="" href="/travel-festival/festival">
            축제
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m16" name="m16">
        <span class="nochild">
         <a data-stat-code="navi_opinion" data-stat-sectio="" href="/opinion/index">
          오피니언
         </a>
        </span>
       </li>
       <li class="m17 visual" name="m17">
        <a data-stat-code="navi_visual" data-stat-section="" href="/visual/index">
         <span>
          비주얼뉴스
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/photo/index">
            포토
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/digital/index">
            #D
           </a>
          </li>
          <li>
           [ahref]
            [linkx]<li>[pkeyx]</li>[ahref]
           
          </li>
          <li class="video">
           [ahref]
           
           <span>
            [linkx]
            
            <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/video/vr-scene">
             VR현장
            </a>
           </span>
          </li>
          <li class="vrroom">
           <a data-stat-code="navi_visual_dep02" data-stat-section="" href="/" rel="nofollow">
            VR뉴스룸
           </a>
          </li>
         </ul>
         <ul class="visual-list">
          <li>
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="fixed-bnr02">
    <span class="blind">
     배너
    </span>
    <div>
     <div class="ads-fixed01">
     </div>
    </div>
   </div>
   <div class="fixed-bnr03">
    <[keywordx]>
    </[keywordx]>
    <div>
    </div>
   </div>
   <div id="content">
    <div class="header-content contents-box">
     <div class="newsflash-wrap">
      <div class="emergency" id="emergency">
       [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][linkx][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][pkeyx][ahref]
      </div>
      <div class="newsflash" id="newsFlash">
       <p class="blind">
        [실시간뉴스]
       </p>
       <div class="update">
        <strong>
         최종업데이트
        </strong>
        <span>
         YYYY-mm-dd hh:mm:ss
        </span>
       </div>
       <ul>
        <li>
        </li>
       </ul>
       <span class="newsflash-btn1">
       </span>
       <span class="newsflash-btn2">
       </span>
      </div>
     </div>
     <form action="e" class="search-wrap" data-stat-code="search" data-stat-section="">
      <fieldset>
       <span class="blind">
        검색
       </span>
       <label class="blind" for="search">
        검색어 입력
       </label>
       <span class="srchbar">
       </span>
      </fieldset>
     </form>
    </div>
    <div class="today-news-wrap" id="todayJuyo">
     <div class="today-news">
      <span class="today-sl-btn">
       <button class="today-prev">
        이전 슬라이드
       </button>
       <button class="today-next">
        다음 슬라이드
       </button>
      </span>
      <ul class="list">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
         <li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-stat-code="box_headlines" data-stat-section="" href="/view/AKR20190813075300001?section=politics/national-assembly">
         <div class="img-con">
         </div>
         <div class="news-con">
          <p class="tit-news">
           '두 쪽' 평화당, 첫날부터 기싸움 팽팽…중립파 3인 거취 '촉각'<li>[area1][keywordx]</li>[pkeyx][area1][keywordx][pkeyx]
          </p>
         </div>
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="in">
     </div>
    </div>
    <div class="contents">
     <div class="contents01 scroll-article-zone01">
      <div class="scroll-start01">
       <div class="scroll-in01">
        <div class="contents-box view-wrap">
         [area1][mkey1]<li>[area1][keywordx]</li><li>[area1][keywordx]</li>
        </div>
        <div class="contents-box view-wrap03">
         <iframe frameborder="0" height="168" name="ifm-ad-joyninfo02" scrolling="no" src="//m.joyninfo.com/yna/yna_w2.asp" title="조인&amp;amp인포 썸네일형 광고" width="586">
         </iframe>
         <div id="_popIn_recommend">
         </div>
        </div>
        <div class="contents-box view-wrap02">
         <div class="list-style05">
          <h6 class="tit-category" data-stat-code="box_view_visual_tit" data-stat-section="">
           비주얼뉴스
          </h6>
          <ul class="photomovie2">
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [linkx]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [linkx]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             <a data-stat-code="box_view_photomovie" data-stat-section="" href="/view/MYH20190722009700797?section=video/international">
              <span class="img-con img-cover">
              </span>
              <span class="tit-con">
               <strong class="tit">
                [이슈 컷] "자녀를 데리고 출근해도 좋습니다"…'워킹맘' 챙긴 회사 대표
               </strong>
              </span>
             </a>
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [ahref]
             
            </div>
           </li>
          </ul>
         </div>
         <div class="floating-banner02">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="contents02 scroll-article-zone02">
      <div class="scroll-start02">
       <div class="scroll-in02">
        <div class="contents-box aside-top-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-topright01">
          </li>
         </ul>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe allowtransparency="yes" border="0" frameborder="no" height="26" id="popin_iframe_ad" marginheight="0" marginwidth="0" scrolling="no" src="https://api.popin.cc/iframe/code.html?id=yna_right_text&amp;w=290px&amp;h=26px&amp;containerId=_popIn_recommend_text_iframe&amp;media=www.yna.co.kr_text" width="290">
         </iframe>
         <iframe allowtransparency="true" frameborder="0" height="235" marginheight="0" marginwidth="0" name="ifm-ad-imad-text01" scrolling="no" src="//adv.imadrep.co.kr/2161_01.html" title="아이엠애드 광고(텍스트8)" width="290">
         </iframe>
        </div>
        <iframe class="ifm-hot-news" frameborder="0" height="370" name="ifm-hot-news" scrolling="no" src="//www.yna.co.kr/program/hot-news" title="핫뉴스 프레임" width="340">
        </iframe>
        <iframe class="ifm-ad-bithumb" frameborder="0" height="253" name="ifm-ad-bithumb" scrolling="no" src="/program/bithumb" title="빗썸배너광고" width="340">
        </iframe>
        <div class="contents-box aside-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-right01">
          </li>
          <li class="ads-right02">
          </li>
          <li class="ads-right03">
          </li>
          <li class="ads-right04">
          </li>
          <li class="ads-right05">
          </li>
          <li class="ads-right06">
          </li>
          <li class="ads-right07">
          </li>
          <li class="ads-right08">
          </li>
          <li class="ads-right09">
          </li>
         </ul>
        </div>
        <div class="contents-box list-style01 popularnews-zone">
         <h5 class="tit-type01" data-stat-code="box_popularnews_tit" data-stat-section="">
          [ahref]
          
         </h5>
         <h5 class="tit-type03" data-stat-code="box_popularnews_tit" data-stat-section="">
          [linkx]
          
         </h5>
         <div class="tab-wrap01 tab-setting" data-stat-code="box_popularnews_tab" data-stat-section="">
          <ul>
           <li>
            <a href="l">
             종합
            </a>
           </li>
           <li>
            <a href="s">
             정치
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="d">
             세계
            </a>
           </li>
          </ul>
         </div>
         <div class="list-wrap" id="popularTotal">
          <h6 class="hidden-obj">
           종합
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularPolitics">
          <h6 class="hidden-obj">
           정치
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEconomy">
          <h6 class="hidden-obj">
           산업/경제
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSociety">
          <h6 class="hidden-obj">
           사회
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularLocal">
          <h6 class="hidden-obj">
           전국
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSports">
          <h6 class="hidden-obj">
           스포츠
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEntertainment">
          <h6 class="hidden-obj">
           연예ㆍ문화
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularWorld">
          <h6 class="hidden-obj">
           세계
          </h6>
          <ul>
          </ul>
         </div>
         [linkx]
         
        </div>
        <div class="contents-box ad-wrap02">
         <iframe allowtransparency="true" frameborder="0" height="96" name="ifm-ad-imad-text02" scrolling="no" src="//adv.imadrep.co.kr/2162_01.html" title="아이엠애드 광고(텍스트4)" width="290">
         </iframe>
        </div>
        <div class="contents-box ad-wrap01">
        </div>
        <iframe class="iframe-todaynews" frameborder="0" name="ifm-todaynews" scrolling="no" src="//www.yna.co.kr/program/major-news" title="오늘의 주요 뉴스">
        </iframe>
        <div class="contents-box list-style01 yspecial-wrap">
         <div class="iframe-yspecial" name="ifm-yspecial">
          <div class="y-special-zone">
           <h5 class="tit-category">
           </h5>
           <h5 class="tit-type01" data-stat-code="y_special_tit" data-stat-section="">
            [linkx]
            
           </h5>
           <div class="bnr-y-special">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe border="0" frameborder="0" height="156" leftmargin="0" name="ifm-ad-sw-text02" scrolling="no" src="//ad.sunnyworks.co.kr/data/SW125152.html" title="써니웍스 광고(텍스트 6줄)" topmargin="0" width="290">
         </iframe>
        </div>
        <div class="contents-box goolge-banner">
         <span class="blind">
          광고
         </span>
         <div id="ad_visual" title="인라이플 광고">
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe frameborder="0" height="192" name="ifm-ad-imad-text03" scrolling="no" src="//adv.imadrep.co.kr/2837_01.html" title="아이엠애드 광고(텍스트7)" width="100%">
         </iframe>
        </div>
        <div class="contents-box list-style02 journey-zone">
         <h5 class="tit-type03">
          <span class="arr">
           여행/축제
          </span>
         </h5>
         <ul class="area">
          <li>
           <div class="box-flex">
            [ahref]
            
           </div>
          </li>
          <li>
           <div class="box-flex">
            [ahref]
            
           </div>
          </li>
         </ul>
         [ahref]
         
        </div>
        <div class="contents-box list-style02 banner-box06">
         <span class="ad-tag">
         </span>
         <div class="con">
          <iframe allowtransparency="false" frameborder="0" height="224" marginheight="0" marginwidth="0" name="ifm-ad-imad-text04" scrolling="no" src="//adv.imadrep.co.kr/1247_01.html" title="아이엠애드 광고" width="290">
          </iframe>
         </div>
        </div>
        <div class="hng-zone" id="hngZone">
         <h5 class="tit02">
          [linkx]
          
         </h5>
         <ul class="list">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="box_hng" data-stat-section="" href="e" rel="nofollow" target="_blank" title="새창">
            <div class="img-con">
             <span class="over">
             </span>
            </div>
            <div class="news-con">
             <h4 class="tit">
             </h4>
            </div>
           </a>
          </li>
         </ul>
         <a class="more" data-stat-code="box_hng_btn_more" data-stat-section="" href="r" rel="nofollow" target="_blank" title="(새창) #흥 더보기">
          더보기
         </a>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <span class="btn-top" id="btnScrollTop">
    <button type="button">
     맨위로
    </button>
   </span>
   <div id="footer">
    <div class="footer-wrap01 service-wrap">
     <span class="blind">
      전체메뉴
     </span>
     <div class="footer-menu01">
      <div class="menu-zone01">
       <div class="link-con">
        <dl class="list01">
         <dt class="tit">
          [linkx]
          
         </dt>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <a href="/politics/index">
           정치
          </a>
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <h2>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <a href="/society/index">
           사회
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="/entertainment/index">
           연예
          </a>
         </dd>
         <dd>
          <a href="/culture/index">
           문화
          </a>
         </dd>
         <dd>
          <a href="/sports/index">
           스포츠
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          <a href="/travel-festival/index">
           여행/축제
          </a>
         </dd>
         <dd>
          [linkx]
          
         </dd>
        </dl>
       </div>
      </div>
      <div class="menu-zone02">
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/people/obituary-notice">
            부고
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/gallery/index">
            화보
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit space01">
           <a href="/issue/index">
            이슈돋보기
           </a>
          </dt>
          <dd class="br">
           <a href="/opinion/paper">
            주요신문
            <br/>
            톱뉴스/사설
           </a>
          </dd>
          <dd>
           [linkx]
            <li>[area1][keywordx]</li>[linkx][area1][keywordx]<li>[pkeyx]</li>
           
          </dd>
         </dl>
         <div class="list01">
          <p class="tit">
           <a href="/weather/index">
            날씨
           </a>
          </p>
         </div>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           테마별뉴스
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/theme/headlines">
            주요뉴스
           </a>
          </dd>
          <dd>
           <a href="/theme/hotnews">
            핫뉴스
           </a>
          </dd>
          <dd>
           <a href="/theme/mostviewed/index">
            많이 본 뉴스
           </a>
          </dd>
          <dd>
           <a href="/theme/breaknews">
            긴급뉴스
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [linkx]
           
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
         <dl class="list01">
          <dt class="hidden-obj">
           비주얼뉴스
          </dt>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           외국어
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="r">
            Español
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
       </div>
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           <a href="/product/premium">
            프리미엄뉴스
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/product/press-release">
            보도자료 해외배포
           </a>
          </dd>
          <dd>
           <a href="/press-release/index">
            보도자료 국내배포
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           출판물
          </dt>
          <dd>
           <a href="/imazine/index">
            이매진
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/publication/koreaannual">
            영문연감
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[area1][mkey1]</li>[area1][mkey1]
           
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            월간 마이더스
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [linkx]
           
          </dt>
          <dd>
           <a href="/advertisement/ktx">
            KTX열차
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/advertisement/pc">
            PC/홈페이지
           </a>
          </dd>
          <dd>
           <a href="/advertisement/publication">
            출판물
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <a href="/" target="_blank" title="새창">
            콘텐츠 판매
           </a>
          </dt>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            사진구매(헬로포토)
           </a>
          </dd>
          <dd>
           [ahref]
            <li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][keywordx]</li>
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           <a href="/YNA/ContentsSales/ContentsData/YISW_GraphicHome.aspx" rel="nofollow" target="_blank" title="새창">
            그래픽
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           관련사이트
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            채용
           </a>
          </dd>
          <dd>
           <a href="/irclub/index">
            IR 클럽
           </a>
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list02">
          <dt class="tit">
           유튜브
          </dt>
          <dd class="yna">
           [ahref]
           
          </dd>
          <dd class="tong">
           [ahref]
           
          </dd>
          <dd class="kn">
           <a href="/channel/UCR-L8oZkHzgDh1ahJhH2WDQ" rel="nofollow" target="_blank" title="새창">
            Korea Now
           </a>
          </dd>
          <dd class="yttv">
           [linkx]
           
          </dd>
         </dl>
        </div>
       </div>
      </div>
     </div>
     <div class="footer-menu02">
      [ahref]
      
     </div>
    </div>
    <ul class="footer-link" data-stat-code="footer" data-stat-section="">
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/user/list" rel="nofollow">
       수용자권익위원회
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/policy/complaint">
       고충처리
      </a>
     </li>
     <li>
      <a href="/policy/terms/index">
       이용약관
      </a>
     </li>
     <li>
      <a href="/policy/privacy/index">
       <strong>
        개인정보처리방침
       </strong>
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <div class="addr-info">
     <address>
      연합뉴스 서울시 종로구 율곡로2길 25 | 등록번호 문화, 나00009 | 등록일자 1980.12.29 | 발행일자 1980.12.29 | Tel. 02-398-3114
     </address>
    </div>
    <ul class="copy">
     <li>
      <strong>
       (C) Yonhapnews
      </strong>
     </li>
     <li class="copy-in">
      [대표이사] 조성부
     </li>
     <li class="copy-in">
      [편집인] 김경석
     </li>
    </ul>
   </div>
  </div>
  <div class="article-ad-box">
   <div id="div-gpt-ad-1564047529956-0" style="width: 300px; height: 250px;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0443
  </b>
 </body>
</html>|<---