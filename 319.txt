--->|﻿
<!DOCTYPE html>
<html lang="ko-KR">
 <head>
  <meta content="ee370378ff846af4d2b4f1c45b4d32dfa7074667" name="naver-site-verification"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="WordPress 4.9.4" name="generator">
   <meta content="EventON 2.6.5" name="generator"/>
   <noscript>
   </noscript>
  </meta>
 </head>
 <body class="post-template-default single single-post postid-339368 single-format-standard custom-background">
  <div class="container-fluid">
   <div class="col-sm-12 col-md-12 col-lg-12">
    <div aria-hidden="true" aria-labelledby="mySmallModalLabel" class="modal fade user_profile_area-modal-sm" role="dialog" tabindex="-1">
     <div class="modal-dialog modal-sm">
      <div class="modal-content">
       <div id="user_profile_area">
        로그인이 필요합니다.
        <a class="simplemodal-login" href="/wp-login.php">
         로그인
        </a>
        로 접속해주세요.
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="site-header">
   <div class="container sub-bg">
    <a class="logo_home" href="/" rel="home" title="mintpaper">
    </a>
    <div class="slide_bar">
     <a class="simplemodal-login" href="/wp-login.php">
     </a>
     [ahref]
     
     [linkx]
     
     <a class="facebook" href="/mintBook" target="_blank" title="Find us on Facebook">
     </a>
     [ahref]
     
     <a class="youtube" href="/user/MINTPAPERM?sub_confirmation=1" target="_blank" title="Find us on Youtube">
     </a>
     <div class="search_bar">
      <form action="/" class="navbar-form" id="searchform" method="get" role="search">
      </form>
     </div>
     <div class="link">
      [ahref]
      
      [linkx]
      
     </div>
    </div>
   </div>
  </div>
  <div class="pc-menu" id="navbar">
   <nav class="bg-img" role="navigation">
    <div class="container">
     <div class="menu-top-bar-container">
      <ul class="nav navbar-nav collapse navbar-collapse" id="menu-top-bar">
       [ahref]
       
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-224638 dropdown" id="menu-item-224638">
        [linkx]
        
        <ul class="dropdown-menu depth_0" role="menu">
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-10" id="menu-item-10">
          <a href="/category/n-e-w-s/" title="NEWS">
           NEWS
          </a>
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-11" id="menu-item-11">
          <a href="/calendar/" title="CALENDAR">
           CALENDAR
          </a>
         </li>
        </ul>
       </li>
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-224642 dropdown" id="menu-item-224642">
        [ahref]
        
        <ul class="dropdown-menu depth_0" role="menu">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-37" id="menu-item-37">
          <a href="/gmf2019/" title="Info">
           info
          </a>
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3696" id="menu-item-3696">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3678" id="menu-item-3678">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3677" id="menu-item-3677">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3676" id="menu-item-3676">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3675" id="menu-item-3675">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3679" id="menu-item-3679">
          <a href="/gmf2019-tralier" title="Trailer">
           trailer
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3685" id="menu-item-3685">
          [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][mkey1][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][pkeyx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
         </li>
        </ul>
       </li>
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-224642 dropdown" id="menu-item-224646">
        [ahref]
        
        <ul class="dropdown-menu depth_0" role="menu">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38" id="menu-item-38">
          <a href="/bml2019" title="Info">
           info
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3664" id="menu-item-3664">
          <a href="/category/bml_hotline/" title="Hotline">
           hotline
          </a>
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3665" id="menu-item-3665">
          <a href="/bml2019/lineup" title="Line up">
           lineup
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3663" id="menu-item-3663">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3662" id="menu-item-3662">
          <a href="/bml2019/place/" title="Place">
           place
          </a>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3661" id="menu-item-3661">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-3666" id="menu-item-3666">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3686" id="menu-item-3686">
          <a href="/bml2019/bml-history/" title="History">
           history
          </a>
         </li>
        </ul>
       </li>
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-224641 dropdown" id="menu-item-224641">
        [linkx]
        
        <ul class="dropdown-menu depth_0" role="menu">
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-20" id="menu-item-20">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-20" id="menu-item-20">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-21" id="menu-item-21">
          <a href="/category/live_review/" title="Review">
           REVIEW
          </a>
         </li>
        </ul>
       </li>
       [linkx]
       
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-224645 dropdown" id="menu-item-224645">
        [linkx]
        
        <ul class="dropdown-menu depth_0" role="menu">
         <li class="dropdown-submenu" id="menu-item-224647">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-18" id="menu-item-18">
          <a href="/category/archive/" title="Archive">
           ARCHIVE[ahref][pkeyx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][linkx]
          </a>
         </li>
        </ul>
       </li>
       [linkx]
       
      </ul>
     </div>
    </div>
   </nav>
  </div>
  <div class="mobile-menu">
   <div class="m_bg" role="navigation">
    <div class="mobile-contents">
     <table class="top_bar">
      <tbody>
       <tr>
        <td class="menu" id="openleft">
         <a href="#" id="menu-toggle">
         </a>
        </td>
        <td class="info_area">
         <div>
          [ahref]
          
         </div>
        </td>
       </tr>
      </tbody>
     </table>
    </div>
   </div>
  </div>
  <div class="mobile-slide-menu" id="menu-mobile">
   <ul>
    <li class="drawer_search">
     <form action="/" method="get">
     </form>
    </li>
    <li class="m_user">
     [linkx]
     
     <div class="m_slide_m">
      [linkx]
      
     </div>
    </li>
    <li class="m_catagory">
     <div class="m_slide_m">
      NEWS
     </div>
     <div class="sub_link">
      [ahref]
      
      <a class="m_link" href="/calendar/">
       calendar
      </a>
     </div>
    </li>
    <li class="m_catagory">
     <div class="m_slide_m">
      [linkx]
      
     </div>
     <div class="sub_link">
      <a class="m_link" href="/gmf2019/">
       info
      </a>
      [ahref]
      
      <a class="m_link" href="/gmf2019-lineup/">
       lineup
      </a>
      <a class="m_link" href="/gmf2019/timetable/">
       timetable
      </a>
      <a class="m_link" href="/gmf2019-place/">
       place
      </a>
      <a class="m_link" href="/gmf2019-ticket/">
       ticket
      </a>
      [linkx]
      
      <a class="m_link" href="/gmf2018/gmf-history/">
       history
      </a>
     </div>
     <li class="m_catagory">
      <div class="m_slide_m">
       <a class="m_link" href="/festival_bml/">
        BEAUTIFUL MINT LIFE
       </a>
      </div>
      <div class="sub_link">
       <a class="m_link" href="/bml2019">
        info
		[linkx]<li>[area1][keywordx]</li>[linkx][ahref]<li>[linkx]</li>
       </a>
       [linkx]
       
       <a class="m_link" href="/bml2019/lineup">
        lineup
       </a>
       [ahref]
       
       [ahref]
       
       [ahref]
       
       <a class="m_link" href="/category/bml2019-trailer/">
        trailer
       </a>
       <a class="m_link" href="/bml2019/bml-history/">
        history
       </a>
      </div>
     </li>
     <li class="m_catagory">
      <div class="m_slide_m">
       [linkx]
       
      </div>
      <div class="sub_link">
       [linkx]
       
       <a class="m_link" href="/category/live_paraid/">
        live paraid
       </a>
       <a class="m_link" href="/category/live_review/">
        review
       </a>
      </div>
     </li>
     <li class="m_catagory">
      <div class="m_slide_m">
       <h2>
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][linkx][ahref][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx][ahref][linkx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
       </h2>
       [ahref]
       
      </div>
     </li>
     <li class="m_catagory">
      [area1][mkey1][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][ahref][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]
     </li>
     <li class="m_catagory">
      <div class="m_slide_m">
       [ahref]
       
      </div>
     </li>
     <li class="m_catagory">
      <div class="m_slide_m">
       ----
      </div>
      [linkx]
      
     </li>
     <li class="m_catagory">
      <div class="m_slide_m">
       ----
      </div>
      [linkx]
      
      [linkx]
      
     </li>
    </li>
   </ul>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0351
  </b>
 </body>
</html>
<div class="container">
 <div id="content">
  <li>[ahref]</li>[ahref]<li>[area1][mkey1]</li><li>[area1][mkey1]</li>
 </div>
</div>
<div class="juiz_sps_links counters_both juiz_sps_displayed_bottom">
 <p class="screen-reader-text juiz_sps_maybe_hidden_text">
  Share the post "이하윤 – [나비]"
 </p>
 <ul class="juiz_sps_links_list juiz_sps_hide_name">
  <li class="juiz_sps_item juiz_sps_link_facebook">
   [ahref]
   
  </li>
  <li class="juiz_sps_item juiz_sps_link_twitter">
   [ahref]
   
  </li>
 </ul>
</div>
<ul class="wpuf_customs">
 <ul>
  <div class="clearfix">
  </div>
  <div class="post-meta-top">
   <div class="pull-right">
   </div>
   <div class="pull-left">
    <i class="fa fa-calendar">
    </i>
    2019/07/25
    <i class="fa fa-user">
    </i>
    [ahref]
    
   </div>
   <div class="category-tag">
    <i class="fa fa-caret-right">
    </i>
    [linkx]
    
    <i class="fa fa-tags">
    </i>
    [ahref]
    
   </div>
  </div>
  <div id="navigation hi">
   <ul class="pager">
    <li class="previous">
     [linkx]
     
    </li>
    <li class="next">
     <a href="/2019/07/sltn-signature/" rel="next">
      솔루션스 – [SIGNATURE]
      <i class="fa fa-chevron-right">
      </i>
     </a>
    </li>
   </ul>
  </div>
 </ul>
</ul>
<div class="post-comments">
 <div class="post-comments-wrapper">
 </div>
</div>
<div class="col-sm-3 col-md-3 col-lg-3" id="sidebar">
 <div class="sidebar-inner">
  <div class="sidebar" id="sidebar-right">
   <div class="widget widget_recent_entries" id="recent-posts-2">
    <h4 class="widget-title">
     최신 글
    </h4>
    <ul>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/2019/08/hoa-fantasy/">
       호아 – [FANTASY]
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
       <li>[linkx]</li>[area1][keywordx][ahref]<li>[linkx]</li>
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/2019/08/10cm-4-4/">
       10CM – [방에 모기가 있어 (4.4)]
      </a>
     </li>
    </ul>
   </div>
   <div class="widget EvcalWidget" id="evcalwidget-2">
    <div class="evo_widget" id="evcal_widget">
     <div class="ajde_evcal_calendar ul" id="evcal_calendar_114">
      <div class="evo-data" data-accord="0" data-cal_ver="2.6.5" data-cmonth="8" data-cyear="2019" data-ev_cnt="0" data-evc_open="0" data-filters_on="false" data-mapformat="roadmap" data-mapiconurl="" data-mapscroll="true" data-mapzoom="18" data-range_end="0" data-range_start="0" data-rtl="no" data-runajax="1" data-send_unix="0" data-show_limit="no" data-sort_by="sort_date" data-tiles="no" data-ux_val="0">
      </div>
      <div class="calendar_header evcal_nosort" id="evcal_head">
       <div class="evo_cal_above">
        <span class="evo-gototoday-btn" data-dy="" data-mo="8" data-yr="2019" style="display:none">
         이번 달
        </span>
       </div>
       <div class="evo_cal_above_content">
       </div>
       <div class="cal_arguments" data-etc_override="no" data-evc_open="no" data-event_order="ASC" data-ft_event_priority="no" data-hide_past="yes" data-lang="L2" data-members_only="no" data-month_incre="0" data-only_ft="no" data-s="" data-show_et_ft_img="no" data-show_limit="no" data-show_limit_ajax="no" data-show_limit_paged="1" data-show_limit_redir="0" data-tile_bg="0" data-tile_count="2" data-tile_height="0" data-tile_style="0" data-tiles="no" data-ux_val="0" style="display:none">
       </div>
       <div class="clear">
       </div>
      </div>
      <div class="evcal_month_line">
       <p>
        8월
       </p>
      </div>
      <div class="evcal_list_month eventon_events_list" id="evcal_list">
       <div 1="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338751" data-time="1566068400-1566085800" id="event_338751" itemscope="" itemtype="http://schema.org/Event">
        <div class="evo_event_schema" style="display:none">
         [ahref]
         
         <span itemprop="name">
          데이브레이크 ‘SUMMER MADNESS 2019 : ESCAPE’
         </span>
         <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/06/DB_SM2019_SQ_RE.jpg" itemprop="image"/>
         <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
         <meta content="2019-8-17" itemprop="startDate"/>
         <meta content="2019-8-17" itemprop="endDate"/>
         <meta content="on-schedule" itemprop="eventStatus"/>
        </div>
        <p class="desc_trig_outter">
         <a class="desc_trig featured_event 1 evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1566068400338751" style="border-color: #00a778;">
          <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="8월" data-syr="2019">
           <span class="evo_start">
            <em class="date">
             17
            </em>
            <em class="month">
             8월
            </em>
            <em class="time">
             19:00
            </em>
           </span>
           <em class="clear">
           </em>
          </span>
          <span class="evcal_desc evo_info hide_eventtopdata" data-location_status="false">
           <span class="evo_above_title">
            <span class="evo_event_headers featured">
             추천
            </span>
           </span>
           <span class="evcal_desc2 evcal_event_title" itemprop="name">
            데이브레이크 ‘SUMMER MADNESS 2019 : ESCAPE’
           </span>
           <span class="evo_below_title">
           </span>
           <span class="evcal_desc_info">
           </span>
           <span class="evcal_desc3">
            <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li><li>[pkeyx]</li>
           </span>
          </span>
          <em class="clear">
          </em>
         </a>
        </p>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 8월 17일(토), 18일(일) 오후 7시
장소: 서울 노들섬 잔디마당
티켓: 전석 99,000원
예매: 인터파크 ticket.interpark.com/1544-1555
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 17일(토), 18일(일) 오후 7시
      <br/>
      장소: 서울 노들섬 잔디마당
      <br/>
      티켓: 전석 99,000원
      <br/>
      예매: 인터파크
      [linkx]
      
      /1544-1555
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (토) 19:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="676">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p class="evo_location_name">
        노들섬 야외 공연장
       </p>
       <p class="evo_location_address">
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 2="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338917" data-time="1566147600-1566172200" id="event_338917" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [ahref]
  
  <span itemprop="name">
   Mint Festa vol. 64 ~ Aquila
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/07/MF64_SQ.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-8-18" itemprop="startDate"/>
  <meta content="2019-8-18" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    KT&amp;G 상상마당 라이브홀
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 마포구 어울마당로 65
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1566147600338917" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="8월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      18
     </em>
     <em class="month">
      8월
     </em>
     <em class="time">
      17:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5509155,126.9210433" data-location_address="서울시 마포구 어울마당로 65" data-location_name="KT&amp;G 상상마당 라이브홀" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     Mint Festa vol. 64 ~ Aquila
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
     <li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <p>
    일시: 2019년 8월 18일(일) 오후 5시
장소: KT&amp;G 상상마당 라이브홀
LIVE: dosii, O.O.O, 솔루션스, 위아더나잇
티켓: 예매 30,000원 / 현매 35,000원
예매: 인터파크 ticket.interpark.com 1544-1555
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 18일(일) 오후 5시
      <br/>
      장소: KT&amp;G 상상마당 라이브홀
      <br/>
      LIVE: dosii, O.O.O, 솔루션스, 위아더나잇
      <br/>
      티켓: 예매 30,000원 / 현매 35,000원
      <br/>
      예매: 인터파크
      [ahref]
      
      1544-1555
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (일) 17:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="534">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p class="evo_location_name">
        KT&amp;G 상상마당 라이브홀
       </p>
       <p class="evo_location_address">
        서울시 마포구 어울마당로 65
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 3="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338752" data-time="1566154800-1566172200" id="event_338752" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [ahref]
  
  <span itemprop="name">
   데이브레이크 ‘SUMMER MADNESS 2019 : ESCAPE’
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/06/DB_SM2019_SQ_RE.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-8-18" itemprop="startDate"/>
  <meta content="2019-8-18" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig featured_event 1 evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1566154800338752" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="8월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      18
     </em>
     <em class="month">
      8월
     </em>
     <em class="time">
      19:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-location_status="false">
    <span class="evo_above_title">
     <span class="evo_event_headers featured">
      추천
     </span>
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     데이브레이크 ‘SUMMER MADNESS 2019 : ESCAPE’
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 8월 17일(토), 18일(일) 오후 7시
장소: 서울 노들섬 잔디마당
티켓: 전석 99,000원
예매: 인터파크 ticket.interpark.com/1544-1555
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 17일(토), 18일(일) 오후 7시
      <br/>
      장소: 서울 노들섬 잔디마당
      <br/>
      티켓: 전석 99,000원
      <br/>
      예매: 인터파크
      [ahref]
      
      /1544-1555
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (일) 19:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="676">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        노들섬 야외 공연장
       </p>
       <p class="evo_location_address">
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 4="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338918" data-time="1566669600-1566690600" id="event_338918" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  <a href="/events/soran_cocktail/&amp;quest;l&amp;equals;L2&amp;" itemprop="url">
  </a>
  <span itemprop="name">
   소란 여름 콘서트 ‘Cocktail’
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/06/soran_cocktail_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-8-24" itemprop="startDate"/>
  <meta content="2019-8-24" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
 </div>
 <p class="desc_trig_outter">
  [ahref]
  
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 8월 24일(토) 오후 6시, 8월 25일(일) 오후 5시
장소: 서울 노들섬 라이브하우스 (서울특별시 용산구 양녕로 445 (이촌동))
티켓: 전석 77,000원 (1층 스탠딩, 2층 좌석)
예매: 인터파크 ticket.interpark.com/1544-1555
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 24일(토) 오후 6시, 8월 25일(일) 오후 5시
      <br/>
      장소: 서울 노들섬 라이브하우스 (서울특별시 용산구 양녕로 445 (이촌동))
      <br/>
      티켓: 전석 77,000원 (1층 스탠딩, 2층 좌석)
      <br/>
      예매: 인터파크
      <u>
       [linkx]
       
      </u>
      /1544-1555
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (토) 18:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="682">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        서울 노들섬 라이브하우스
       </p>
       <p class="evo_location_address">
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
     <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref][pkeyx]
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 5="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338919" data-time="1566752400-1566777000" id="event_338919" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [linkx]
  
  <span itemprop="name">
   소란 여름 콘서트 ‘Cocktail’
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/06/soran_cocktail_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-8-25" itemprop="startDate"/>
  <meta content="2019-8-25" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1566752400338919" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="8월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      25
     </em>
     <em class="month">
      8월
     </em>
     <em class="time">
      17:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-location_status="false">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     소란 여름 콘서트 ‘Cocktail’
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <li>[area1][keywordx]</li><li>[area1][mkey1]</li><li>[area1][keywordx]</li><li>[linkx]</li>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 8월 24일(토) 오후 6시, 8월 25일(일) 오후 5시
장소: 서울 노들섬 라이브하우스 (서울특별시 용산구 양녕로 445 (이촌동))
티켓: 전석 77,000원 (1층 스탠딩, 2층 좌석)
예매: 인터파크 ticket.interpark.com/1544-1555
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 24일(토) 오후 6시, 8월 25일(일) 오후 5시
      <br/>
      장소: 서울 노들섬 라이브하우스 (서울특별시 용산구 양녕로 445 (이촌동))
      <br/>
      티켓: 전석 77,000원 (1층 스탠딩, 2층 좌석)
      <br/>
      예매: 인터파크
      <u>
       [linkx]
       
      </u>
      /1544-1555
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (일) 17:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="682">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        서울 노들섬 라이브하우스
       </p>
       <p class="evo_location_address">
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 6="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339562" data-time="1567195200-1567209000" id="event_339562" itemscope="" itemtype="http://schema.org/Event">
 <li>[pkeyx]</li>[area1][keywordx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <p>
    일시: 2019년 8월 30일(금) 8PM, 8월 31일(토) 7PM, 9월 1일(일) 5PM
장소: SMTOWN 코엑스아티움
티켓: 예매 99,000원
예매: 멜론티켓 ticket.melon.com
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 30일(금) 8PM, 8월 31일(토) 7PM, 9월 1일(일) 5PM
      <br/>
      장소: SMTOWN 코엑스아티움
      <br/>
      티켓: 예매 99,000원
      <br/>
      예매: 멜론티켓
      [ahref]
      
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (금) 20:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="684">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p class="evo_location_name">
        SMTOWN 코엑스아티움
       </p>
       <p class="evo_location_address">
        513, Yeongdong-daero, Gangnam-gu, Seoul
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 7="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339566" data-time="1567278000-1567295400" id="event_339566" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [linkx]
  
  <span itemprop="name">
   자이로 단독 콘서트 'New Zeneration'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/ZAIRO_new-zeneration.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-8-31" itemprop="startDate"/>
  <meta content="2019-8-31" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    SMTOWN 코엑스아티움
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     513, Yeongdong-daero, Gangnam-gu, Seoul
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  [ahref]
  
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 8월 30일(금) 8PM, 8월 31일(토) 7PM, 9월 1일(일) 5PM
장소: SMTOWN 코엑스아티움 
티켓: 예매 99,000원
예매: 멜론티켓 ticket.melon.com
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 30일(금) 8PM, 8월 31일(토) 7PM, 9월 1일(일) 5PM
      <br/>
      장소: SMTOWN 코엑스아티움
      <br/>
      티켓: 예매 99,000원
      <br/>
      예매: 멜론티켓
      <a href="/performance/index.htm?prodId=204016" rel="noopener" target="_blank">
       ticket.melon.com
      </a>
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (토) 19:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="684">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        SMTOWN 코엑스아티움
       </p>
       <p class="evo_location_address">
        513, Yeongdong-daero, Gangnam-gu, Seoul
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 8="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338543" data-time="1567278000-1567295400" id="event_338543" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  <a href="/events/monni_dreampop/&amp;quest;l&amp;equals;L2&amp;" itemprop="url">
  </a>
  <span itemprop="name">
   몽니 '한 여름 밤의 Dream pop 2019'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/06/monni_dreampop.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-8-31" itemprop="startDate"/>
  <meta content="2019-8-31" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    마포아트센터 아트홀 맥
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울 마포구 대흥로20길 28
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1567278000338543" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="8월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      31
     </em>
     <em class="month">
      8월
     </em>
     <em class="time">
      19:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5497496,126.9455805" data-location_address=" 서울 마포구 대흥로20길 28" data-location_name="마포아트센터 아트홀 맥" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     몽니 '한 여름 밤의 Dream pop 2019'
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <p>
    일시: 2019년 8월 31일(토) 오후 7시
장소: 마포아트센터 아트홀맥
티켓: R석 88,000원 / S석 66,000원
예매: 멜론티켓 ticket.melon.com
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 31일(토) 오후 7시
      <br/>
      장소: 마포아트센터 아트홀맥
      <br/>
      티켓: R석 88,000원 / S석 66,000원
      <br/>
      예매: 멜론티켓
      [ahref]
      
      <br/>
      <br/>
     </p>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="clear">
</div>
<div class="evo_metarow_time_location evorow bordb lastrow">
 <div class="tb">
  <div class="tbrow">
   <div class="evcal_col50 bordr">
    <div class="evcal_evdata_row evo_time">
     <span class="evcal_evdata_icons">
      <i class="fa fa-clock-o">
      </i>
     </span>
     <div class="evcal_evdata_cell">
      <h3 class="evo_h3">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <p>
       (토) 19:00
      </p>
     </div>
    </div>
   </div>
   <div class="evcal_col50">
    <div class="evcal_evdata_row evo_location">
     <span class="evcal_evdata_icons">
      <i class="fa fa-map-marker">
      </i>
     </span>
     <div class="evcal_evdata_cell" data-loc_tax_id="541">
      <h3 class="evo_h3">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <p class="evo_location_name">
       마포아트센터 아트홀 맥
      </p>
      <p class="evo_location_address">
       서울 마포구 대흥로20길 28
      </p>
     </div>
    </div>
   </div>
   <div class="clear">
   </div>
  </div>
 </div>
 <div class="evcal_evdata_row evcal_close" title="Close">
 </div>
</div>
<div class="clear end">
</div>
<div class="evcal_month_line">
 <p>
  9월
 </p>
</div>
<div class="evcal_list_month eventon_events_list" id="evcal_list">
 <div 1="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339568" data-time="1567357200-1567381800" id="event_339568" itemscope="" itemtype="http://schema.org/Event">
  <div class="evo_event_schema" style="display:none">
   [linkx]
   
   <span itemprop="name">
    자이로 단독 콘서트 'New Zeneration'
   </span>
   <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/ZAIRO_new-zeneration.jpg" itemprop="image"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
   <meta content="2019-9-1" itemprop="startDate"/>
   <meta content="2019-9-1" itemprop="endDate"/>
   <meta content="on-schedule" itemprop="eventStatus"/>
   <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
    <span itemprop="name">
     SMTOWN 코엑스아티움
    </span>
    <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
     <item itemprop="streetAddress">
      513, Yeongdong-daero, Gangnam-gu, Seoul
     </item>
    </span>
   </item>
  </div>
  <p class="desc_trig_outter">
   <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1567357200339568" style="border-color: #00a778;">
    <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="9월" data-syr="2019">
     <span class="evo_start">
      <em class="date">
       01
      </em>
      <em class="month">
       9월
      </em>
      <em class="time">
       17:00
      </em>
     </span>
     <em class="clear">
     </em>
    </span>
    <span class="evcal_desc evo_info hide_eventtopdata" data-location_address="513, Yeongdong-daero, Gangnam-gu, Seoul" data-location_name="SMTOWN 코엑스아티움" data-location_status="true" data-location_type="address">
     <span class="evo_above_title">
     </span>
     <span class="evcal_desc2 evcal_event_title" itemprop="name">
      자이로 단독 콘서트 'New Zeneration'
     </span>
     <span class="evo_below_title">
     </span>
     <span class="evcal_desc_info">
     </span>
     <span class="evcal_desc3">
      <span class="evcal_event_types ett1">
       <em>
        <i>
         공연:
        </i>
       </em>
       <em data-filter="event_type">
        공연
       </em>
       <i class="clear">
       </i>
      </span>
     </span>
    </span>
    <em class="clear">
    </em>
   </a>
  </p>
 </div>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 8월 30일(금) 8PM, 8월 31일(토) 7PM, 9월 1일(일) 5PM
장소: SMTOWN 코엑스아티움 
티켓: 예매 99,000원
예매: 멜론티켓 ticket.melon.com
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 8월 30일(금) 8PM, 8월 31일(토) 7PM, 9월 1일(일) 5PM
      <br/>
      장소: SMTOWN 코엑스아티움
      <br/>
      티켓: 예매 99,000원
      <br/>
      예매: 멜론티켓
      <a href="/performance/index.htm?prodId=204016" rel="noopener" target="_blank">
       ticket.melon.com
      </a>
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (일) 17:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="684">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        SMTOWN 코엑스아티움
       </p>
       <p class="evo_location_address">
        513, Yeongdong-daero, Gangnam-gu, Seoul
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 2="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338868" data-time="1567814401-1567900799" id="event_338868" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  <a href="/events/have-a-nice-day-7%c2%bd/&amp;quest;l&amp;equals;L2&amp;" itemprop="url">
  </a>
  <span itemprop="name">
   Have A Nice Day #7½
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/07/HAND_7½_1st_lineupposter_SQ.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-7" itemprop="startDate"/>
  <meta content="2019-9-7" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
 </div>
 <p class="desc_trig_outter">
  [linkx]
  
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </h3>
   <p>
    일시: 2019년 9월 7일(토), 9월 8일(일)
장소: 서울 노들섬
티켓: 66,000원
예매: 인터파크 ticket.interpark.com

티켓 오픈: 7월 9일(목)
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 9월 7일(토), 9월 8일(일)
      <br/>
      장소: 서울 노들섬
      <br/>
      티켓: 66,000원
      <br/>
      예매: 인터파크
      <a href="m" rel="noopener" target="_blank">
       ticket.interpark.com
      </a>
     </p>
     <p>
      티켓 오픈: 7월 9일(목)
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        All Day (토)
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="680">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        서울 노들섬
       </p>
       <p class="evo_location_address">
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 3="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="338869" data-time="1567900801-1567987199" id="event_338869" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [ahref]
  
  <span itemprop="name">
   Have A Nice Day #7½
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/07/HAND_7½_1st_lineupposter_SQ.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-8" itemprop="startDate"/>
  <meta content="2019-9-8" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
 </div>
 <p class="desc_trig_outter">
  [ahref]
  
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시: 2019년 9월 7일(토), 9월 8일(일)
장소: 서울 노들섬
티켓: 66,000원
예매: 인터파크 ticket.interpark.com

티켓 오픈: 7월 9일(목)
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시: 2019년 9월 7일(토), 9월 8일(일)
      <br/>
      장소: 서울 노들섬
      <br/>
      티켓: 66,000원
      <br/>
      예매: 인터파크
      [ahref]
      
     </p>
     <p>
      티켓 오픈: 7월 9일(목)
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        All Day (일)
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="680">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        서울 노들섬
       </p>
       <p class="evo_location_address">
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 4="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339499" data-time="1569009600-1569023400" id="event_339499" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [linkx]
  
  <span itemprop="name">
   쏜애플 콘서트 '불구경'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/thanap_1909_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-20" itemprop="startDate"/>
  <meta content="2019-9-20" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    CKL스테이지
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 중구 청계천로 40 지하 1층
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1569009600339499" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="9월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      20
     </em>
     <em class="month">
      9월
     </em>
     <em class="time">
      20:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5687838,127.0006446" data-location_address="서울시 중구 청계천로 40 지하 1층" data-location_name="CKL스테이지" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     쏜애플 콘서트 '불구경'
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
예매 : 멜론
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
      <br/>
      장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
      <br/>
      티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
      <br/>
      예매 : 멜론 티켓
      [ahref]
      
      / 1899-0042
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (금) 20:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="595">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p class="evo_location_name">
        CKL스테이지
       </p>
       <p class="evo_location_address">
        서울시 중구 청계천로 40 지하 1층
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 5="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339500" data-time="1569088800-1569109800" id="event_339500" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  <a href="/events/thap_1909-2/&amp;quest;l&amp;equals;L2&amp;" itemprop="url">
  </a>
  <span itemprop="name">
   쏜애플 콘서트 '불구경'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/thanap_1909_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-21" itemprop="startDate"/>
  <meta content="2019-9-21" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    CKL스테이지
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 중구 청계천로 40 지하 1층
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  [linkx]
  
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
예매 : 멜론
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
      <br/>
      장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
      <br/>
      티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
      <br/>
      예매 : 멜론 티켓
      <a href="/" target="_blank">
       <u>
        ticket.melon.com
       </u>
      </a>
      / 1899-0042
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (토) 18:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="595">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p class="evo_location_name">
        CKL스테이지
       </p>
       <p class="evo_location_address">
        서울시 중구 청계천로 40 지하 1층
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 6="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339501" data-time="1569175200-1569196200" id="event_339501" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [ahref]
  
  <span itemprop="name">
   쏜애플 콘서트 '불구경'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/thanap_1909_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-22" itemprop="startDate"/>
  <meta content="2019-9-22" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    CKL스테이지
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 중구 청계천로 40 지하 1층
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1569175200339501" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="9월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      22[linkx]<li>[pkeyx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
     </em>
     <em class="month">
      9월
     </em>
     <em class="time">
      18:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5687838,127.0006446" data-location_address="서울시 중구 청계천로 40 지하 1층" data-location_name="CKL스테이지" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     쏜애플 콘서트 '불구경'
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
예매 : 멜론
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
      <br/>
      장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
      <br/>
      티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
      <br/>
      예매 : 멜론 티켓
      [ahref]
      
      / 1899-0042
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (일) 18:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
        <li>[linkx]</li>[pkeyx]<li>[area1][mkey1]</li><li>[ahref]</li>
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="595">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        CKL스테이지
       </p>
       <p class="evo_location_address">
        서울시 중구 청계천로 40 지하 1층
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 7="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339502" data-time="1569614400-1569628200" id="event_339502" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [ahref]
  
  <span itemprop="name">
   쏜애플 콘서트 '불구경'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/thanap_1909_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-27" itemprop="startDate"/>
  <meta content="2019-9-27" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    CKL스테이지
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 중구 청계천로 40 지하 1층
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1569614400339502" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="9월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      27
     </em>
     <em class="month">
      9월
     </em>
     <em class="time">
      20:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5687838,127.0006446" data-location_address="서울시 중구 청계천로 40 지하 1층" data-location_name="CKL스테이지" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     쏜애플 콘서트 '불구경'
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
예매 : 멜론
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
      <br/>
      장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
      <br/>
      티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
      <br/>
      예매 : 멜론 티켓
      [ahref]
      
      / 1899-0042
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p>
        (금) 20:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="595">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        CKL스테이지
       </p>
       <p class="evo_location_address">
        서울시 중구 청계천로 40 지하 1층
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 8="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339503" data-time="1569693600-1569714600" id="event_339503" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  <a href="/events/thap_1909-5/&amp;quest;l&amp;equals;L2&amp;" itemprop="url">
  </a>
  <span itemprop="name">
   쏜애플 콘서트 '불구경'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/thanap_1909_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-28" itemprop="startDate"/>
  <meta content="2019-9-28" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    CKL스테이지
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 중구 청계천로 40 지하 1층
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1569693600339503" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="9월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      28
     </em>
     <em class="month">
      9월
     </em>
     <em class="time">
      18:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5687838,127.0006446" data-location_address="서울시 중구 청계천로 40 지하 1층" data-location_name="CKL스테이지" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     쏜애플 콘서트 '불구경'
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
예매 : 멜론
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
      <br/>
      장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
      <br/>
      티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
      <br/>
      예매 : 멜론 티켓
      [ahref]
      
      / 1899-0042
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (토) 18:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="595">
       <h3 class="evo_h3">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <p class="evo_location_name">
        CKL스테이지
       </p>
       <p class="evo_location_address">
        서울시 중구 청계천로 40 지하 1층
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div 9="" class="eventon_list_event evo_eventtop event" data-colr="#00a778" data-event_id="339504" data-time="1569780000-1569801000" id="event_339504" itemscope="" itemtype="http://schema.org/Event">
 <div class="evo_event_schema" style="display:none">
  [ahref]
  
  <span itemprop="name">
   쏜애플 콘서트 '불구경'
  </span>
  <meta content="https://www.mintpaper.co.kr/wp-content/uploads/2019/08/thanap_1909_sq.jpg" itemprop="image"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
  <meta content="2019-9-29" itemprop="startDate"/>
  <meta content="2019-9-29" itemprop="endDate"/>
  <meta content="on-schedule" itemprop="eventStatus"/>
  <item itemprop="location" itemscope="" itemtype="http://schema.org/Place" style="display:none">
   <span itemprop="name">
    CKL스테이지
   </span>
   <span itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
    <item itemprop="streetAddress">
     서울시 중구 청계천로 40 지하 1층
    </item>
   </span>
  </item>
 </div>
 <p class="desc_trig_outter">
  <a class="desc_trig evo_live sin_val evcal_list_a" data-exlk="0" data-gmap_status="null" data-ux_val="1" id="evc_1569780000339504" style="border-color: #00a778;">
   <span class="evcal_cblock" data-bgcolor="#00a778" data-smon="9월" data-syr="2019">
    <span class="evo_start">
     <em class="date">
      29
     </em>
     <em class="month">
      9월
     </em>
     <em class="time">
      18:00
     </em>
    </span>
    <em class="clear">
    </em>
   </span>
   <span class="evcal_desc evo_info hide_eventtopdata" data-latlng="37.5687838,127.0006446" data-location_address="서울시 중구 청계천로 40 지하 1층" data-location_name="CKL스테이지" data-location_status="true" data-location_type="lonlat">
    <span class="evo_above_title">
    </span>
    <span class="evcal_desc2 evcal_event_title" itemprop="name">
     쏜애플 콘서트 '불구경'
    </span>
    <span class="evo_below_title">
    </span>
    <span class="evcal_desc_info">
    </span>
    <span class="evcal_desc3">
     <span class="evcal_event_types ett1">
      <em>
       <i>
        공연:
       </i>
      </em>
      <em data-filter="event_type">
       공연
      </em>
      <i class="clear">
      </i>
     </span>
    </span>
   </span>
   <em class="clear">
   </em>
  </a>
 </p>
</div>
<div class="event_description evcal_eventcard" style="display:none">
 <div class="evo_metarow_directimg">
 </div>
 <div class="evo_metarow_details evorow evcal_evdata_row bordb evcal_event_details">
  <div class="event_excerpt" style="display:none">
   <h3 class="padb5 evo_h3">
    <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
   </h3>
   <p>
    일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
예매 : 멜론
   </p>
  </div>
  <span class="evcal_evdata_icons">
   <i class="fa fa-align-justify">
   </i>
  </span>
  <div class="evcal_evdata_cell">
   <div class="eventon_full_description">
    <h3 class="padb5 evo_h3">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    <div class="eventon_desc_in" itemprop="description">
     <p>
      일시 : 2019년 9월 20일(금) ~ 29일(일) 금 8PM, 토, 일 6PM (총 6회 공연)
      <br/>
      장소 : CKL스테이지(서울 중구 청계천로 40 지하 1층)
      <br/>
      티켓 : 예매 60,000원 현매 65,000원(전석 스탠딩)
      <br/>
      예매 : 멜론 티켓
      <a href="/" target="_blank">
       <u>
        ticket.melon.com
       </u>
      </a>
      / 1899-0042
     </p>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
 </div>
 <div class="evo_metarow_time_location evorow bordb lastrow">
  <div class="tb">
   <div class="tbrow">
    <div class="evcal_col50 bordr">
     <div class="evcal_evdata_row evo_time">
      <span class="evcal_evdata_icons">
       <i class="fa fa-clock-o">
       </i>
      </span>
      <div class="evcal_evdata_cell">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p>
        (일) 18:00
       </p>
      </div>
     </div>
    </div>
    <div class="evcal_col50">
     <div class="evcal_evdata_row evo_location">
      <span class="evcal_evdata_icons">
       <i class="fa fa-map-marker">
       </i>
      </span>
      <div class="evcal_evdata_cell" data-loc_tax_id="595">
       <h3 class="evo_h3">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="evo_location_name">
        CKL스테이지
       </p>
       <p class="evo_location_address">
        서울시 중구 청계천로 40 지하 1층
       </p>
      </div>
     </div>
    </div>
    <div class="clear">
    </div>
   </div>
  </div>
  <div class="evcal_evdata_row evcal_close" title="Close">
  </div>
 </div>
</div>
<div class="clear end">
</div>
<div class="clear">
</div>
<div class="container-fluid">
 <div class="col-sm-12 col-md-12 col-lg-12">
 </div>
</div>
<div id="scroll-top">
 <a href="#">
  <i class="fa fa-chevron-up fa-3x">
  </i>
 </a>
</div>
<div class="mobile_post_button">
</div>
<div class="container" id="footer">
 <div class="text-align-center menu-compact">
  ⓒ2019 MINTPAPER All Rights Reserved
  [linkx]
  
  [linkx]
  
  [ahref]
  
  [ahref]
  
 </div>
</div>
<div id="simplemodal-login-form" style="display:none">
 <form action="/wp-login.php" id="loginform" method="post" name="loginform">
  <div class="title">
   Login
  </div>
  <div class="simplemodal-login-fields">
   <p>
    <label>
     Username
     <br/>
    </label>
   </p>
   <p>
    <label>
     Password
     <br/>
    </label>
   </p>
   <p class="forgetmenot">
    <label>
     Remember Me
    </label>
   </p>
   <p class="submit">
   </p>
   <p class="nav">
    [ahref]
    
   </p>
  </div>
  <div class="simplemodal-login-activity" style="display:none;">
  </div>
 </form>
 <form action="/wp-login.php?action=lostpassword" id="lostpasswordform" method="post" name="lostpasswordform">
  <div class="title">
   Reset Password
  </div>
  <div class="simplemodal-login-fields">
   <p>
    <label>
     Username or E-mail:
     <br/>
    </label>
   </p>
   <p class="submit">
   </p>
   <p class="nav">
    [ahref]
    
   </p>
  </div>
  <div class="simplemodal-login-activity" style="display:none;">
  </div>
 </form>
</div>
<div class="evo_lightboxes" style="display:block">
 <div class="evo_lightbox eventcard eventon_events_list" id="">
  <div class="evo_content_in">
   <div class="evo_content_inin">
    <div class="evo_lightbox_content">
     [linkx]
     
     <div class="evo_lightbox_body eventon_list_event evo_pop_body evcal_eventcard">
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
<?php>
|<---