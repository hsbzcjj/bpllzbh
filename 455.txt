--->|<!DOCTYPE html>
<html>
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
   <li>[area1][keywordx]</li>[area1][mkey1]<li>[ahref]</li>[area1][keywordx][ahref]
  </meta>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="none" http-equiv="x-pjax-version"/>
  <meta content="the seed" name="generator">
   <li>[ahref]</li><li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
  </meta>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="application-name"/>
  <meta content="yes" name="mobile-web-app-capable"/>
  <meta content="나무위키" name="msapplication-tooltip"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-starturl"/>
  <meta content="#008275" name="theme-color"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0, width=device-width" name="viewport"/>
  <meta content="noarchive" name="googlebot">
   <li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[linkx]<li>[area1][keywordx]</li>
  </meta>
 </head>
 <body class="senkawa">
  <div class="navbar-wrapper">
   <nav class="navbar navbar-dark bg-inverse navbar-static-top">
    [ahref]
    
    <ul class="nav navbar-nav">
     <li class="nav-item">
      [ahref]
      
     </li>
     <li class="nav-item">
      <a class="nav-link" href="/RecentDiscuss" title="최근 토론">
       <span class="icon ion-android-textsms">
       </span>
       <span class="icon-title">
        최근 토론
       </span>
      </a>
     </li>
     <li class="nav-item dropdown">
      [linkx]
      
      <div class="dropdown-menu right">
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       <a class="dropdown-item" href="/OrphanedPages">
        <span class="icon ion-sad-outline">
        </span>
        <span class="icon-title">
         고립된 문서
        </span>
       </a>
       [linkx]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       <a class="dropdown-item" href="/RandomPage">
        <span class="icon ion-shuffle">
        </span>
        <span class="icon-title">
         RandomPage
        </span>
       </a>
       [ahref]
       
       [ahref]
       
      </div>
     </li>
     <li class="nav-item dropdown">
      <a aria-expanded="false" aria-haspopup="true" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" title="나무라이브">
       <span class="icon ion-android-list">
       </span>
       <span class="icon-title">
        라이브
       </span>
       <span class="caret">
       </span>
      </a>
      <div class="dropdown-menu right">
       [ahref]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [linkx]
       
       [linkx]
       
      </div>
     </li>
    </ul>
    <ul class="nav navbar-nav pull-right">
     <li class="nav-item dropdown user-menu-parent">
      [linkx]
      
      <div class="dropdown-menu user-dropdown right">
       <div class="dropdown-item user-info">
        <div class="user-info">
         <div>
          219.145.144.65
         </div>
         <div>
          Please login!
         </div>
        </div>
       </div>
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
      </div>
     </li>
    </ul>
    <form class="form-inline navbar-form search-box-parent">
     <div class="input-group search-box">
      <span class="input-group-btn left-search-btns">
       [ahref]
       
      </span>
      <span class="input-group-btn right-search-btns">
       <button class="btn btn-secondary" id="searchBtn" type="button">
        <span class="icon ion-search">
        </span>
       </button>
       <button class="btn btn-secondary" id="goBtn" type="button">
        <span class="icon ion-arrow-right-c">
        </span>
       </button>
      </span>
     </div>
    </form>
   </nav>
  </div>
  <div class="content-wrapper">
   <aside class="sidebar has-site-notice">
    <div class="card recent-card">
     <h5 class="card-title">
      최근 변경
     </h5>
     <div class="link-table" id="recentChangeTable">
      [linkx]
      
     </div>
     [linkx]
     
    </div>
    <div class="test-ad-card">
     <iframe frameborder="0" height="270" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/c/270x270.html?v=2" width="270">
     </iframe>
    </div>
    <div class="card live-list-card" data-count="20" data-slug="headline">
     <h5 class="card-title">
      헤드라인 최신글
     </h5>
     <div class="link-table">
      [ahref]
      
     </div>
     [linkx]
     
    </div>
    <div class="ad-card">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-slot="2029530375" style="display:inline-block;width:160px;height:600px">
     </ins>
    </div>
   </aside>
   <article class="container-fluid wiki-article">
    <div class="wiki-article-menu">
     <div class="btn-group" role="group">
      [linkx]
      
      [ahref]
      
      [linkx]
      
      [ahref]
      
      [ahref]
      
      [ahref]
      
     </div>
    </div>
    <h1 class="title">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h1>
    <p class="wiki-edit-date">
     최근 수정 시각:
     <time data-format="Y-m-d H:i:s" datetime="2019-05-27T04:58:43.000Z">
      2019-05-27 04:58:43
     </time>
    </p>
    <div class="adsense">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="horizontal" data-ad-slot="3379361405" data-full-width-responsive="false" style="display:block">
     </ins>
    </div>
    <div class="wiki-category">
     <h2>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <ul>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="wiki-content clearfix">
     <div class="wiki-inner-content">
      <ul class="wiki-list">
       <li>
        <div class="wiki-paragraph">
         상위 문서:
         [linkx]
         
         ,
         <a class="wiki-link-internal" href="/w/%EC%97%90%ED%94%BD%ED%95%98%EC%9D%B4/%EC%9D%8C%EB%B0%98%20%EB%AA%A9%EB%A1%9D" title="에픽하이/음반 목록">
          에픽하이/음반 목록<li>[ahref]</li>[linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]
         </a>
         ,
         [linkx]
          <li>[pkeyx]</li><li>[linkx]</li><li>[area1][mkey1]</li><li>[area1][keywordx]</li>[ahref]
         
        </div>
       </li>
      </ul>
      <div class="wiki-paragraph">
       <div class="wiki-macro-toc" id="toc">
        <div class="toc-indent">
         <span class="toc-item">
          [ahref]
          
          .
          [ahref]
          
          <a class="wiki-link-internal" href="/w/%EC%97%90%ED%94%BD%ED%95%98%EC%9D%B4" title="에픽하이">
           에픽하이
          </a>
          5집
          [linkx]
          
          수록곡
         </span>
         <div class="toc-indent">
          <span class="toc-item">
           <a href="1">
            1.1
           </a>
           .
           [ahref]
           
           [ahref]
           
           [ahref]
            [linkx]<li>[linkx]</li><li>[area1][keywordx]</li>[ahref]
           
           의 리메이크 곡
          </span>
         </div>
         <span class="toc-item">
          [linkx]
          
          .
          <a class="wiki-link-internal" href="/w/2014%EB%85%84" title="2014년">
           2014년
          </a>
          [linkx]
          
          디지털 싱글 / 수록곡
         </span>
        </div>
       </div>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        <iframe allowfullscreen="" class="wiki-youtube" frameborder="0" height="360" src="//www.youtube.com/embed/NIPtyAKxlRs" width="640">
        </iframe>
        <br/>
        <strong>
         비오는 날마다 라디오에서 한번 쯤은 들어봤을 법한 대표적인 노래
        </strong>
        <br/>
        <br>
         [linkx][ahref][pkeyx][area1][keywordx][ahref][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][ahref][area1][keywordx][area1][keywordx][pkeyx][linkx][area1][mkey1][linkx][pkeyx][pkeyx][ahref]
        </br>
        [linkx]
        
        와
        [linkx]
        
        이 각각 랩 파트를 작사했고 타블로가 편곡했으며,
        [linkx]
        
        가
        [linkx]
        
        으로 참여했다.
        <br/>
        <br/>
        [linkx]
        
        과 함께 발매되자마자 각종 음원 차트에서 1, 2위를 차지했다. 10년이 지난 2019년에도 언급이 될 정도로 인기있는 곡.
        <br/>
        <br/>
        윤하의 '4가지쇼'에서 언급된 바에 따르면 하루 아빠의 연금 수준이라고 한다(...)
       </div>
      </div>
      <h3 class="wiki-heading">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        <iframe allowfullscreen="" class="wiki-youtube" frameborder="0" height="360" src="//www.youtube.com/embed/jfa95oNkQWc" width="640">
        </iframe>
        <br/>
        위 곡의 리메이크.
        [ahref]
        
        가 아닌
        [linkx]
        
        가 피쳐링으로 참여했다. 원곡에 비해 몽환적인 느낌이 가미되었다.
       </div>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        <iframe allowfullscreen="" class="wiki-youtube" frameborder="0" height="360" src="//www.youtube.com/embed/kTVvtlfU-Ts" width="640">
         <li>[linkx]</li>[linkx][ahref]
        </iframe>
        <br/>
        타블로가 윤하 데뷔 10주년을 맞아
        <a class="wiki-link-internal" href="/w/2008%EB%85%84" title="2008년">
         2008년
        </a>
        [ahref]
        
        [linkx]
        
        에 냈던 곡을
        [ahref]
        
        솔로곡으로 고쳐서 윤하에게 선물했다. 그래서
        [linkx]
        
        가 불렀던 랩 파트가 빠져서
        <a class="wiki-link-internal" href="/w/%ED%83%80%EB%B8%94%EB%A1%9C" title="타블로">
         타블로
        </a>
        단독 작사·작곡이 되었고, 편곡은 플래닛 쉬버의 필터(Philtre)가 맡았다.
        <br>
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li><li>[linkx]</li>[linkx]
        </br>
        <br/>
        이 디지털 싱글에는 반주만 들어있는 음원(Instrumental)도 포함돼 있다.
        <br/>
        <br/>
        [linkx]
        
        에서
        [ahref]
        
        <del>
         의 음모
        </del>
        에 의해
        <strong>
         [linkx]
         
         가이드 버전이 공개된 바 있다
        </strong>
        (...).
        <del>
         그렇게 못 들어줄 정도는 아니다
        </del>
        [ahref]
        
        그리고
        [ahref]
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][ahref][area1][keywordx][ahref][area1][keywordx]
        
        은 뒤이은 '오늘 서울은 하루종일 맑음', '편한가봐'의 가이드 버전 공개로 격추(...)
        <del>
         [linkx]
         
         의 가이드는
         <a class="wiki-link-internal" href="/w/%EC%9C%A0%ED%9D%AC%EC%97%B4" title="유희열">
          유희열
         </a>
         에 비하면
         [ahref]
         
         급이다.
        </del>
       </div>
       <div class="wiki-paragraph">
        <div style="border:1px solid gray; border-top:5px solid gray; padding:7px; margin-bottom:0px;">
         <a class="wiki-link-internal" href="/w/%ED%8C%8C%EC%9D%BC:%ED%81%AC%EB%A6%AC%EC%97%90%EC%9D%B4%ED%8B%B0%EB%B8%8C%20%EC%BB%A4%EB%A8%BC%EC%A6%88%20%EB%9D%BC%EC%9D%B4%EC%84%A0%EC%8A%A4__CC.png" rel="nofollow" title="파일:크리에이티브 커먼즈 라이선스__CC.png">
          <span class="wiki-image-align-normal" style="width:18px;">
           <span class="wiki-image-wrapper" style="width: 100%;">
            <noscript>
            </noscript>
           </span>
          </span>
         </a>
         이 문서의 내용 중 전체 또는 일부는
         [ahref]
         
         문서의
         [linkx]
         
         판에서 가져왔습니다.
         <a href="/history/우산?from=249" rel="noopener" target="_blank">
          이전 역사 보러 가기
         </a>
        </div>
       </div>
      </div>
      <div class="wiki-macro-footnote">
       <span class="footnote-list">
        <span class="target" id="fn-1">
        </span>
        [linkx]
        
        은근히 느낌있고 괜찮다. 애초에 타블로는 팀 내 보컬역할 담당하기도 하고... 옆에서 듣던
        <a class="wiki-link-internal" href="/w/%EC%9C%A4%ED%95%98" title="윤하">
         윤하
        </a>
        가 노래 잘한다고 칭찬해주기도 했다.
       </span>
      </div>
     </div>
     <iframe frameborder="0" height="100" id="ad-powerlink-pc" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink.html?v=18" width="100%">
     </iframe>
     <iframe frameborder="0" height="175" id="ad-powerlink-mobile" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink_mobile.html?v=18" width="100%">
     </iframe>
    </div>
    <footer>
     <p>
      <br/>
      이 저작물은
      [linkx]
      
      에 따라 이용할 수 있습니다. (단, 라이선스가 명시된 일부 문서 및 삽화 제외)
      <br/>
      기여하신 문서의 저작권은 각 기여자에게 있으며, 각 기여자는 기여하신 부분의 저작권을 갖습니다.
      <br/>
      <br/>
      나무위키는 백과사전이 아니며 검증되지 않았거나, 편향적이거나, 잘못된 서술이 있을 수 있습니다.
      <br/>
      나무위키는 위키위키입니다. 여러분이 직접 문서를 고칠 수 있으며, 다른 사람의 의견을 원할 경우 직접 토론을 발제할 수 있습니다.
     </p>
    </footer>
   </article>
  </div>
  <div class="footer-wrapper">
   <div class="live-list-card mobile-live-bottom-list" data-count="5" data-slug="headline">
    <h6>
     헤드라인 최신글
    </h6>
    <div class="link-table">
     [ahref]
     
    </div>
    [ahref]
    
   </div>
   <div class="ad-bottom">
    <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="auto" data-ad-slot="2145080446" data-full-width-responsive="true" style="display:block">
    </ins>
   </div>
   <footer class="footer">
    <p>
     namu.wiki
     <span class="sep">
     </span>
     <a href="i">
      Contáctenos
     </a>
     <span class="sep">
      <li>[area1][mkey1]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
     </span>
     [ahref]
     
     <span class="sep">
     </span>
     Operado por umanle S.R.L.
     <span class="sep">
     </span>
     Hecho con <3 en Asunción, República del Paraguay
    </p>
    <p>
     Su zona horaria es
     <span id="timezone">
     </span>
     <span class="sep">
     </span>
     Impulsado por
     <i>
      the seed engine
     </i>
    </p>
   </footer>
  </div>
  <ul class="nav-control">
   <li>
    <a href="p" id="goTopBtn">
     <span class="ion-arrow-up-b">
      [linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][linkx][linkx][linkx][linkx][pkeyx][linkx][area1][keywordx][ahref][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
     </span>
    </a>
   </li>
   <li>
    [linkx]
    
   </li>
  </ul>
  <div class="modal fade" id="shortcutHelpModal">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
       <span class="sr-only">
        Close
       </span>
      </button>
      <h5 class="modal-title">
       단축키 도움말
      </h5>
     </div>
     <div class="modal-body">
      <dl class="dl-horizontal">
       <dt class="col-sm-3">
        <b>
         F<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
        </b>
        ront Gate
       </dt>
       <dd class="col-sm-9">
        대문
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         C
        </b>
        hanges
       </dt>
       <dd class="col-sm-9">
        최근 변경
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         D
        </b>
        iscuss
       </dt>
       <dd class="col-sm-9">
        최근 토론
       </dd>
       <dt class="col-sm-3">
        R
        <b>
         A
        </b>
        ndom
       </dt>
       <dd class="col-sm-9">
        랜덤 문서
       </dd>
       <dt class="col-sm-3">
        <b>
         Shift[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][linkx][ahref][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx]
        </b>
        +
        <b>
         S
        </b>
        earch
       </dt>
       <dd class="col-sm-9">
        검색
       </dd>
       <dt class="col-sm-3">
        <b>
         E
        </b>
        dit
       </dt>
       <dd class="col-sm-9">
        문서 편집
       </dd>
       <dt class="col-sm-3">
        <b>
         ?
        </b>
       </dt>
       <dd class="col-sm-9">
        단축키 도움말
       </dd>
      </dl>
     </div>
    </div>
   </div>
  </div>
  <div class="modal fade" data-backdrop="false" id="searchModal">
   <div class="modal-dialog modal-sm">
    [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][linkx][pkeyx][linkx][area1][mkey1][linkx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][ahref]
   </div>
  </div>
  <div class="modal" id="footnoteModal">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <h5 class="modal-title">
       각주:
      </h5>
     </div>
     <div class="modal-body">
     </div>
     <div class="modal-footer">
      <button class="btn btn-block" data-dismiss="modal" type="button">
       닫기
      </button>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0021
  </b>
 </body>
</html>
|<---