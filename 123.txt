--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <noscript>
   [ahref]<li>[pkeyx]</li>[linkx][pkeyx]<li>[ahref]</li>
  </noscript>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <noscript>
   <div style="display:inline;">
    [pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>
   </div>
  </noscript>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-PJDD7T" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div id="skipnavi">
   [linkx]
   
  </div>
  ﻿﻿﻿﻿
  <div id="container">
   <div class="gnb_2016_head" id="header">
    <div class="gnb_2016_head_wrap" id="head_wrap">
     <div class="navArea">
      <h1 class="siteLogo">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h1>
      <ul class="gnb_2016_nav" id="navHeader">
       <li>
        [ahref]
        
        <div class="gnb_2016_sub">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A02A07A01">
             [ahref]
             
            </li>
            <li id="NQ1A02A07A02">
             <a href="/displayPromotion/listLimited.lecs?displayNo=NQ1A02A06A03&amp;ctgNm=All&amp;lmtYn=Y&amp;middleNo=NQ1A02&amp;categoryNo=NQ1A02" target="_self">
              기간한정상품
             </a>
            </li>
            <li id="NQ1A02A07A03">
             [ahref]
             
            </li>
            <li id="NQ1A02A07A04">
             [linkx]
             
            </li>
            <li id="NQ1A02A07A10">
             [linkx]
             
            </li>
            <li id="NQ1A02A07A16">
             [area1][keywordx]<li>[area1][mkey1]</li>[area1][keywordx]
            </li>
            <li id="NQ1A02A07A17">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayMallNo=NQ1&amp;displayNo=NQ1A01A07A20" target="_self">
              UNIQLO UPDATE
             </a>
            </li>
            <li id="NQ1A02A07A06">
             Today‘s Pick Up[pkeyx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][linkx][pkeyx][ahref][pkeyx][linkx]
            </li>
            <li id="NQ1A02A07A11">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A02A08A71">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A08A71">
              유니클로 인기 아이템을 좋은 가격으로!
             </a>
            </li>
            <li id="NQ1A02A08A68">
             [ahref]
             
            </li>
            <li id="NQ1A02A08A69">
             [linkx]
             
            </li>
            <li id="NQ1A02A08A02">
             [ahref]
             
            </li>
            <li id="NQ1A02A08A09">
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A02A09A38">
             [ahref]
             
            </li>
            <li id="NQ1A02A09A35">
             [ahref]
             
            </li>
            <li id="NQ1A02A09A26">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A02A10A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A10A03">
              캐주얼 아우터
             </a>
            </li>
            <li id="NQ1A02A10A02">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A10A02">
              재킷·코트
             </a>
            </li>
            <li id="NQ1A02A10A01">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A10A01">
              울트라라이트다운　　(경량패딩)
             </a>
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A02A11A07">
             [ahref]
             
            </li>
            <li id="NQ1A02A11A01">
             [ahref]
             
            </li>
            <li id="NQ1A02A11A04">
             [linkx]
             
            </li>
            <li id="NQ1A02A11A17">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A11A17">
              티셔츠(반팔·슬리브리스)
             </a>
            </li>
            <li id="NQ1A02A11A05">
             [linkx]
             
            </li>
            <li id="NQ1A02A11A06">
             [ahref]
              [linkx][area1][keywordx]<li>[area1][keywordx]</li>[linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             
            </li>
            <li id="NQ1A02A11A03">
             [ahref]
             
            </li>
            <li id="NQ1A02A11A10">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A02A12A02">
             [linkx]
             
            </li>
            <li id="NQ1A02A12A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A12A03">
              앵클팬츠
             </a>
            </li>
            <li id="NQ1A02A12A05">
             [ahref]
             
            </li>
            <li id="NQ1A02A12A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A12A04">
              레깅스팬츠
             </a>
            </li>
            <li id="NQ1A02A12A06">
             [ahref]
             
            </li>
            [ahref]
            
            <li id="NQ1A02A12A07">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <div class="col_block">
           <h5>
            <a>
             INNER WEAR
            </a>
           </h5>
           <ul>
            <li id="NQ1A02A13A02">
             [ahref]
             
            </li>
            <li id="NQ1A02A13A01">
             [linkx]
             
            </li>
            <li id="NQ1A02A13A03">
             [linkx]
             
            </li>
            <li id="NQ1A02A13A09">
             [ahref]
             
            </li>
            <li id="NQ1A02A13A05">
             [ahref]
             
            </li>
            <li id="NQ1A02A13A04">
             [linkx]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A02A14A02">
             [linkx]
             
            </li>
            <li id="NQ1A02A14A03">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <div class="col_block">
           <h5>
            <li>[area1][keywordx]</li>[linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>
           </h5>
           <ul>
            <li id="NQ1A02A15A02">
             [linkx]
             
            </li>
            <li id="NQ1A02A15A01">
             [linkx]
             
            </li>
            <li id="NQ1A02A15A04">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A02A15A04">
              벨트
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [ahref]
         
        </div>
       </li>
       <li>
        [ahref][pkeyx][ahref][pkeyx][linkx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][ahref][ahref]
       </li>
       <li>
        [linkx]
        
        <div class="gnb_2016_sub kids">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A03A07A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A07A02">
             [ahref]
             
            </li>
            <li id="NQ1A03A07A03">
             [linkx]
             
            </li>
            <li id="NQ1A03A07A04">
             [linkx]
             
            </li>
            <li id="NQ1A03A07A10">
             [ahref]
             
            </li>
            <li id="NQ1A03A07A13">
             [linkx]
             
            </li>
            <li id="NQ1A03A07A06">
             [linkx]
             
            </li>
            <li id="NQ1A03A07A11">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            <a>
             특집
            </a>
           </h5>
           <ul>
            <li id="NQ1A03A08A31">
             [ahref]
             
            </li>
            <li id="NQ1A03A08A22">
             [linkx]
             
            </li>
            <li id="NQ1A03A08A04">
             [ahref]
             
            </li>
            <li id="NQ1A03A08A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <h4>
           <span>
            BOYS
           </span>
          </h4>
          <div class="col_block">
           <h5>
            <li>[pkeyx]</li><li>[area1][keywordx]</li>[ahref][pkeyx]<li>[area1][keywordx]</li>
           </h5>
           <ul>
            <li id="NQ1A03A11A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A11A02">
             [linkx]
             
            </li>
            <li id="NQ1A03A11A06">
             [linkx]
             
            </li>
            <li id="NQ1A03A11A03">
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A03A12A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A12A06">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <h4>
          </h4>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A03A13A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A13A06">
             [ahref]
             
            </li>
            <li id="NQ1A03A13A04">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <h4>
           <span>
            GIRLS
           </span>
          </h4>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A03A16A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A16A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A16A05">
              원피스
             </a>
            </li>
            <li id="NQ1A03A16A02">
             [linkx]
             
            </li>
            <li id="NQ1A03A16A08">
             [linkx]
             
            </li>
            <li id="NQ1A03A16A04">
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="col_block">
           <h5>
            BOTTOMS[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][area1][keywordx][ahref][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </h5>
           <ul>
            <li id="NQ1A03A14A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A03A14A05">
              캐주얼팬츠·스커트
             </a>
            </li>
            <li id="NQ1A03A14A08">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <h4>
          </h4>
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A03A17A01">
             [ahref]
             
            </li>
            <li id="NQ1A03A17A04">
             [ahref]
             
            </li>
            <li id="NQ1A03A17A05">
             [ahref]
             
            </li>
            <li id="NQ1A03A17A03">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [ahref]
         
        </div>
       </li>
       <li>
        [linkx]
        
        <div class="gnb_2016_sub baby">
         <div class="gnb_2016_col col1">
          <div class="col_block special col2">
           <ul>
            <li id="NQ1A04A05A01">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A02">
             [linkx]
             
            </li>
            <li id="NQ1A04A05A03">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A04">
             [linkx]
             
            </li>
            <li id="NQ1A04A05A05">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A04A05A05">
              온라인 특별상품
             </a>
            </li>
            <li id="NQ1A04A05A11">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A06">
             [ahref]
             
            </li>
            <li id="NQ1A04A05A10">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A04A06A24">
             [linkx]
             
            </li>
            <li id="NQ1A04A06A23">
             [linkx]
             
            </li>
            <li id="NQ1A04A06A04">
             [ahref]
             
            </li>
            <li id="NQ1A04A06A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A04A08A03">
             [ahref]
             
            </li>
            <li id="NQ1A04A08A05">
             [linkx]
             
            </li>
            <li id="NQ1A04A08A06">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A04A09A03">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A04A09A03">
              UT(그래픽티셔츠)
             </a>
            </li>
            <li id="NQ1A04A09A01">
             [linkx]
             
            </li>
            <li id="NQ1A04A09A04">
             [ahref]
             
            </li>
            <li id="NQ1A04A09A12">
             <a href="/display/displayShop.lecs?storeNo=83&amp;siteNo=50706&amp;displayNo=NQ1A04A09A12">
              이너T(코튼·코튼메쉬·AIRism)
             </a>
            </li>
            <li id="NQ1A04A09A06">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [linkx]
         
        </div>
       </li>
       <li>
        [linkx]
        
        <div class="gnb_2016_sub company">
         <div class="gnb_2016_col col1">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A01A01">
             <a href="/display/displayShop.lecs?displayNo=NQ1A12A12" target="_self">
              유니클로에 대해서
             </a>
            </li>
            <li id="NQ1A12A01A02">
             [ahref]
             
            </li>
            <li id="NQ1A12A01A03">
             [linkx]
             
            </li>
            <li id="NQ1A12A01A04">
             <a href="/display/displayShop.lecs?displayNo=NQ1A12A15" target="_self">
              경영방침
             </a>
            </li>
            <li id="NQ1A12A01A05">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col2">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A02A01">
             [ahref][linkx]<li>[pkeyx]</li>[area1][keywordx]
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col3">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A03A02">
             [ahref]
             
            </li>
            <li id="NQ1A12A03A03">
             [ahref]
             
            </li>
            <li id="NQ1A12A03A04">
             [ahref]
             
            </li>
            <li id="NQ1A12A03A05">
             <a href="/kr/sustainability/people/" target="_blank">
              함께 일하는 동료들
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col4">
          <div class="col_block">
           <h5>
            [ahref]
            
           </h5>
           <ul>
            <li id="NQ1A12A04A06">
             <li>[ahref]</li><li>[linkx]</li><li>[area1][mkey1]</li><li>[pkeyx]</li>
            </li>
            <li id="NQ1A12A04A05">
             [linkx]
             
            </li>
            <li id="NQ1A12A04A08">
             [ahref]
             
            </li>
            <li id="NQ1A12A04A03">
             [linkx]
             
            </li>
            <li id="NQ1A12A04A07">
             [linkx]
             
            </li>
            <li id="NQ1A12A04A02">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col5">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A12A05A01">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="gnb_2016_col col6">
          <div class="col_block">
           <h5>
            [linkx]
            
           </h5>
           <ul>
            <li id="NQ1A12A06A01">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="terminator">
         </div>
         [linkx]
         
        </div>
       </li>
      </ul>
      <div id="gnav_util_area">
       <ul class="clearfix">
        <li>
         [pkeyx][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][ahref][ahref][area1][keywordx][area1][mkey1][area1][keywordx][pkeyx][pkeyx][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <ul class="gnav_util_slider" id="navUtil">
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="r" onclick="javascript:goLogin();">
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li id="gnav_search_slide">
         <form action="/search/searchUniqlo.lecs" method="post" name="HeaderSearch">
          <div class="search_input_wrap">
           <span id="gnav_textClear">
            x
           </span>
           [ahref]
           
          </div>
          <div class="search_layer_rank search_layer_pop" id="search_layer_pop">
           <div class="search_layer">
            <ul class="tabs_wrap">
             <li class="week_rank on" id="recentTab">
              <div class="tabs">
               최근 검색어
              </div>
              <div class="cont" id="search_word_lately">
               <ol>
               </ol>
               <div class="empty_box" id="word_no_data" style="display:none">
                <p class="emp_tit" id="no_srch_word" style="display:none">
                 최근 검색어 내역이 없습니다.
                </p>
                <p class="emp_tit" id="recent_word_off" style="display:none">
                 검색어 저장 기능이 꺼져 있습니다.
                </p>
                <p class="emp_tit ie8_txt" style="display:none">
                 죄송합니다.
                 <br/>
                 현재 Internet Explorer 버전에서는
                 <br/>
                 해당기능을 지원하지 않습니다.
                 <br/>
                 <br/>
                 Internet Explorer 버전
                 <br/>
                 업데이트 후 사용해 주시기 바랍니다.
                </p>
               </div>
              </div>
             </li>
             <li class="week_rank" id="popTab">
              <div class="tabs">
               인기 검색어
              </div>
              <div class="cont" id="search_word_popul">
               <ol>
               </ol>
              </div>
             </li>
            </ul>
           </div>
           <div class="search_layer_btm on">
            <div class="lft_btns">
             [ahref]
             
             [linkx]
             
            </div>
            <div class="rit_btns">
             [ahref]
             
             [linkx]
             
            </div>
           </div>
          </div>
          <div class="search_layer_rank search_layer_auto" id="search_layer_auto">
           <div class="search_list">
            <ul>
            </ul>
           </div>
          </div>
         </form>
        </li>
       </ul>
      </div>
     </div>
     <div class="gnb_2016_head_topbg">
     </div>
    </div>
    <div class="gnb_2016_dimmed" id="gnb_2016_dimmed">
    </div>
    [linkx]
    
   </div>
   <div id="content">
    <div class="l3banner_popupCover">
     <div class="visarea PC_L3_L3popup_180824">
      <div class="top_slider">
       <div class="l3_slider clearfix">
        <div class="cover">
         [ahref]
         
        </div>
        <div class="cover">
         [linkx]
         
        </div>
        <div class="cover">
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0136
  </b>
 </body>
</html>
<p class="text" style="padding-top:0px;">
 매일을 멋스럽게,
 <br/>
 시즌 액세사리
</p>
<div class="right_col">
</div>
<div class="blkMultibuyContent">
 <h3 class="tittype01">
  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
 </h3>
</div>
<div class="L3_swimwear_180601">
 <div class="gender_area mb15 l3framework-tab l3framework-01">
  <ul class="clearfix">
   <li>
    [linkx]
    
   </li>
   <li class="men_btn_active">
    <span>
     MEN
    </span>
   </li>
  </ul>
 </div>
 <div class="visarea">
  <div class="L3_Wknit_lineup_180119">
   <div class="l3framework-anchor l3framework-02">
    <div>
     <ul>
      <li>
       <a href="2">
        우산
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="5">
        모자
       </a>
      </li>
     </ul>
    </div>
   </div>
  </div>
 </div>
</div>
<div id="content1">
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A02">
   <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A02" style="margin-top:15px;">
  <p class="h3_ttl">
   우산
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [linkx]
       
      </p>
      <a class="quick_btn" href=";" id="quickViewLayerBtn">
      </a>
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [ahref]
       
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A08">
   [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A08" style="margin-top:15px;">
  <p class="h3_ttl">
   스톨
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [ahref]
       
      </p>
      <a class="quick_btn" href=";" id="quickViewLayerBtn">
      </a>
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [ahref]
       
      </span>
      <strong class="price">
       12,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[area1][mkey1]</li>
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-chip-color="COL55" data-goods-no="NQ31123162" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/31/62/418377_COL_COL55_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31123162&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL55" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [ahref]
       
      </span>
      <strong class="price">
       12,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
 <div class="blkMultibuyContent">
  <h3 class="tittype02" id="fcNQ1A01A15A08A05">
   <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
  </h3>
 </div>
 <div class="visarea L3_h3" id="NQ1A01A15A08A05" style="margin-top:15px;">
  <p class="h3_ttl">
   모자
  </p>
 </div>
 <div class="blkItemList blkUnitSize01 clearfix">
  <div class="uniqlo_unit">
   <ul class="uniqlo_info">
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124583&amp;displayNo=NQ1A01A15A08">
       </a>
      </p>
      [linkx]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [linkx]
       
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [ahref]
       
      </p>
      [linkx]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        <a data-chip-color="COL09" data-goods-no="NQ31124582" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/45/82/420150_COL_COL09_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31124582&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL09" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        <a data-chip-color="COL69" data-goods-no="NQ31124582" data-image-path="https://simage-kr.uniqlo.com/goods/31/12/45/82/420150_COL_COL69_228.jpg" data-link-url="/display/showDisplay.lecs?goodsNo=NQ31124582&amp;displayNo=NQ1A01A15A08&amp;optionValue=COL69" data-max-size="" data-min-size="FREE" href="#">
        </a>
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       [ahref]
       
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
    <li class="item">
     <span class="tag">
     </span>
     <div class="thumb">
      <p class="tumb_img">
       [linkx]
       
      </p>
      [ahref]
      
     </div>
     <div class="color_chip">
      <span class="info_name">
      </span>
      <ul class="info_color">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <p>
      <span class="name">
       <a href="/display/showDisplay.lecs?goodsNo=NQ31124581&amp;displayNo=NQ1A01A15A08">
        울캐시미어캡
       </a>
      </span>
      <strong class="price">
       19,900원
      </strong>
     </p>
    </li>
   </ul>
  </div>
 </div>
</div>
<div class="bx_prevNext" id="recopickApiDiv" style="display:none;">
 <div class="uqrcopicNew">
  <h2 id="recopickApiTitleDiv">
   [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </h2>
  <ul class="specialBxSlider recopick" data-controls="true" data-easing="easeOutCubic" data-max-slides="12" data-min-slides="1" data-move-slides="1" data-pager="true" data-pause="3000" data-slide-width="960" id="recopickApiGoodsListDiv">
  </ul>
 </div>
</div>
<iframe frameborder="0" height="0" name="submitFrame" src="about:blank" style="width:0;height:0" title="빈프레임" width="0">
</iframe>
<iframe frameborder="0" height="0" name="downloadFrame" src="about:blank" style="width:0;height:0" title="빈프레임" width="0">
</iframe>
﻿﻿﻿﻿﻿
<div id="footer2">
 <div class="siteinfo">
  <p class="sitename">
   [ahref]
   
  </p>
  <ul class="utility clearfix">
   <li>
    [linkx]
    
   </li>
   <li>
   </li>
   <li>
    [linkx]
    
   </li>
   <li>
   </li>
   <li>
    <a href="/display/displayShop.lecs?displayNo=NQ1A12A13&amp;tracking=footer_03" target="_blank" title="새창열림">
    </a>
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
   <li>
   </li>
   <li>
    <a href="/display/guideVolumePurchase.lecs" target="_blank" title="새창열림">
    </a>
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
   <li>
   </li>
   <li>
    [ahref]
    
   </li>
  </ul>
  <p id="goPageTop">
   [ahref]
   
  </p>
 </div>
</div>
<div id="footWrap">
 <div id="footer">
  <dl class="world clearfix">
   <dt>
   </dt>
   <dd class="country_menu1">
    [linkx]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    <a href="/?tracking=footer_china" target="_blank">
     CHINA
    </a>
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    <a href="/eu/en" target="_blank">
     EU
    </a>
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd class="second">
    [linkx]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [ahref]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
   <dd>
    [linkx]
    
   </dd>
  </dl>
  <div class="foot_uniqlo">
   [area1][mkey1]<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>
  </div>
 </div>
</div>
<p>
</p>
<div class="layerPopup" id="divCommonViewLayer" style="z-index:1000">
</div>
<div class="layer_quickview" id="quickviewLayer" style="z-index:1000;display:none;">
</div>
<div id="ttdUniversalPixelTag3886b0a122f942d3ba209bc2688197a8" style="display:none">
</div>
|<---