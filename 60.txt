--->|<!DOCTYPE doctype html >
<html lang="en-US">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="https://ml0kkrxew41d.i.optimole.com/w:auto/h:auto/q:55/http://chicagokoreatimes.com/wp-content/uploads/2017/04/SUH.jpg" property="og:image">
  </meta>
 </head>
 <body class="post-template-default single single-post postid-15917 single-format-standard optimole-no-script ---- global-block-template-1 single_template_3 wpb-js-composer js-comp-ver-5.4.5 vc_responsive td-full-layout" itemscope="itemscope" itemtype="http://schema.org/WebPage">
  <div class="td-scroll-up">
   <i class="td-icon-menu-up">
   </i>
  </div>
  <div class="td-menu-background">
  </div>
  <div id="td-mobile-nav">
   <div class="td-mobile-container">
    <div class="td-menu-socials-wrap">
     <div class="td-menu-socials">
      <span class="td-social-icon-wrap">
       [ahref]
       
      </span>
      <span class="td-social-icon-wrap">
       [linkx]
       
      </span>
      <span class="td-social-icon-wrap">
       [linkx]
       
      </span>
     </div>
     <div class="td-mobile-close">
      [ahref]
      
     </div>
    </div>
    <div class="td-mobile-content">
     <div class="menu-top_menu-container">
      <ul class="td-mobile-main-menu" id="menu-top_menu">
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-first menu-item-58652" id="menu-item-58652">
        <a href="/">
         Home
        </a>
       </li>
       <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-58654" id="menu-item-58654">
        <a href="/category/%ec%a2%85%ed%95%a9%eb%89%b4%ec%8a%a4/">
         종합뉴스
         <i class="td-icon-menu-right td-element-after">
         </i>
        </a>
        <ul class="sub-menu">
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58655" id="menu-item-58655">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-63357" id="menu-item-63357">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58656" id="menu-item-58656">
          <a href="/category/%ec%a2%85%ed%95%a9%eb%89%b4%ec%8a%a4/%ea%b8%b0%ed%9a%8d/">
           기획시리즈
          </a>
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58657" id="menu-item-58657">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor menu-item-has-children menu-item-58658" id="menu-item-58658">
        <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/">
         오피니언
         <i class="td-icon-menu-right td-element-after">
         </i>
        </a>
        <ul class="sub-menu">
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-has-children menu-item-58659" id="menu-item-58659">
          [linkx]
           [ahref][linkx][ahref][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58663" id="menu-item-58663">
            <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/column/column-ksh/">
             김성한 칼럼
            </a>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61259" id="menu-item-61259">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61260" id="menu-item-61260">
            <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/column/%ec%8d%a8%eb%8b%88%ea%b9%80%ec%9d%98-%ed%96%89%eb%b3%b5%ed%95%9c-%eb%8b%a4%ec%9a%b4%ec%8b%b8%ec%9d%b4%ec%a7%95/">
             써니김의 행복한 다운싸이징
            </a>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-58660" id="menu-item-58660">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58661" id="menu-item-58661">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61261" id="menu-item-61261">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61262" id="menu-item-61262">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58666" id="menu-item-58666">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58665" id="menu-item-58665">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61263" id="menu-item-61263">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58662" id="menu-item-58662">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children menu-item-58667" id="menu-item-58667">
          [linkx]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61264" id="menu-item-61264">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61266" id="menu-item-61266">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58670" id="menu-item-58670">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58668" id="menu-item-58668">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61267" id="menu-item-61267">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58672" id="menu-item-58672">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61265" id="menu-item-61265">
            <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/%ec%a2%85%ea%b5%90%ec%b9%bc%eb%9f%bc/%ec%9e%84%ed%9a%a8%ec%a7%84-%eb%aa%a9%ec%82%ac/">
             임효진 목사
            </a>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58673" id="menu-item-58673">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-61268" id="menu-item-61268">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58674" id="menu-item-58674">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-58675" id="menu-item-58675">
        [linkx]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-58650" id="menu-item-58650">
        [linkx]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-58649" id="menu-item-58649">
        <a href="/%ed%95%9c%ea%b5%ad%ec%9d%bc%eb%b3%b4-%ea%b0%80%ed%8c%90%eb%8c%80-%ec%b0%be%ea%b8%b0/">
         가판대 위치
        </a>
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-58651" id="menu-item-58651">
        [linkx]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-58653" id="menu-item-58653">
        [linkx]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="td-register-section" id="login-form-mobile">
    <div class="td-login-animation td-login-hide-mob" id="td-login-mob">
     <div class="td-login-close">
      [ahref]
      
      <div class="td-login-title">
       Sign in
      </div>
      <div class="td-mobile-close">
       [linkx]
       
      </div>
     </div>
     <div class="td-login-form-wrap">
      <div class="td-login-panel-title">
       <span>
        Welcome!
       </span>
       Log into your account
      </div>
      <div class="td_display_err">
      </div>
      <div class="td-login-inputs">
       <label>
        your username
       </label>
      </div>
      <div class="td-login-inputs">
       <label>
        your password
       </label>
      </div>
      <div class="td-login-info-text">
       <a href="#" id="forgot-pass-link-mob">
        Forgot your password?
       </a>
      </div>
      <div class="td-login-register-link">
      </div>
     </div>
    </div>
    <div class="td-login-animation td-login-hide-mob" id="td-forgot-pass-mob">
     <div class="td-forgot-pass-close">
      [linkx]
      
      <div class="td-login-title">
       Password recovery
      </div>
     </div>
     <div class="td-login-form-wrap">
      <div class="td-login-panel-title">
       Recover your password
      </div>
      <div class="td_display_err">
      </div>
      <div class="td-login-inputs">
       <label>
        your email
       </label>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="td-search-background">
  </div>
  <div class="td-search-wrap-mob">
   <div aria-labelledby="td-header-search-button" class="td-drop-down-search">
    <form action="/" class="td-search-form" method="get">
     <div class="td-search-close">
      [linkx]
      
     </div>
     <div class="td-search-input" role="search">
      <span>
       Search
      </span>
     </div>
    </form>
    <div id="td-aj-search-mob">
    </div>
   </div>
  </div>
  <div class="td-theme-wrap" id="td-outer-wrap">
   <div class="tdc-header-wrap">
    <div class="td-header-wrap td-header-style-1">
     <div class="td-header-top-menu-full td-container-wrap">
      <div class="td-container td-header-row td-header-top-menu">
       <div class="top-bar-style-1">
        <div class="td-header-sp-top-menu">
         <div class="td-weather-top-widget" id="td_top_weather_uid">
          <i class="td-icons rain-n">
          </i>
          <div class="td-weather-now" data-block-uid="td_top_weather_uid">
           <span class="td-big-degrees">
            70.8
           </span>
           <span class="td-weather-unit">
            F
           </span>
          </div>
          <div class="td-weather-header">
           <div class="td-weather-city">
            Chicago
           </div>
          </div>
         </div>
         <div class="td_data_time">
          <div style="visibility:hidden;">
           Tuesday, August 13, 2019
          </div>
         </div>
         <div class="menu-top-container">
          <ul class="top-header-menu" id="menu-new_topmenu">
           [pkeyx][linkx][pkeyx][area1][keywordx][linkx][linkx][area1][keywordx][area1][mkey1][area1][keywordx][area1][mkey1]
          </ul>
         </div>
        </div>
        <div class="td-header-sp-top-widget">
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
         <span class="td-social-icon-wrap">
          [linkx]
          
         </span>
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
        </div>
       </div>
       <div class="white-popup-block mfp-hide mfp-with-anim" id="login-form">
        <div class="td-login-wrap">
         [linkx]
         
         <div class="td-login-form-div td-display-block" id="td-login-div">
          <div class="td-login-panel-title">
           Sign in
          </div>
          <div class="td-login-panel-descr">
           Welcome! Log into your account
          </div>
          <div class="td_display_err">
          </div>
          <div class="td-login-inputs">
           <label>
            your username
           </label>
          </div>
          <div class="td-login-inputs">
           <label>
            your password
           </label>
          </div>
          <div class="td-login-info-text">
           [linkx]
           
          </div>
         </div>
         <div class="td-login-form-div td-display-none" id="td-forgot-pass-div">
          <div class="td-login-panel-title">
           Password recovery
          </div>
          <div class="td-login-panel-descr">
           Recover your password
          </div>
          <div class="td_display_err">
          </div>
          <div class="td-login-inputs">
           <label>
            your email
           </label>
          </div>
          <div class="td-login-info-text">
           A password will be e-mailed to you.
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="td-banner-wrap-full td-logo-wrap-full td-container-wrap">
      <div class="td-container td-header-row td-header-header">
       <div class="td-header-sp-logo">
        [linkx]
        
       </div>
       <div class="td-header-sp-recs">
        <div class="td-header-rec-wrap">
         <div class="td-a-rec td-a-rec-id-header td_uid_1_5d52692f04edf_rand td_block_template_1">
          <div style="width:278px; background-color:white; height:100px; overflow:auto;">
           <a href="/" target="blank">
            <noscript>
            </noscript>
           </a>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="td-header-menu-wrap-full td-container-wrap">
      <div class="td-header-menu-wrap td-header-gradient">
       <div class="td-container td-header-row td-header-main-menu">
        <div id="td-header-menu" role="navigation">
         <div id="td-top-mobile-toggle">
          [ahref]
          
         </div>
         <div class="td-main-menu-logo td-logo-in-header">
          [ahref]
          
          [linkx]
          
         </div>
         <div class="menu-top_menu-container">
          <ul class="sf-menu" id="menu-top_menu-1">
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-first td-menu-item td-normal-menu menu-item-58652">
            Home<li>[area1][keywordx]</li><li>[area1][mkey1]</li>[area1][mkey1]
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children td-menu-item td-normal-menu menu-item-58654">
            <a href="/category/%ec%a2%85%ed%95%a9%eb%89%b4%ec%8a%a4/">
             종합뉴스
            </a>
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58655">
              <a href="/category/%ec%a2%85%ed%95%a9%eb%89%b4%ec%8a%a4/%ec%a3%bc%ec%9a%94%eb%89%b4%ec%8a%a4/">
               주요뉴스
              </a>
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-63357">
              [linkx]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58656">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58657">
              <a href="/category/%ec%a2%85%ed%95%a9%eb%89%b4%ec%8a%a4/%ec%a2%85%ea%b5%90/">
               종교
              </a>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor menu-item-has-children td-menu-item td-normal-menu menu-item-58658">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-has-children td-menu-item td-normal-menu menu-item-58659">
              [linkx]
              
              <ul class="sub-menu">
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58663">
                <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/column/column-ksh/">
                 김성한 칼럼
                </a>
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61259">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61260">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent td-menu-item td-normal-menu menu-item-58660">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58661">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61261">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61262">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58666">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58665">
                <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/column/%ec%a1%b0%ec%9d%b4%ea%b9%80%ec%9d%98-%ec%98%81%ed%99%94%ec%84%b8%ec%83%81/">
                 조이김의 영화세상
                </a>
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61263">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58662">
                [ahref]
                
               </li>
              </ul>
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-has-children td-menu-item td-normal-menu menu-item-58667">
              <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/%ec%a2%85%ea%b5%90%ec%b9%bc%eb%9f%bc/">
               종교칼럼
              </a>
              <ul class="sub-menu">
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61264">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61266">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58670">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58668">
                [linkx]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61267">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58672">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61265">
                [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]<li>[area1][keywordx]</li>
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58673">
                [ahref]
                
               </li>
               <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-61268">
                [linkx]
                
               </li>
              </ul>
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58674">
              <a href="/category/%ec%98%a4%ed%94%bc%eb%8b%88%ec%96%b8/%eb%8f%85%ec%9e%90%ea%b8%b0%ea%b3%a0/">
               독자기고
              </a>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-58675">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page td-menu-item td-normal-menu menu-item-58650">
            <a href="/%ec%a0%84%ec%9e%90%ec%8b%a0%eb%ac%b8%eb%b3%b4%ea%b8%b0/">
             전자신문
            </a>
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page td-menu-item td-normal-menu menu-item-58649">
            [linkx]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page td-menu-item td-normal-menu menu-item-58651">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page td-menu-item td-normal-menu menu-item-58653">
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="td-header-menu-social">
         <span class="td-social-icon-wrap">
          <a href="/KOREATIMESchicago/" target="_blank" title="Facebook">
           <i class="td-icon-font td-icon-facebook">
           </i>
          </a>
         </span>
         <span class="td-social-icon-wrap">
          <a href="/chi.koreatimes" target="_blank" title="Instagram">
           <i class="td-icon-font td-icon-instagram">
           </i>
          </a>
         </span>
         <span class="td-social-icon-wrap">
          [linkx]
          
         </span>
        </div>
        <div class="header-search-wrap">
         <div class="td-search-btns-wrap">
          <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="td-header-search-button" role="button">
           <i class="td-icon-search">
           </i>
          </a>
          [linkx]
          
         </div>
         <div aria-labelledby="td-header-search-button" class="td-drop-down-search">
          <form action="/" class="td-search-form" method="get">
           <div class="td-head-form-search-wrap" role="search">
           </div>
          </form>
          <div id="td-aj-search">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <article class="td-post-template-3 post-15917 post type-post status-publish format-standard has-post-thumbnail category-column category-column-sja td-container-wrap" id="post-15917" itemscope="" itemtype="http://schema.org/Article">
    <div class="td-post-header td-container">
     <div class="td-crumb-container">
      <div class="entry-crumbs">
       <span>
        [pkeyx][pkeyx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx]
       </span>
       <i class="td-icon-right td-bread-sep">
       </i>
       <span>
        [ahref]
        
       </span>
       <i class="td-icon-right td-bread-sep">
       </i>
       <span>
        [ahref]
        
       </span>
       <i class="td-icon-right td-bread-sep td-bred-no-url-last">
       </i>
       <span class="td-bred-no-url-last">
        “현미영양찰떡”
       </span>
      </div>
     </div>
     <div class="td-post-header-holder td-image-gradient">
      <[keywordx]>
      </[keywordx]>
      <header class="td-post-title">
       <ul class="td-category">
        <li>[linkx]</li>[area1][mkey1][pkeyx]<li>[area1][mkey1]</li>
       </ul>
       <h1 class="entry-title">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h1>
       <div class="td-module-meta-info">
        <span class="td-post-date">
         <time class="entry-date updated td-module-date" datetime="2016-10-27T15:52:20+00:00">
          2016-10-27
         </time>
        </span>
        <div class="td-post-views">
         <i class="td-icon-views">
         </i>
         <span class="td-nr-views-15917">
          1102
         </span>
        </div>
       </div>
      </header>
     </div>
    </div>
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span8 td-main-content" role="main">
       <div class="td-ss-main-content">
        <div class="td-post-sharing-top">
         <div class="td-post-sharing td-ps-bg td-ps-notext td-post-sharing-style1" id="td_social_sharing_article_top">
          <div class="td-post-sharing-visible">
           [linkx]
           
           [ahref]
           
           [ahref]
           
           [linkx]
           
          </div>
          <div class="td-social-sharing-hidden">
           <ul class="td-pulldown-filter-list">
           </ul>
           [ahref]
           
          </div>
         </div>
        </div>
        <div class="td-post-content tagdiv-type">
         <p>
         </p>
         <h6 style="text-align: center;">
          <noscript>
          </noscript>
          서정아
         </h6>
         <h6 style="text-align: center;">
          시카고 한마음 교회
         </h6>
         <p>
         </p>
         <p>
          떡을 하는 날은 떡메로 두드리는 소리와 어울려 구경하는 아이들의 흥겨움과 어른들의 정겨움이 한데 어우러져 왁자지껄하다. 한쪽에선 모락모락 김이 나는 찹쌀을 손에 물을 묻혀가며 접어주고 또 한쪽에선 장단을 맞추어 떡메로 두드리면 어느덧 따끈따끈한 찰떡이 된다. 콩을 넣어 콩찰떡을 만들기도 하고 팥을 넣어 팥찰시루떡을 만들기도 한다. 이처럼 만든 떡에는 농부의 정성이 가득 들어가고 어머니의 사랑이 들어가고 아이들의 웃음소리가 들어가 최고의 영양식이 되었다.
         </p>
         <p>
         </p>
         <p>
          아이들이 즐겨 부르는 국악 동요 중 콩떡 찰떡 노래가 있다.
         </p>
         <p>
          콩떡 찰떡 콩떡 찰떡 콩으로 만들어 콩떡이 됐네
         </p>
         <p>
          우리 쌀과 콩이 만나 얼씨구나 찰떡 됐네
         </p>
         <p>
          오물오물 쫄깃쫄깃 얼씨구나 맛도 좋아
         </p>
         <p>
         </p>
         <p>
          이 노래를 듣노라면 장단에 맞추어 찐찹쌀을 메쳐 떡을 만들던 옛 어른들이 떠오른다. 요즘은 신명나게 떡메로 두드려 떡을 만드는 일은 주변에서 보기 힘들게 되었지만 감사한 마음과 사랑하는 마음을 담아 직접 떡을 만들어 이웃들과 나눈다면 옛 어른들의 나눔에서 느꼈던 기쁨도 느낄 수 있으리라 생각된다.
         </p>
         <p>
         </p>
         <p>
          찹쌀과 더불어 햇잡곡들과 견과류들을 아름아름 준비해 다양하게 즐기고 맛보는 일은 소소하지만 건강을 유지하는 일에 있어 값진 일이다. 다양한 영양성분들이 가득 들어 있어 현미영양찰떡은 건강밥상에 넉넉하게 어울리는 음식이다.
         </p>
         <p>
         </p>
         <p>
          잘 먹고 배설을 잘 하는 것이 건강에 첫째라는 것에는 이견이 없을 것이다. 통곡류에 풍부한 식이섬유는 충분히 섭취해 주면 장을 빠르게 통과하도록 도우며 장을 통과하며 유해물질 등도 함께 배설되도록 돕는다. 곡류가 변비와 대장암 예방에 좋은 이유이다. 또한 혈당을 천천히 올리는 복합 탄수화물로 당뇨병 예방에도 좋은 식재료이다.
         </p>
         <p>
         </p>
         <p>
          견과류는 자주 섭취할수록 심장병의 위험을 줄여주고 동맥질환 사망위험을 크게 줄여주며 혈중 콜레스테롤 수치를 낮추는 역할을 해 암세포의 증식을 억제하고 당뇨나 호흡기 질환으로 인한 조기 사망 위험을 줄여 준다는 연구 결과들이 있다. 콜레스테롤 수치를 낮추는 불포화 지방산과 섬유질 미네랄 성분들이 함유되어 있어 당뇨로 이어질 수 있는 대사증후군 발생을 낮춰주는 역할을 한다. 견과류와 채소 위주의 식사를 하면 혈압과 공복 혈당을 낮추는데 효과적이다.
         </p>
         <p>
         </p>
         <p>
          오늘 소개하는 현미 영양찰떡은 곡류와 견과류가 가득 들어 식사 대용으로 충분하다.
         </p>
         <p>
         </p>
         <p>
          현미찹쌀 가루에 콩류와 견과류 그리고 고구마를 넣고 두유를 넣어 살짝 버무리 듯 섞은 후에 오븐에 넣어 굽는다. 고구마 대신 단호박을 넣어도 좋고 흑미 가루를 넣어도 좋다. 저녁에 미리 반죽해 적당한 오븐용 그릇에 담아 두었다가 아침에 오븐에 넣어 굽기만 하면 바쁜 아침 준비하는 손길이 보다 수월할 것이라 생각된다.
         </p>
         <p>
         </p>
         <p>
          <noscript>
          </noscript>
         </p>
         <p>
          현미영양찰떡
         </p>
         <p>
         </p>
         <p>
          *재료: 현미찹쌀가루 2컵, 콩1컵(서리태, 완두콩등), 견과류1컵(호두, 호박씨, 해바라기씨등), 고구마 반 컵, 두유 반 컵, 소금 약간, 꿀가루 약간
         </p>
         <p>
         </p>
         <p>
          *만드는 법: 1. 콩은 불리고 고구마는 깍둑썰기한다. 2. 현미찹쌀가루와 불린 콩류, 견과류, 고구마를 넣고 두유로 되직하게 반죽한다. 3. 소금과 꿀가루로 간한다. 4. 오븐팬에 오일스프레이를 뿌리고 반죽을 편다. 5. 350도 오븐에서 40분간 굽는다.
         </p>
         <p>
         </p>
         <p>
          서정아의 힐링건강요리교실
         </p>
         <p>
          문의
          <span class="__cf_email__" data-cfemail="512222283b6361606111363c30383d7f323e3c">
           [email protected]
          </span>
         </p>
         <p>
         </p>
         <p>
         </p>
         <div class="td-g-rec td-g-rec-id-content_inline td_uid_2_5d52692f0a8e3_rand td_block_template_1">
         </div>
        </div>
        <footer>
         <div class="td-post-source-tags">
         </div>
         <div class="td-post-sharing-bottom">
          <div class="td-post-sharing-classic">
           <iframe frameborder="0" src="https://www.facebook.com/plugins/like.php?href=http://chicagokoreatimes.com/%ea%b1%b4%ea%b0%95%ec%9a%94%eb%a6%ac-%ec%b9%bc%eb%9f%bc-%ec%84%9c%ec%a0%95%ec%95%84%ec%9d%98-%ea%b1%b4%ea%b0%95%eb%b0%a5%ec%83%81-%ed%98%84%eb%af%b8%ec%98%81%ec%96%91%ec%b0%b0%eb%96%a1/&amp;layout=button_count&amp;show_faces=false&amp;width=105&amp;action=like&amp;colorscheme=light&amp;height=21" style="border:none; overflow:hidden; width:105px; height:21px; background-color:transparent;">
           </iframe>
          </div>
          <div class="td-post-sharing td-ps-bg td-ps-notext td-post-sharing-style1" id="td_social_sharing_article_bottom">
           <div class="td-post-sharing-visible">
            [ahref]
            
            [ahref]
            
            <a class="td-social-sharing-button td-social-sharing-button-js td-social-network td-social-pinterest" href="/pin/create/button/?url=.chicagokoreatimes.com/%ea%b1%b4%ea%b0%95%ec%9a%94%eb%a6%ac-%ec%b9%bc%eb%9f%bc-%ec%84%9c%ec%a0%95%ec%95%84%ec%9d%98-%ea%b1%b4%ea%b0%95%eb%b0%a5%ec%83%81-%ed%98%84%eb%af%b8%ec%98%81%ec%96%91%ec%b0%b0%eb%96%a1/&amp;media=.ml0kkrxew41d.i.optimole.com/w:auto/h:auto/q:55/.chicagokoreatimes.com/wp-content/uploads/2017/04/SUH.jpg&amp;description=%5B%EC%84%9C%EC%A0%95%EC%95%84%EC%9D%98+%EA%B1%B4%EA%B0%95%EB%B0%A5%EC%83%81%5D++%E2%80%9C%ED%98%84%EB%AF%B8%EC%98%81%EC%96%91%EC%B0%B0%EB%96%A1%E2%80%9D">
             <div class="td-social-but-icon">
              <i class="td-icon-pinterest">
              </i>
             </div>
             <div class="td-social-but-text">
              [ahref][area1][mkey1][ahref]<li>[linkx]</li>[area1][keywordx]
             </div>
            </a>
            [linkx]
            
           </div>
           <div class="td-social-sharing-hidden">
            <ul class="td-pulldown-filter-list">
            </ul>
            [linkx]
            
           </div>
          </div>
         </div>
         <div class="td-block-row td-post-next-prev">
          <div class="td-block-span6 td-post-prev-post">
           <div class="td-post-next-prev-content">
            <span>
             Previous article
            </span>
            [ahref]
            
           </div>
          </div>
          <div class="td-next-prev-separator">
          </div>
          <div class="td-block-span6 td-post-next-post">
           <div class="td-post-next-prev-content">
            <span>
             Next article
            </span>
            <a href="/%ec%b9%bc%eb%9f%bc-%eb%aa%a8%eb%93%a0-%ed%95%84%ec%9a%94%eb%a5%bc-%ec%b1%84%ec%9b%8c-%ec%a3%bc%ec%8b%9c%eb%8a%94-%ec%b6%95%eb%b3%b5/">
             [칼럼] 모든 필요를 채워 주시는 축복
            </a>
           </div>
          </div>
         </div>
         <div class="td-author-name vcard author" style="display: none">
          <span class="fn">
           [linkx]
           
          </span>
         </div>
         <span class="td-page-meta" itemprop="author" itemscope="" itemtype="https://schema.org/Person">
          <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
         </span>
         <meta content="2016-10-27T15:52:20+00:00" itemprop="datePublished"/>
         <meta content="2017-04-18T17:11:38-05:00" itemprop="dateModified"/>
         <meta itemid="http://chicagokoreatimes.com/%ea%b1%b4%ea%b0%95%ec%9a%94%eb%a6%ac-%ec%b9%bc%eb%9f%bc-%ec%84%9c%ec%a0%95%ec%95%84%ec%9d%98-%ea%b1%b4%ea%b0%95%eb%b0%a5%ec%83%81-%ed%98%84%eb%af%b8%ec%98%81%ec%96%91%ec%b0%b0%eb%96%a1/" itemprop="mainEntityOfPage" itemscope="" itemtype="https://schema.org/WebPage">
          <span class="td-page-meta" itemprop="publisher" itemscope="" itemtype="https://schema.org/Organization">
           <span class="td-page-meta" itemprop="logo" itemscope="" itemtype="https://schema.org/ImageObject">
            <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
           </span>
           <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
          </span>
          <meta content='[서정아의 건강밥상]  "현미영양찰떡"' itemprop="headline "/>
          <span class="td-page-meta" itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
           <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
           <meta content="2048" itemprop="width"/>
           <meta content="1661" itemprop="height"/>
          </span>
         </meta>
        </footer>
        <div class="td_block_wrap td_block_related_posts td_uid_3_5d52692f0babb_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_3_5d52692f0babb">
         <h4 class="td-related-title td-block-title">
          [ahref]
          
          [ahref]
          
         </h4>
         <div class="td_block_inner" id="td_uid_3_5d52692f0babb">
          <div class="td-related-row">
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td-meta-info-hide td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               <a class="td-image-wrap" href="/%ec%a1%b0%ec%9d%b4-%ea%b9%80%ec%9d%98-%ec%98%81%ed%99%94%ec%84%b8%ec%83%81-%ec%98%9b%eb%82%a0-%ec%98%9b%ec%a0%81-%ed%97%90%eb%a6%ac%ec%9a%b0%eb%93%9c%ec%97%90%ec%84%9conce-upon-a-time%c2%b7%c2%b7/" rel="bookmark" title="[조이 김의 영화세상] 옛날 옛적 헐리우드에서(Once Upon a Time···in Hollywood 2019)">
                <noscript>
                </noscript>
               </a>
              </div>
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td-meta-info-hide td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               <a class="td-image-wrap" href="/%ec%b9%bc%eb%9f%bc-%ec%a3%bd%ec%9d%80-%eb%8f%88%ea%b3%bc-%ec%82%b4%ec%95%84%ec%9e%88%eb%8a%94-%eb%8f%88/" rel="bookmark" title="[칼럼] 죽은 돈과 살아있는 돈">
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][area1][mkey1][ahref][linkx][area1][mkey1][ahref][ahref][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>[area1][keywordx]
               </a>
              </div>
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td-meta-info-hide td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [ahref]
               
              </div>
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="td-next-prev-wrap">
          <a class="td-ajax-prev-page ajax-page-disabled" data-td_block_id="td_uid_3_5d52692f0babb" href="#" id="prev-page-td_uid_3_5d52692f0babb">
           <i class="td-icon-font td-icon-menu-left">
           </i>
          </a>
          <a class="td-ajax-next-page" data-td_block_id="td_uid_3_5d52692f0babb" href="#" id="next-page-td_uid_3_5d52692f0babb">
           <i class="td-icon-font td-icon-menu-right">
           </i>
          </a>
         </div>
        </div>
       </div>
      </div>
      <div class="td-pb-span4 td-main-sidebar" role="complementary">
       <div class="td-ss-main-sidebar">
        <aside class="td_block_template_1 widget widget_media_image">
         <a href="/%EC%A0%84%EC%9E%90%EC%8B%A0%EB%AC%B8%EB%B3%B4%EA%B8%B0/">
          <noscript>
          </noscript>
         </a>
        </aside>
        <div class="td_block_wrap td_block_weather td_block_widget td_uid_6_5d52692f10cb5_rand td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_6_5d52692f10cb5">
         <div class="td-block-title-wrap">
         </div>
         <div class="td-weather-wrap td_block_inner td-column-1" id="td_uid_6_5d52692f10cb5">
          <div class="td-weather-header">
           <div class="td-weather-city">
            Glenview
           </div>
           <div class="td-weather-condition">
            moderate rain
           </div>
           <i class="td-location-icon td-icons-location" data-block-uid="td_uid_6_5d52692f10cb5">
           </i>
          </div>
          <div class="td-weather-set-location">
           <form action="#" class="td-manual-location-form" data-block-uid="td_uid_6_5d52692f10cb5">
            <label>
             enter location
            </label>
           </form>
          </div>
          <div class="td-weather-temperature">
           <div class="td-weather-temp-wrap">
            <div class="td-weather-animated-icon">
             <span class="td_animation_sprite-27-100-80-0-0-1 rain-n td-w-today-icon" data-td-block-uid="td_uid_6_5d52692f10cb5">
             </span>
            </div>
            <div class="td-weather-now" data-block-uid="td_uid_6_5d52692f10cb5">
             <span class="td-big-degrees">
              70.2
             </span>
             <span class="td-circle">
              °
             </span>
             <span class="td-weather-unit">
              F
             </span>
            </div>
            <div class="td-weather-lo-hi">
             <div class="td-weather-degrees-wrap">
              <i class="td-up-icon td-icons-arrows-up">
              </i>
              <span class="td-small-degrees td-w-high-temp">
               72
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
             <div class="td-weather-degrees-wrap">
              <i class="td-down-icon td-icons-arrows-down">
              </i>
              <span class="td-small-degrees td-w-low-temp">
               68
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
            </div>
           </div>
          </div>
          <div class="td-weather-info-wrap">
           <div class="td-weather-information">
            <div class="td-weather-section-1">
             <i class="td-icons-drop">
             </i>
             <span class="td-weather-parameter td-w-today-humidity">
              94 %
             </span>
            </div>
            <div class="td-weather-section-2">
             <li>[pkeyx]</li><li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]<li>[pkeyx]</li>
            </div>
            <div class="td-weather-section-3">
             <i class="td-icons-cloud">
             </i>
             <span class="td-weather-parameter td-w-today-clouds">
              90 %
             </span>
            </div>
           </div>
           <div class="td-weather-week">
            <div class="td-weather-days">
             <div class="td-day-0">
              Tue
             </div>
             <div class="td-day-degrees">
              <span class="td-degrees-0">
               83
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
            </div>
            <div class="td-weather-days">
             <div class="td-day-1">
              Wed
             </div>
             <div class="td-day-degrees">
              <span class="td-degrees-1">
               82
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
            </div>
            <div class="td-weather-days">
             <div class="td-day-2">
              Thu
             </div>
             <div class="td-day-degrees">
              <span class="td-degrees-2">
               77
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
            </div>
            <div class="td-weather-days">
             <div class="td-day-3">
              Fri<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
             </div>
             <div class="td-day-degrees">
              <span class="td-degrees-3">
               84
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
            </div>
            <div class="td-weather-days">
             <div class="td-day-4">
              Sat
             </div>
             <div class="td-day-degrees">
              <span class="td-degrees-4">
               77
              </span>
              <span class="td-circle">
               °
              </span>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="td_block_wrap td_block_7 td_block_widget td_uid_7_5d52692f10f81_rand td-pb-border-top td_block_template_1 td-column-1 td_block_padding" data-td-block-uid="td_uid_7_5d52692f10f81">
         <div class="td-block-title-wrap">
          <h4 class="block-title td-block-title">
           <span class="td-pulldown-size">
            최신 뉴스
           </span>
          </h4>
         </div>
         <div class="td_block_inner" id="td_uid_7_5d52692f10f81">
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             <a class="td-image-wrap" href="/%ec%a0%95%eb%b6%80%ec%97%90-%ec%9e%ac%ec%a0%95%eb%b6%80%eb%8b%b4%eb%90%98%eb%a9%b4-%ec%98%81%ec%a3%bc%ea%b6%8c-%eb%b0%9c%ea%b8%89-%eb%b6%88%ed%97%88/" rel="bookmark" title="“정부에 재정부담되면 영주권 발급 불허”">
              <noscript>
              </noscript>
             </a>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [linkx]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             <a class="td-image-wrap" href="/%ec%83%89%ec%86%8c%ed%8f%b0%ea%b3%bc-%ed%94%bc%ec%95%84%eb%85%b8%ec%9d%98-%eb%a7%8c%eb%82%a8/" rel="bookmark" title="색소폰과 피아노의 만남">
              <noscript>
              </noscript>
             </a>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             <a class="td-image-wrap" href="/%eb%af%b8-%ea%b2%bd%ec%a0%9c%ed%95%99%ec%9e%90-70-9%ec%9b%94-%ea%b8%88%eb%a6%ac-%ec%9d%b8%ed%95%98-%ec%a0%84%eb%a7%9d/" rel="bookmark" title="미 경제학자 70% “9월 금리 인하 전망”">
              <noscript>
              </noscript>
             </a>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="td_block_wrap td_block_7 td_block_widget td_uid_8_5d52692f1fec5_rand td-pb-border-top td_block_template_1 td-column-1 td_block_padding" data-td-block-uid="td_uid_8_5d52692f1fec5">
         <div class="td-block-title-wrap">
          <h4 class="block-title td-block-title">
           <span class="td-pulldown-size">
            많이본 기사
           </span>
          </h4>
         </div>
         <div class="td_block_inner" id="td_uid_8_5d52692f1fec5">
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [linkx]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             <li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li><li>[area1][keywordx]</li>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             <a class="td-image-wrap" href="/%ea%b3%b5%ec%a0%81%eb%b6%80%ec%a1%b0-%ec%88%98%ed%98%9c-%ec%9d%b4%ec%9c%a0-%ec%98%81%ec%a3%bc%ea%b6%8c-%ea%b1%b0%eb%b6%80%ed%95%9c%ec%9d%b8-774%eb%aa%85/" rel="bookmark" title="공적부조 수혜 이유 ‘영주권 거부’한인 774명">
              <noscript>
              </noscript>
             </a>
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [ahref]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="td_block_wrap td_block_7 td_block_widget td_uid_9_5d52692f7fd87_rand td-pb-border-top td_block_template_1 td-column-1 td_block_padding" data-td-block-uid="td_uid_9_5d52692f7fd87">
         <div class="td-block-title-wrap">
          <h4 class="block-title td-block-title">
           <span class="td-pulldown-size">
            오피니언
           </span>
          </h4>
         </div>
         <div class="td_block_inner" id="td_uid_9_5d52692f7fd87">
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [ahref]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [linkx]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [ahref]
             
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
            <div class="td-module-thumb">
             [area1][mkey1][linkx]<li>[pkeyx]</li>[linkx]
            </div>
            <div class="item-details">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-module-meta-info">
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </article>
   <div class="td-footer-wrapper td-footer-container td-container-wrap">
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span12">
      </div>
     </div>
     <div class="td-pb-row">
      <div class="td-pb-span4">
       <div class="td_block_wrap td_block_9 td_block_widget td_uid_11_5d52692f8975d_rand td-pb-border-top td_block_template_1 td-column-1 td_block_padding td_block_bot_line" data-td-block-uid="td_uid_11_5d52692f8975d">
        <div class="td-block-title-wrap">
         <h4 class="block-title td-block-title">
          <span class="td-pulldown-size">
           최신뉴스
          </span>
         </h4>
        </div>
        <div class="td_block_inner" id="td_uid_11_5d52692f8975d">
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_8 td_module_wrap td-meta-info-hide">
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="td-pb-span4">
       <div class="td_block_wrap td_block_7 td_block_widget td_uid_12_5d52692f9877c_rand td-pb-border-top td_block_template_1 td-column-1 td_block_padding" data-td-block-uid="td_uid_12_5d52692f9877c">
        <div class="td-block-title-wrap">
         <h4 class="block-title td-block-title">
          <span class="td-pulldown-size">
           종교
          </span>
         </h4>
        </div>
        <div class="td_block_inner" id="td_uid_12_5d52692f9877c">
         <div class="td-block-span12">
          <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
           <div class="td-module-thumb">
            [ahref]
            
           </div>
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
           <div class="td-module-thumb">
            <a class="td-image-wrap" href="/%ec%95%84%ec%8b%9c%ec%95%88-%ec%bb%a4%eb%ae%a4%eb%8b%88%ed%8b%b0-%ea%b3%b5%eb%8f%99-%eb%af%b8%ec%82%ac%c2%b7%c2%b7%c2%b7600%ec%97%ac%eb%aa%85-%ec%b0%b8%ec%84%9d/" rel="bookmark" title="아시안 커뮤니티 공동 미사···600여명 참석">
             <noscript>
             </noscript>
            </a>
           </div>
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
           <div class="td-module-thumb">
            [ahref]
            
           </div>
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
         <div class="td-block-span12">
          <div class="td_module_6 td_module_wrap td-animation-stack td-meta-info-hide">
           <div class="td-module-thumb">
            [linkx]
            
           </div>
           <div class="item-details">
            <h3 class="entry-title td-module-title">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="td-module-meta-info">
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="td-pb-span4">
       <aside class="td_block_template_1 widget widget_media_image">
        <h4 class="block-title">
         <span>
          광고
         </span>
        </h4>
        [ahref]
        
       </aside>
      </div>
     </div>
    </div>
    <div class="td-footer-bottom-full">
     <div class="td-container">
      [linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][linkx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
     </div>
    </div>
   </div>
   <div class="td-sub-footer-container td-container-wrap">
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span td-sub-footer-menu">
       <div class="menu-new_topmenu-container">
        <ul class="td-subfooter-menu" id="menu-new_topmenu-1">
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-first td-menu-item td-normal-menu menu-item-19630">
          [linkx]
          
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom td-menu-item td-normal-menu menu-item-19438">
          [linkx]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="td-pb-span td-sub-footer-copy">
       © 2018 chicagokoreatimes.com t. 847-626-0388 f. 847-626-0350
615 Milwaukee Ave. Suite 12, Glenview, IL 60025
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="protect_contents-overlay">
  </div>
  <div class="protect_alert">
   <span class="protect_alert_word" style="color:black;">
    Don`t copy text!
   </span>
  </div>
  <div class="td-container">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0068
  </b>
 </body>
</html>
|<---