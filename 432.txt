--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="#000000" name="theme-color">
   <meta content="#000000" name="msapplication-navbutton-color"/>
   <meta content="black-translucent" name="apple-mobile-web-app-status-bar-style"/>
   <title>
    [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="공장공장" name="application-name">
    <meta content="공장공장" name="msapplication-tooltip">
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" id="meta_og_title" property="og:title"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="https://cdn.imweb.me/upload/S2017041658f2383add757/5b38e4457d01b.png" id="meta_og_image" property="og:image"/>
     <meta content="1200" property="og:image:width"/>
     <meta content="627" property="og:image:height"/>
     <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
     <meta content="https://cdn.imweb.me/thumbnail/20180307/5a9eacfe8b979.png" name="msapplication-TileImage"/>
     <meta content="https://cdn.imweb.me/thumbnail/20180307/5a9eacffd5fb6.png" name="msapplication-square70x70logo"/>
     <meta content="https://cdn.imweb.me/thumbnail/20180307/5a9ead000e1a7.png" name="msapplication-square150x150logo"/>
     <meta content="https://cdn.imweb.me/thumbnail/20180307/5a9ead003bdc7.png" name="msapplication-square310x150logo"/>
     <meta content="https://cdn.imweb.me/thumbnail/20180307/5a9ead00716ab.png" name="msapplication-square310x310logo"/>
     <meta content="website" property="og:type"/>
     <meta content="width=device-width,initial-scale=1.0,minimum-scale=0,maximum-scale=10,user-scalable=yes" name="viewport"/>
     <meta content="cejAPz4WLgDSZvKmuox2798Uy3Pfi9xUAQNYN1hyhnw" name="google-site-verification">
      <noscript>
      </noscript>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="page_ready doz_sys _body_menu_m2017041658f2383aec842 mobile-nav-on mobile_nav_dep1 new_header_overlay page new_header_site" id="doz_body" style=";">
  <div class="notification-canvas-container" id="site_alarm_slidemenu_container">
   <div class="notification-canvas-backdrop" id="site_alarm_slidemenu_backdrop" style="display: none">
    [area1][keywordx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
   </div>
   <div class="notification-canvas alarm-pane alarm_slide" id="site_alarm_slidemenu" style="">
    <div class="tse-scrollable _scroll_wrap" id="site_alarm_menu_tap_wrap">
     [pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx]
    </div>
    <div class="site-alarm-body">
    </div>
   </div>
  </div>
  <div class="pc_slide_menu_container" id="pc_slide_menu_wrap" style="width: 0; visibility: hidden; display: none">
   <div class="pc_slide_menu slide_menu _slide_menu" id="pc_slide_menu">
    <button class="pc-navbar-toggle" onclick="PC_SLIDE_MENU.slideNavToggle();" type="button">
     <i class="btm bt-times">
     </i>
    </button>
    <div class="pc_slide_menu_logo">
     <div class="pc_slide_menu_title">
      <a href="/">
       N
      </a>
     </div>
    </div>
    <ul class="nav navbar-nav">
     <h1>
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h1>
     <div class="viewport-nav pc _menu_wrap" style="position:relative">
      <li class="depth-01" style="">
       <a class="_fade_link" data-has_child="Y" data-is_folder_menu="Y" data-url="about" href="/about">
        <span class="plain_name" data-hover="">
         COMPANY
        </span>
       </a>
      </li>
      <li class="depth-01" style="">
       [ahref]
       
      </li>
      <li class="depth-01" style="">
       <a class="_fade_link" data-has_child="Y" data-is_folder_menu="N" data-url="project" href="/project">
        <span class="plain_name" data-hover="">
         PROJECT
        </span>
       </a>
      </li>
      <li class="depth-01" style="">
       <a class="_fade_link" data-has_child="Y" data-is_folder_menu="Y" data-url="39" href="/39">
        [linkx][linkx][linkx][area1][keywordx][linkx][area1][mkey1][area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][ahref][ahref]
       </a>
      </li>
      <li class="depth-01" style="">
       [linkx]
       
      </li>
      <li class="depth-01" style="">
       [linkx]
       
      </li>
      <li class="depth-01" style="">
       <a class="_fade_link" data-has_child="N" data-is_folder_menu="N" data-url="contact" href="/contact">
        <span class="plain_name" data-hover="">
         CONTACT US
        </span>
       </a>
      </li>
     </div>
    </ul>
   </div>
  </div>
  <div class="mobile_slide_menu_container" id="mobile_slide_menu_wrap">
   <div class="mobile_slide_menu slide_menu _slide_menu" id="mobile_slide_menu">
    <ul class="nav navbar-nav navbar-right">
     <div class="viewport-nav mobile _menu_wrap" style="position:relative">
     </div>
    </ul>
   </div>
   <button class="navbar-toggle close slide-close" onclick="MOBILE_SLIDE_MENU.slideNavToggle();" type="button">
    <i class="btm bt-times">
    </i>
   </button>
  </div>
  <ul class="dropdown-menu animation-dock member_profile" id="member_profile">
   <li class="dropdown-profile text-center">
    [ahref]
    
    <span class="profile-info">
     <div onclick="SITE_MEMBER.editProfile()">
     </div>
     <div class="sm-padding no-padding-bottom">
     </div>
    </span>
   </li>
   <li class="profile-footer btn-group-justified">
    [linkx]
    
    <a class="btn btn-flat right" href="/logout.cm?back_url=Lw%3D%3D">
     로그아웃
    </a>
   </li>
  </ul>
  <header id="doz_header_wrap">
   <div data-newheader="Y" id="doz_header">
    <div class="new_org_header _new_org_header">
     <div class="" id="inline_header_normal" style="min-height: 30px;">
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s2017101659e4ad0779923">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:rgba(255, 255, 255, 0); -ms-filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff);	zoom: 1; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s2017101659e4ad0779923">
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:891px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad0771bc1">
            <div class="_widget_data" data-widget-type="inline_logo">
             <div class="widget inline_widget logo text_inline" id="logo_w2017101659e4ad0771bc1">
              <div class="img_box _img_box" style="position: relative;">
               [ahref]
               
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad07757fe">
            <div class="_widget_data" data-widget-type="inline_menu">
             <ul class="nav navbar-nav _inline_menu_container" style="visibility: hidden">
              <div class="viewport-nav desktop _main_menu">
               <li class="dropdown _show_m2017041658f2383aeca62" data-code="m2017041658f2383aeca62" id="dropdown_m2017041658f2383aeca62" style="">
                [ahref]
                
                <ul class="dropdown-menu">
                 <li class="dropdown-submenu _show_m20170518591d3c506a458" style="">
                  [linkx]
                  
                 </li>
                 <li class="dropdown-submenu _show_m201801125a587c4948690" style="">
                  [ahref]
                  
                 </li>
                 <li class="dropdown-submenu _show_m20170516591a767eced22" style="">
                  [linkx]
                  
                 </li>
                 <li class="dropdown-submenu _show_m201806065b1798c1546b9" style="">
                  <a class="_txt_m201806065b1798c1546b9 _fade_link" data-url="thinking" href="/thinking" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Thinking
                   </span>
                  </a>
                 </li>
                 <li class="dropdown-submenu _show_m201807015b38d02ce62a4" style="">
                  <a class="_txt_m201807015b38d02ce62a4 _fade_link" data-url="culture" href="/culture" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Culture
                   </span>
                  </a>
                 </li>
                 <li class="dropdown-submenu _show_m201805155afa74e21ce28" style="">
                  [ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][pkeyx][pkeyx][area1][keywordx][linkx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][pkeyx][linkx][area1][mkey1][area1][mkey1][linkx][pkeyx]
                 </li>
                 <li class="dropdown-submenu _show_m2017093059cfa027db690" style="">
                  [ahref]
                  
                  <ul class="dropdown-menu">
                   <li class="_show_m201801125a588f042b2ed dropdown-submenu" style="">
                    [ahref]
                    
                   </li>
                  </ul>
                 </li>
                 <li class="dropdown-submenu _show_m201803165aab20a63e92d" style="">
                  [ahref]
                  
                  <ul class="dropdown-menu">
                   <li class="_show_m201803135aa7960304457 dropdown-submenu" style="">
                    <a class="_txt_m201803135aa7960304457 _fade_link" data-url="identity" href="/identity" tabindex="-1">
                     <span class="plain_name" data-hover="">
                      Corporate Identity
                     </span>
                    </a>
                   </li>
                   <li class="_show_m2017100559d4fb31d1512 dropdown-submenu" style="">
                    <a class="_txt_m2017100559d4fb31d1512 _fade_link" data-url="Certificate" href="/Certificate" tabindex="-1">
                     <span class="plain_name" data-hover="">
                      Certificate
                     </span>
                    </a>
                   </li>
                   <li class="_show_m201801225a65b10484890 dropdown-submenu" style="">
                    <a class="_txt_m201801225a65b10484890 _fade_link" data-url="Location" href="/Location" tabindex="-1">
                     <span class="plain_name" data-hover="">
                      Location
                     </span>
                    </a>
                   </li>
                  </ul>
                 </li>
                </ul>
               </li>
               <li class="dropdown _show_m2017041658f2383aec7b3" data-code="m2017041658f2383aec7b3" id="dropdown_m2017041658f2383aec7b3" style="">
                [linkx]
                
                <ul class="dropdown-menu">
                 <li class="dropdown-submenu _show_m201712055a267c4b5b25d" style="">
                  [linkx]
                  
                  <ul class="dropdown-menu">
                   <li class="_show_m2017090959b2dc35ea7cb dropdown-submenu" style="">
                    [linkx]
                    
                   </li>
                   <li class="_show_m201712185a36a6a0cf686 dropdown-submenu" style="">
                    <a class="_txt_m201712185a36a6a0cf686 _fade_link" data-url="hitch" href="r" tabindex="-1" target="_blank">
                     <span class="plain_name" data-hover="">
                      히치하이킹 페스티벌
                     </span>
                    </a>
                   </li>
                  </ul>
                 </li>
                 <li class="dropdown-submenu _show_m201712055a267c5e43ec0" style="">
                  <a class="_txt_m201712055a267c5e43ec0 _fade_link" data-url="61" href="m" tabindex="-1" target="_blank">
                   <span class="plain_name" data-hover="">
                    Village
                   </span>
                  </a>
                  <ul class="dropdown-menu">
                   <li class="_show_m201712055a267b34dda4b dropdown-submenu" style="">
                    [linkx]
                    
                   </li>
                   <li class="_show_m2017090959b2dc53465fb dropdown-submenu" style="">
                    [linkx]
                    
                   </li>
                   <li class="_show_m201803165aabbc2a80441 dropdown-submenu" style="">
                    [linkx]
                    
                    <ul class="dropdown-menu">
                     <li class="_show_m201712095a2b3df5b1ce3 dropdown-submenu" style="">
                      <a class="_txt_m201712095a2b3df5b1ce3 _fade_link" data-url="fishnchips-tasting" href="/fishnchips-tasting" tabindex="-1">
                       <span class="plain_name" data-hover="">
                        제2막 첫 번째
                       </span>
                      </a>
                     </li>
                     <li class="_show_m201801235a66922631119 dropdown-submenu" style="">
                      [linkx]
                      
                     </li>
                    </ul>
                   </li>
                  </ul>
                 </li>
                 <li class="dropdown-submenu _show_m201905155cdafacd70c09" style="">
                  <a class="_txt_m201905155cdafacd70c09 _fade_link" data-url="93" href="/93" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Magazine
                   </span>
                  </a>
                  <ul class="dropdown-menu">
                   <li class="_show_m201905155cdafaf19e156 dropdown-submenu" style="">
                    [linkx]
                    
                   </li>
                   <li class="_show_m2019072050947d7e52fcd dropdown-submenu" style="">
                    <a class="_txt_m2019072050947d7e52fcd _fade_link" data-url="112" href="m" tabindex="-1" target="_blank">
                     <span class="plain_name" data-hover="">
                      밥은 먹고 다니냐
                     </span>
                    </a>
                   </li>
                  </ul>
                 </li>
                 <li class="dropdown-submenu _show_m201804235addee6674bb5" style="">
                  <a class="_txt_m201804235addee6674bb5 _fade_link" data-url="79" href="p" tabindex="-1" target="_blank">
                   <span class="plain_name" data-hover="">
                    Education
                   </span>
                  </a>
                  <ul class="dropdown-menu">
                   <li class="_show_m20190704ac01164b1105a dropdown-submenu" style="">
                    <a class="_txt_m20190704ac01164b1105a _fade_link" data-url="111" href="m" tabindex="-1" target="_blank">
                     <span class="plain_name" data-hover="">
                      실험주의자
                     </span>
                    </a>
                   </li>
                  </ul>
                 </li>
                </ul>
               </li>
               <li class="dropdown _show_m2017070259584b349d1a8" data-code="m2017070259584b349d1a8" id="dropdown_m2017070259584b349d1a8" style="">
                <a class="fixed_transform dropdown-toggle disabled _header_dropdown _fade_link" data-toggle="dropdown" data-url="project" href="/project">
                 <span class="_txt_m2017070259584b349d1a8 plain_name" data-hover="">
                  PROJECT
                 </span>
                </a>
                <ul class="dropdown-menu">
                </ul>
               </li>
               <li class="dropdown _show_m2017090959b2e4590f520" data-code="m2017090959b2e4590f520" id="dropdown_m2017090959b2e4590f520" style="">
                [linkx]
                
                <ul class="dropdown-menu">
                 <li class="dropdown-submenu _show_m201806235b2d16e6f10d4" style="">
                  [ahref]
                  
                 </li>
                 <li class="dropdown-submenu _show_m201901285c4e261d2fed3" style="">
                  <a class="_txt_m201901285c4e261d2fed3 _fade_link" data-url="recruit4" href="/recruit4" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Recruit 4
                   </span>
                  </a>
                 </li>
                 <li class="dropdown-submenu _show_m201805085af15d5aa4c09" style="">
                  <a class="_txt_m201805085af15d5aa4c09 _fade_link" data-url="recruit3" href="/recruit3" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Recruit 3
                   </span>
                  </a>
                 </li>
                 <li class="dropdown-submenu _show_m2017100159d0d6a2cf28b" style="">
                  <a class="_txt_m2017100159d0d6a2cf28b _fade_link" data-url="recruit2" href="/recruit2" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Recruit 2
                   </span>
                  </a>
                 </li>
                 <li class="dropdown-submenu _show_m2017071059633e8e07ed6" style="">
                  <a class="_txt_m2017071059633e8e07ed6 _fade_link" data-url="recruit" href="/recruit" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Recruit 1
                   </span>
                  </a>
                 </li>
                </ul>
               </li>
               <li class="dropdown _show_m201803145aa92d4d326fe" data-code="m201803145aa92d4d326fe" id="dropdown_m201803145aa92d4d326fe" style="">
                <a class="fixed_transform dropdown-toggle disabled _header_dropdown _fade_link" data-toggle="dropdown" data-url="contents" href="/contents">
                 <span class="_txt_m201803145aa92d4d326fe plain_name" data-hover="">
                  CONTENTS
                 </span>
                </a>
                <ul class="dropdown-menu">
                 <li class="dropdown-submenu _show_m20170516591a7656a3153" style="">
                  [linkx]
                  
                 </li>
                 <li class="dropdown-submenu _show_m201903305c9f56d415f1c" style="">
                  [ahref]
                  
                 </li>
                 <li class="dropdown-submenu _show_m2017041658f2383aec8c9" style="">
                  [ahref]
                  
                 </li>
                 <li class="dropdown-submenu _show_m201712195a38e45d19c2c" style="">
                  <a class="_txt_m201712195a38e45d19c2c _fade_link" data-url="Diary" href="/Diary" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Diary
                   </span>
                  </a>
                 </li>
                 <li class="dropdown-submenu _show_m2017102259eb986eb24c5" style="">
                  [linkx]
                  
                 </li>
                 <li class="dropdown-submenu _show_m2017091059b4bd846256a" style="">
                  <a class="_txt_m2017091059b4bd846256a _fade_link" data-url="notice" href="/notice" tabindex="-1">
                   <span class="plain_name" data-hover="">
                    Notice
                   </span>
                  </a>
                 </li>
                </ul>
               </li>
               <li class="dropdown _show_m20170516591a769228fb6" data-code="m20170516591a769228fb6" id="dropdown_m20170516591a769228fb6" style="">
                [ahref]
                
               </li>
               <li class="dropdown _show_m2017052159215ed25973c" data-code="m2017052159215ed25973c" id="dropdown_m2017052159215ed25973c" style="">
                <a class="fixed_transform dropdown-toggle disabled _header_dropdown _fade_link" data-toggle="dropdown" data-url="contact" href="/contact">
                 <span class="_txt_m2017052159215ed25973c plain_name" data-hover="">
                  CONTACT US
                 </span>
                </a>
               </li>
              </div>
             </ul>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:359px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad0777ffb">
            <div class="_widget_data" data-widget-type="inline_login_btn">
             <div class="widget inline_widget login_btn button button_text txt_l text-xx-small">
              <div>
               <div class="inline-blocked login_btn_item">
                [linkx]
                
               </div>
               <div class="inline-blocked login_btn_item">
                [ahref]
                
               </div>
               <div class="inline-blocked login_btn_item badge_class">
                [linkx]
                
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad0774390">
            <div class="_widget_data" data-widget-type="inline_search_btn">
             <div class="widget inline_widget search_btn" id="w2017101659e4ad0774390">
              <div class="search_type fixed_transform search_btn_type01">
               <div class="inline-blocked holder">
                <form action="/search" class="icon_on" id="inline_s_form_w2017101659e4ad0774390" method="get">
                 [ahref]
                 
                </form>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="first_scroll_fixed" id="inline_header_mobile" style="min-height: 30px;">
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s2017101659e4ad0781e56">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:rgba(255, 255, 255, 0); -ms-filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#00ffffff,endColorstr=#00ffffff);	zoom: 1; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s2017101659e4ad0781e56">
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:92px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad077e1a9">
            <div class="_widget_data" data-widget-type="inline_menu_btn">
             <div class="widget inline_widget icon_type_menu st00" id="w2017101659e4ad077e1a9">
              <a class="_no_hover fixed_transform inline-blocked" href=";" onclick="MOBILE_SLIDE_MENU.slideNavToggle($(this))">
               <span class="holder icon_code btm bt-bars" id="inline_menu_alarm_badge">
               </span>
               <span class="text">
                MENU
               </span>
              </a>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-center" data-col-group="center" data-type="col-group">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad077c6f0">
            <div class="_widget_data" data-widget-type="inline_logo">
             <div class="widget inline_widget logo text_inline" id="logo_w2017101659e4ad077c6f0">
              <div class="img_box _img_box" style="position: relative;">
               <a class="" href="/">
               </a>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:92px;">
          <div class="inline-col" data-type="grid">
           <[keywordx]>
           </[keywordx]>
          </div>
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2017101659e4ad0780991">
            <div class="_widget_data" data-widget-type="inline_search_btn">
             <div class="widget inline_widget search_btn" id="w2017101659e4ad0780991">
              <div class="search_type fixed_transform search_btn_type01">
               <div class="inline-blocked holder">
                <form action="/search" class="icon_on" id="inline_s_form_w2017101659e4ad0780991" method="get">
                 <a class="fixed_transform inline-blocked" href="#" onclick="SITE_SEARCH.openSearch(search_option_data_w2017101659e4ad0780991);">
                  <i class="simple icon-magnifier">
                  </i>
                 </a>
                </form>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="inline-section-wrap" data-type="carousel_menu" id="mobile_carousel_menu">
       <div class="inline-inside _inline-inside">
        <div class="mobile_carousel_nav fixed_transform _mobile_nav" id="mobile_carousel_nav">
         <div class="mobile_nav_depth depth_0 depth_first st05 _mobile_navigation_menu" id="mobile_carousel_menu_0">
          <div class="nav-item _item" data-url="about">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="brands">
           [linkx]
           
          </div>
          <div class="nav-item _item" data-url="project">
           [linkx]
           
          </div>
          <div class="nav-item _item" data-url="39">
           <a class="_fade_link" href="/39" style="">
            <span class="plain_name" data-hover="">
             RECRUIT
            </span>
           </a>
          </div>
          <div class="nav-item _item" data-url="contents">
           <a class="_fade_link" href="/contents" style="">
            <span class="plain_name" data-hover="">
             CONTENTS
            </span>
           </a>
          </div>
          <div class="nav-item _item" data-url="store">
           <a class="_fade_link" href="/store" style="">
            <span class="plain_name" data-hover="">
             STORE<li>[area1][keywordx]</li><li>[area1][keywordx]</li><li>[area1][keywordx]</li><li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
            </span>
           </a>
          </div>
          <div class="nav-item _item" data-url="contact">
           [linkx]
           
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </header>
  <div class="section_wrap visual_section pc_section section_first _section_first mobile_section_first" doz_category="visual" doz_footer_repeat="N" doz_fullpage="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_type="section" id="s2017041658f2383c2429e" style="">
   <div class="visual_section _visual_section full_screen_show" id="visual_s2017041658f2383c2429e">
    <div class="owl-carousel owl-theme _slide">
     <div class="item holder section" style="background-image:url(https://cdn.imweb.me/thumbnail/20170813/598fc4358d57c.jpg); background-color:#212121; background-repeat : no-repeat; background-size : cover; background-position : 50% 50%;">
      <div class="op _op" style="position: relative;z-index: 11; ">
       <div class="header-content _visual_height m_ratio">
        <div class="text _text_wrap">
         <div class="text-wrap _text fr-view">
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <p style="text-align: center;">
           <br/>
          </p>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="item holder section" style="background-image:url(https://cdn.imweb.me/thumbnail/20170930/59cef7cb2aa5e.jpg); background-color:#dddddd; background-repeat : no-repeat; background-size : cover; background-position : 50% 50%;">
      <div class="op _op" style="position: relative;z-index: 11; ">
       <div class="header-content _visual_height m_ratio">
        <div class="text _text_wrap">
         <div class="text-wrap _text fr-view">
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="item holder section" style="background-image:url(https://cdn.imweb.me/thumbnail/20170813/598fc43592659.jpg); background-color:#212121; background-repeat : no-repeat; background-size : cover; background-position : 50% 50%;">
      <div class="op _op" style="position: relative;z-index: 11; ">
       <div class="header-content _visual_height m_ratio">
        <div class="text _text_wrap">
         <div class="text-wrap _text fr-view">
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="item holder section" style="background-image:url(https://cdn.imweb.me/thumbnail/20170813/598fc4359a801.jpg); background-color:#dddddd; background-repeat : no-repeat; background-size : cover; background-position : 50% 100%;">
      <div class="op _op" style="position: relative;z-index: 11; ">
       <div class="header-content _visual_height m_ratio">
        <div class="text _text_wrap">
         <div class="text-wrap _text fr-view">
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
          </h3>
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="item holder section" style="background-image:url(https://cdn.imweb.me/thumbnail/20180227/5a948ef8000b4.png); background-color:#dddddd; background-repeat : no-repeat; background-size : cover; background-position : 50% 50%;">
      <div class="op _op" style="position: relative;z-index: 11; ">
       <div class="header-content _visual_height m_ratio">
        <div class="text _text_wrap">
         <div class="text-wrap _text fr-view">
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="item holder section" style="background-image:url(https://cdn.imweb.me/thumbnail/20170813/598fc435868b1.jpg); background-color:#000000; background-repeat : no-repeat; background-size : cover; background-position : 50% 50%;">
      <div class="op _op" style="position: relative;z-index: 11; ">
       <div class="header-content _visual_height m_ratio">
        <div class="text _text_wrap">
         <div class="text-wrap _text fr-view">
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <h3 style="text-align: center;">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201902015c53cac490c07" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201902015c53d958c9532">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201902015c53d958c9532" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201902015c53d95b76329">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201902015c53d95b76329">
          <div class="text-table">
           <div>
            <p style="text-align: center;">
             <br/>
            </p>
            <p style="text-align: center;">
             [linkx]
             
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201902015c53caccd22ef">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="코드" data-widget-parent-is-mobile="N" data-widget-type="code">
         <div id="mc_embed_signup">
          <form action="/subscribe/post?u=43aef511b7b111ddbd66f8455&amp;id=b7b7a84ebf" class="validate" id="mc-embedded-subscribe-form" method="post" name="mc-embedded-subscribe-form" novalidate="" target="_blank">
           <div id="mc_embed_signup_scroll">
            <div aria-hidden="true" style="position: absolute; left: -5000px;">
            </div>
            <div class="clear">
            </div>
           </div>
          </form>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-8" doz_grid="8" doz_type="grid">
       <div doz_type="widget" id="w201904015ca178a05b39c">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="갤러리" data-widget-parent-is-mobile="N" data-widget-type="gallery2">
         <div class="widget _gallery_wrap">
          <div class="img_rendering slide_05 type_slide container_border owl-carousel owl-theme gallery2" id="container_w201904015ca178a05b39c" style="padding-bottom: 0">
           <div class="_item item_gallary" data-org="S2017041658f2383add757/9b4e9d94b36f8.png" style="display: ; position: relative;">
            <div id="caption_2398390" style="display:none">
             <h4>
              공장공장 편지 일곱 번째, "애증에 대하여"
             </h4>
             <p>
              07/26/2019
             </p>
            </div>
            [linkx]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/719a0e1f157d3.png" style="display: ; position: relative;">
            <div id="caption_2283924" style="display:none">
             <h4>
              공장공장 편지 여섯 번째, "No Music No Life"
             </h4>
             <p>
              06/28/2019
             </p>
            </div>
            <a class="item_container _item_container _fade_link" href="/?u=43aef511b7b111ddbd66f8455&amp;id=634395cbe1" style="display: block" target="_blank">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190707/1d94993c14216.png)" data-src="https://cdn.imweb.me/thumbnail/20190706/b772e72ea30f6.png" data-sub-html="#caption_2283924" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190707/1d94993c14216.png);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190706/b772e72ea30f6.png" data-sub-html="#caption_2283924" id="gal_item_" style="display: ">
              <p class="title">
               공장공장 편지 여섯 번째, "No Music No Life"
               <span class="body">
                06/28/2019
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5ce7c430dec70.png" style="display: ; position: relative;">
            <div id="caption_2058672" style="display:none">
             <h4>
              공장공장 편지 다섯 번째, "밤이 깊었네"
             </h4>
             <p>
              05/24/2019
             </p>
            </div>
            <a class="item_container _item_container _fade_link" href="/?u=43aef511b7b111ddbd66f8455&amp;id=d8d83dc4a9" style="display: block" target="_blank">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190524/5ce7d4f700fbe.png)" data-src="https://cdn.imweb.me/thumbnail/20190524/5ce7c43272ac3.png" data-sub-html="#caption_2058672" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190524/5ce7d4f700fbe.png);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190524/5ce7c43272ac3.png" data-sub-html="#caption_2058672" id="gal_item_" style="display: ">
              <p class="title">
               공장공장 편지 다섯 번째, "밤이 깊었네"
               <span class="body">
                05/24/2019[linkx]<li>[area1][keywordx]</li>[ahref][pkeyx]
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5cca55f164bba.jpg" style="display: ; position: relative;">
            <div id="caption_1929462" style="display:none">
             <h4>
              공장공장 편지 네 번째, "우헤헤"
             </h4>
             <p>
              04/26/2019
             </p>
            </div>
            <a class="item_container _item_container _fade_link" href="/?u=43aef511b7b111ddbd66f8455&amp;id=6a3355369c" style="display: block" target="_blank">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190502/5cca958360c1b.jpg)" data-src="https://cdn.imweb.me/thumbnail/20190502/5cca55f3dc87a.jpg" data-sub-html="#caption_1929462" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190502/5cca958360c1b.jpg);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190502/5cca55f3dc87a.jpg" data-sub-html="#caption_1929462" id="gal_item_" style="display: ">
              <p class="title">
               공장공장 편지 네 번째, "우헤헤"
               <span class="body">
                04/26/2019
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5ca17e7673d3f.png" style="display: ; position: relative;">
            <div id="caption_1745034" style="display:none">
             <h4>
              공장공장 편지 세 번째, "체조시간"
             </h4>
             <p>
              03/29/2019
             </p>
            </div>
            [linkx]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/515b3fffbb8b6.png" style="display: ; position: relative;">
            <div id="caption_2283936" style="display:none">
             <h4>
              [2] 간장공장 공장장은 공장공장 뉴스레터이다
             </h4>
             <p>
              02/28/2019
             </p>
            </div>
            [ahref]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/862e3cdd4646c.jpg" style="display: ; position: relative;">
            <div id="caption_2283937" style="display:none">
             <h4>
              [1] 간장공장 공장장은 공장공장 뉴스레터이다
             </h4>
             <p>
              01/31/2019
             </p>
            </div>
            <a class="item_container _item_container _fade_link" href="/?u=43aef511b7b111ddbd66f8455&amp;id=d67b514d9b" style="display: block" target="_blank">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190707/f18d3eee84a67.jpg)" data-src="https://cdn.imweb.me/thumbnail/20190706/87165bf8277ed.jpg" data-sub-html="#caption_2283937" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190707/f18d3eee84a67.jpg);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190706/87165bf8277ed.jpg" data-sub-html="#caption_2283937" id="gal_item_" style="display: ">
              <p class="title">
               [1] 간장공장 공장장은 공장공장 뉴스레터이다
               <span class="body">
                01/31/2019
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="col-dz col-dz-4" doz_grid="4" doz_type="grid">
       <div doz_type="widget" id="w201908049c47495abd90c">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="0" data-widget-anim-duration="0.7" data-widget-name="동영상" data-widget-parent-is-mobile="N" data-widget-type="video">
         <div class="widget movie _video_wrap" id="video_w201908049c47495abd90c" style="position: relative">
          <div class="img_box _img_box" style="overflow: hidden; text-align: center;">
           <div class="_video video_container">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201902075c5af894ab8b0">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201902075c5af894ab8b0" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201805235b04d4f7e4913" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201805235b04d4f7ea32b">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201805235b04d4f7ea32b" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201805235b04d4f7eb5e9">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <a class="" href="/notice" style="display:block;" target="_blank">
          <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201805235b04d4f7eb5e9">
           <div class="text-table">
            <div>
             <p style="text-align: center;">
              <span style="font-size: 14px; color: rgb(110, 110, 110);">
               Notice
              </span>
             </p>
            </div>
           </div>
          </div>
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201805235b04d515eed94">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="최신글" data-widget-parent-is-mobile="N" data-widget-type="newest">
         <div class="widget">
          <div class="list-style-gallery grid_02 type_grid img_border" id="newest_w201805235b04d515eed94">
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/notice/?idx=2164605&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190808/2f1147382b9d2.jpg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 공장공장이 좋아서 만드는 <길고 자세하지만 공장공장다운 8장> 첫 번째
                 <span class="icons">
                  <em class="addon-badge">
                   N
                  </em>
                 </span>
                </div>
                <div class="text text-block show_body">
                 <span>
                  * 누가 누가 받아 가셨는지, 과연 도움이 됐는지 궁금해요. 만든 사람들이 뿌듯하도록 댓글 부탁해요 (하트)  공장공장을 설명하려고 해요. 아니, 솔직하게 말해서 그것보다 재밌는 ...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  2
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p2019080831c5983d9d80b" onclick="newestClickLike('p2019080831c5983d9d80b', $('#like_token_key_p2019080831c5983d9d80b').val(), $('#like_token_p2019080831c5983d9d80b').val()); return false;" style="display: ">
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: none">
                 </div>
                 <div class="tools">
                  <div class="writer">
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: " title="2019-08-08 00:55:07">
                   2019-08-08
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   63
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [linkx]
              
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [ahref]
              
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [ahref]
              
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [ahref]
              
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201805235b04d4f7ec7bf">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201805235b04d4f7ec7bf" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201801115a56497fa9095" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201712295a45e21633cb2">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201712295a45e21633cb2" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201712295a45e1d854e5c">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <a class="" href="/store" style="display:block;" target="_blank">
          <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201712295a45e1d854e5c">
           <div class="text-table">
            <div>
             <p style="text-align: center;">
              <span style="font-size: 14px;">
               <span style="letter-spacing: -1px; color: rgb(110, 110, 110);">
                Store
               </span>
              </span>
             </p>
            </div>
           </div>
          </div>
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201712295a45e21d9f417">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201712295a45e21d9f417" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201801115a564e6349fc6" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2017071259657e8c7648a">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="쇼핑 진열" data-widget-parent-is-mobile="N" data-widget-type="shop_showcase">
         <div class="shop-content">
          <div class="shop-grid">
           <div class="thumb-fluid _item_container type-slide hover_bright">
            <div class="thumb-row m-list-type2 list-type-b thumb-item-3 _item_wrap" id="container_w2017071259657e8c7648a" style="visibility: hidden">
             <div class="shop-item _shop_item">
              <div class="item-thumbs" style="position: relative;">
               <a class="_fade_link hover_img_none" href="/shop_view/?idx=25">
               </a>
              </div>
              <div class="item-detail" style="text-align: center">
               <a class="blocked _fade_link" href="/shop_view/?idx=25">
                <div class="item-pay">
                 <h2 style="font-weight:; color:#595959; font-size: 12px; display: ">
                  [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                 </h2>
                 <div class="item-pay-detail">
                  <p class="pay" style="font-weight:; color:rgba(0, 0, 0, 0.4); font-size: 10px">
                   30,000원
                  </p>
                 </div>
                </div>
               </a>
               <div class="item-summary">
                <p>
                 두 손이 자유로운 장희한 에코백
                </p>
               </div>
               <div class="item-icon">
                <span>
                 <span>
                  <i class="icon-bubble">
                  </i>
                  0
                 </span>
                </span>
                <span>
                 <span>
                  <i class="icon-heart">
                  </i>
                  1
                 </span>
                </span>
                <span>
                 <span>
                  <a href=";" onclick="SITE_SHOP_DETAIL.openProdDetailFromShoppingList('25', 'https://emptypublic.com/?idx=25', 'N', '', '0')">
                   <i class="icon-basket">
                   </i>
                   Cart
                  </a>
                 </span>
                </span>
               </div>
              </div>
             </div>
             <div class="shop-item _shop_item">
              <div class="item-thumbs" style="position: relative;">
               <a class="_fade_link" href="/shop_view/?idx=20">
               </a>
              </div>
              <div class="item-detail" style="text-align: center">
               <a class="blocked _fade_link" href="/shop_view/?idx=20">
                <div class="item-pay">
                 <h2 style="font-weight:; color:#595959; font-size: 12px; display: ">
                  [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                 </h2>
                 <div class="item-pay-detail">
                  <p class="pay" style="font-weight:; color:rgba(0, 0, 0, 0.4); font-size: 10px">
                   33,000원
                  </p>
                 </div>
                </div>
               </a>
               <div class="item-summary">
                <p>
                 귀여운 레터링이 들어간, 장래희망은 한량입니다 티셔츠(흰/검)
                </p>
               </div>
               <div class="item-icon">
                <span>
                 <span>
                  <i class="icon-bubble">
                  </i>
                  2
                 </span>
                </span>
                <span>
                 <span>
                  <i class="icon-heart">
                  </i>
                  5
                 </span>
                </span>
                <span>
                 <span>
                  <a href=";" onclick="SITE_SHOP_DETAIL.openProdDetailFromShoppingList('20', 'https://emptypublic.com/?idx=20', 'N', '', '0')">
                   <i class="icon-basket">
                   </i>
                   Cart
                  </a>
                 </span>
                </span>
               </div>
              </div>
             </div>
             <div class="shop-item _shop_item">
              <div class="item-thumbs" style="position: relative;">
               [ahref]
               
              </div>
              <div class="item-detail" style="text-align: center">
               <a class="blocked _fade_link" href="/shop_view/?idx=24">
                <div class="item-pay">
                 <h2 style="font-weight:; color:#595959; font-size: 12px; display: ">
                  <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                 </h2>
                 <div class="item-pay-detail">
                  <p class="pay" style="font-weight:; color:rgba(0, 0, 0, 0.4); font-size: 10px">
                   33,000원
                  </p>
                 </div>
                </div>
               </a>
               <div class="item-summary">
                <p>
                 한량패밀리의 계란말이가 프린트된 티셔츠
                </p>
               </div>
               <div class="item-icon">
                <span>
                 <span>
                  <i class="icon-bubble">
                  </i>
                  0
                 </span>
                </span>
                <span>
                 <span>
                  <i class="icon-heart">
                  </i>
                  2
                 </span>
                </span>
                <span>
                 <span>
                  <a href=";" onclick="SITE_SHOP_DETAIL.openProdDetailFromShoppingList('24', 'https://emptypublic.com/?idx=24', 'N', '', '0')">
                   <i class="icon-basket">
                   </i>
                   Cart
                  </a>
                 </span>
                </span>
               </div>
              </div>
             </div>
             <div class="shop-item _shop_item">
              <div class="item-thumbs" style="position: relative;">
               <a class="_fade_link" href="/shop_view/?idx=23">
               </a>
              </div>
              <div class="item-detail" style="text-align: center">
               [ahref]
               
               <div class="item-summary">
                <p>
                 한량패밀리의 분홍바지가 프린트된 티셔츠
                </p>
               </div>
               <div class="item-icon">
                <span>
                 <span>
                  <i class="icon-bubble">
                  </i>
                  0
                 </span>
                </span>
                <span>
                 <span>
                  <i class="icon-heart">
                  </i>
                  2
                 </span>
                </span>
                <span>
                 <span>
                  [linkx]
                  
                 </span>
                </span>
               </div>
              </div>
             </div>
             <div class="shop-item _shop_item">
              <div class="item-thumbs" style="position: relative;">
               [ahref]
               
              </div>
              <div class="item-detail" style="text-align: center">
               [linkx]
               
               <div class="item-summary">
                <p>
                 한량패밀리의 민트윗도리가 프린트된 티셔츠
                </p>
               </div>
               <div class="item-icon">
                <span>
                 <span>
                  <i class="icon-bubble">
                  </i>
                  0
                 </span>
                </span>
                <span>
                 <span>
                  <i class="icon-heart">
                  </i>
                  2
                 </span>
                </span>
                <span>
                 <span>
                  <a href=";" onclick="SITE_SHOP_DETAIL.openProdDetailFromShoppingList('22', 'https://emptypublic.com/?idx=22', 'N', '', '0')">
                   <i class="icon-basket">
                   </i>
                   Cart
                  </a>
                 </span>
                </span>
               </div>
              </div>
             </div>
             <div class="shop-item _shop_item">
              <div class="item-thumbs" style="position: relative;">
               [ahref]
               
              </div>
              <div class="item-detail" style="text-align: center">
               [linkx]
               
               <div class="item-summary">
                [area1][mkey1]<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
               </div>
               <div class="item-icon">
                <span>
                 <span>
                  <i class="icon-bubble">
                  </i>
                  0
                 </span>
                </span>
                <span>
                 <span>
                  <i class="icon-heart">
                  </i>
                  2
                 </span>
                </span>
                <span>
                 <span>
                  [ahref]
                  
                 </span>
                </span>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803045a9ad34af2a4d">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201803045a9ad34af2a4d" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201803205ab0db38d26bb" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803205ab0db38d4a12">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="가로선" data-widget-parent-is-mobile="N" data-widget-type="hr">
         <div class="widget line type01 _hide" id="hr_w201803205ab0db38d4a12">
          <div class="line_box holder" style="width:5%; margin-left: 0;">
           <hr style="border-top-width:1px; border-color:rgba(218, 218, 218, 0.4);"/>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201803205ab0e1086ea60" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803205ab0e108753c9">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201803205ab0e108753c9" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803205ab0e10876a20">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <a class="" href="/Diary" style="display:block;" target="_blank">
          <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201803205ab0e10876a20">
           <div class="text-table">
            <div>
             <p style="text-align: center;">
              <span style="font-size: 14px; color: rgb(110, 110, 110);">
               <span style="letter-spacing: -1px;">
                Diary
               </span>
              </span>
             </p>
            </div>
           </div>
          </div>
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803205ab0e10877e89">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201803205ab0e10877e89" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201712295a45e16849ec2" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201712295a45e17318c57">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="최신글" data-widget-parent-is-mobile="N" data-widget-type="newest">
         <div class="widget">
          <div class="list-style-gallery grid_02 type_grid img_border" id="newest_w201712295a45e17318c57">
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/Diary/?idx=2184442&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190813/39cd1e2b7404a.jpg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 2019년 08월 12일 월요일 작은 꿈을 꾸는 사람들은 지켜주는 사람이 필요해.
                 <span class="icons">
                  <em class="addon-badge">
                   N
                  </em>
                 </span>
                </div>
                <div class="text text-block show_body">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  3
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p2019081269c51ab98b799" onclick="newestClickLike('p2019081269c51ab98b799', $('#like_token_key_p2019081269c51ab98b799').val(), $('#like_token_p2019081269c51ab98b799').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p2019081269c51ab98b799">
                   2
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   쾌지나
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: none" title="2019-08-12 23:59:38">
                   17시간전
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   17
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [linkx]
              
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [linkx][area1][keywordx][pkeyx][linkx][ahref][ahref][linkx][linkx][area1][mkey1][linkx][ahref][area1][keywordx][area1][keywordx][area1][mkey1][area1][keywordx][linkx][pkeyx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][linkx][area1][mkey1]
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            [pkeyx][linkx][ahref][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][linkx][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][pkeyx][linkx][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][linkx][linkx][area1][keywordx][linkx]
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/Diary/?idx=2147842&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190802/db85ce764f75c.gif);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 2019년 8월 2일 금요일
                </div>
                <div class="text text-block show_body">
                 <span>
                  물놀이를 다녀온 것을 앞서 두 명이 다이어리에 적어서 이미 알고 있겠지만 회사에서, 모두 다 함께, 그것도 평일에 물놀이를 다녀온 것은 큰 이벤트니까 한 번 더 우려볼게요. 물놀이...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  3
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p201908029bc8eaa3fb360" onclick="newestClickLike('p201908029bc8eaa3fb360', $('#like_token_key_p201908029bc8eaa3fb360').val(), $('#like_token_p201908029bc8eaa3fb360').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p201908029bc8eaa3fb360">
                   5
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   박은혜
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: none" title="2019-08-02 11:17:31">
                   2019-08-02
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   56
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              [linkx]
              
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803165aabafd102d60">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201803165aabafd102d60" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201803165aabaf99a6e55" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803165aabaf99a946c">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="가로선" data-widget-parent-is-mobile="N" data-widget-type="hr">
         <div class="widget line type01 _hide" id="hr_w201803165aabaf99a946c">
          <div class="line_box holder" style="width:5%; margin-left: 0;">
           <hr style="border-top-width:1px; border-color:rgba(218, 218, 218, 0.4);"/>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201801115a5649498e4f3" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2017071259656a74eb7b7">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w2017071259656a74eb7b7" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2017071259656a7c4ed5a">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <a class="" href="/magazine" style="display:block;">
          <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w2017071259656a7c4ed5a">
           <div class="text-table">
            <div>
             <p style="text-align: center;">
              <span style="font-size: 14px; color: rgb(110, 110, 110);">
               <span style="letter-spacing: -1px;">
                Contents
               </span>
              </span>
             </p>
            </div>
           </div>
          </div>
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2017100159cfc1e115023">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w2017100159cfc1e115023" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_basic" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s2017093059cfa36b946f0" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803165aab3f7294830">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <a class="" href="/magazine" style="display:block;" target="_blank">
          <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201803165aab3f7294830">
           <div class="text-table">
            <div>
             <p style="text-align: center;">
              <span style="color: rgb(153, 153, 153);">
               Magazine
              </span>
             </p>
            </div>
           </div>
          </div>
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20170518591d11461e60c">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="최신글" data-widget-parent-is-mobile="N" data-widget-type="newest">
         <div class="widget">
          <div class="list-style-gallery grid_02 type_grid img_border" id="newest_w20170518591d11461e60c">
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/magazine/?idx=1968036&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190603/8140724eb9be4.jpg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 어쩌면 내일이 마지막일지 몰라, 그러니까 하고 싶은 걸 하자
                </div>
                <div class="text text-block show_body">
                 <span>
                  " 어쩌면 내일이 마지막일지 몰라,  그러니까 하고 싶은 걸 하자. "   - 공장공장과 괜찮아마을, 2019년     과연 나는 이 일을, 이 일상을, 이 사업...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: none">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  0
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p201906032b55568da2507" onclick="newestClickLike('p201906032b55568da2507', $('#like_token_key_p201906032b55568da2507').val(), $('#like_token_p201906032b55568da2507').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p201906032b55568da2507">
                   6
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   명호
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: " title="2019-06-03 01:46:30">
                   2019-06-03
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   202
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/magazine/?idx=1902105&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190513/5cd954edad3ab.jpg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 친구들아!!!!!! 내 이야기에 귀 좀 귀울여줄래?
                </div>
                <div class="text text-block show_body">
                 <span>
                  폭염에 지치던 2018년 7월 말의 여름, 누군가는 내게 이렇게 푹푹 찌는 무더위에 시원-한 마트에서 일하니까 참 좋겠다고 이야기했다. 틀린 말은 아니었다. 숨이 턱턱 막히도록 ...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  8
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p201905135cd94c4b2f8fc" onclick="newestClickLike('p201905135cd94c4b2f8fc', $('#like_token_key_p201905135cd94c4b2f8fc').val(), $('#like_token_p201905135cd94c4b2f8fc').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p201905135cd94c4b2f8fc">
                   9
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   쾌지나
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: " title="2019-05-13 19:51:56">
                   2019-05-13
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   193
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/magazine/?idx=1900595&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190513/5cd8fd6795d12.jpeg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 새로운 시작, 괜찮아마을
                </div>
                <div class="text text-block show_body">
                 <span>
                  목포로 내려가는 KTX에서 생각을 정리하며 작성한 글이다. 내가 왜 다시 지역으로 떠나는지? 그곳에서 무엇을 기대하고 어떤 욕망을 가지고 떠나는지에 대한 기록이다. 불안함보다는 ...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  3
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p201905135cd8f9f29872e" onclick="newestClickLike('p201905135cd8f9f29872e', $('#like_token_key_p201905135cd8f9f29872e').val(), $('#like_token_p201905135cd8f9f29872e').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p201905135cd8f9f29872e">
                   3
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   김영범
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: " title="2019-05-13 14:00:36">
                   2019-05-13
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   144
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/magazine/?idx=1724028&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190329/5c9e068613a63.jpeg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 부끄러운 일은 아니지만 그렇다고 자랑할 이야기는 아닌 것들
                </div>
                <div class="text text-block show_body">
                 <span>
                  내가 목포에, 괜찮아마을에, 그리고 공장공장에 오기까지. 부끄러운 일은 아니지만 그렇다고 자랑할 이야기는 아닌 것들    꼭 이걸 적어야 할까 그래서 구체적으로 적지 못하고 추상적...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  4
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p201903295c9e0479d6bf3" onclick="newestClickLike('p201903295c9e0479d6bf3', $('#like_token_key_p201903295c9e0479d6bf3').val(), $('#like_token_p201903295c9e0479d6bf3').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p201903295c9e0479d6bf3">
                   4
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   한나
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: " title="2019-03-29 20:41:47">
                   2019-03-29
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   353
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card _card" style="  background-size: cover; background-position: 50% 50%;">
              <a class="holder blocked _fade_link" href="/magazine/?idx=1710039&amp;bmode=view">
               <div class="card_wrapper f" style="background-image: url(https://cdn.imweb.me/thumbnail/20190324/5c977ef3d242c.jpg);  background-size: cover; background-position: 50% 50%;">
                <div class="card-head _card_head _img_wrap">
                 <span>
                 </span>
                </div>
               </div>
               <div class="card-body _card_body list-group">
                <div class="title title-block">
                 평화
                </div>
                <div class="text text-block show_body">
                 <span>
                  호주에서 정말 아무런 생각 없이 1년 8개월을 살다가 한국에 돌아왔다. 그곳에서는 남들과 조금 달라도 아무도 손가락질하거나 왜 그러냐고 묻지 않았다. 모두가 자유로웠다. 너무너무...
                 </span>
                </div>
               </div>
               <div class="card-foot _card_foot clearfix">
                <div class="float_l">
                 <small class="cmt" style="display: ">
                  <i class="icon-bubble vertical-middle">
                  </i>
                  15
                 </small>
                 <small class="cmt like_btn" name="newest_like_btn_p201903245c9774d945030" onclick="newestClickLike('p201903245c9774d945030', $('#like_token_key_p201903245c9774d945030').val(), $('#like_token_p201903245c9774d945030').val()); return false;" style="display: ">
                  <i class="btm bt-heart vertical-middle">
                  </i>
                  <em name="newest_like_count_p201903245c9774d945030">
                   8
                  </em>
                 </small>
                </div>
               </div>
               <div class="card-summary _card_summary">
                <div class="avatar">
                 <div class="img_wrap" style="display: ">
                 </div>
                 <div class="tools">
                  <div class="writer">
                   박은혜
                  </div>
                  <small class="date" data-placement="auto" data-toggle="tooltip" style="display: " title="2019-03-24 21:15:23">
                   2019-03-24
                  </small>
                  <small style="display: ">
                   <i style="font-style: normal;">
                    조회
                   </i>
                   284
                  </small>
                 </div>
                </div>
               </div>
              </a>
             </div>
            </div>
           </div>
           <div class="list-style-card table-cell _card_wrap">
            <div class="ma-item _post_item_wrap">
             <div class="card no-img _card" style="  background-size: cover; background-position: 50% 50%;">
              [ahref]
              
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201801115a564d3350504">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201801115a564d3350504" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201803165aab3f5002b0e" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <li>[area1][keywordx]</li>[pkeyx][linkx]
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201803165aab3f5730a83">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="갤러리" data-widget-parent-is-mobile="N" data-widget-type="gallery2">
         <div class="widget _gallery_wrap">
          <div class="img_rendering masonry_02 type_masonry img_border gallery2" id="container_w201803165aab3f5730a83" style="padding-bottom: 0">
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5acdf5530ac8d.png" style="display: ; position: relative;">
            <div id="caption_616861" style="display:none">
             <h4>
              공장공장 x 낯설게 하기
             </h4>
             <p>
              제4화 CITY OF STARS(하)
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/UmDlu2fgulY","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap" data-src="https://cdn.imweb.me/thumbnail/20180411/5acdf5544b1ce.png" data-sub-html="#caption_616861" id="gal_item_">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20180411/5acdf5544b1ce.png" data-sub-html="#caption_616861" id="gal_item_" style="display: ">
              <p class="title">
               공장공장 x 낯설게 하기
               <span class="body">
                제4화 CITY OF STARS(하)
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5ac4ed5f5a54d.png" style="display: ; position: relative;">
            <div id="caption_600959" style="display:none">
             <h4>
              공장공장 x 낯설게 하기
             </h4>
             <p>
              제3화 CITY OF STARS(상)
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/AG9girsCMqw","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap" data-src="https://cdn.imweb.me/thumbnail/20180405/5ac4ed602d067.png" data-sub-html="#caption_600959" id="gal_item_">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20180405/5ac4ed602d067.png" data-sub-html="#caption_600959" id="gal_item_" style="display: ">
              <p class="title">
               [area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5abc5a756957f.png" style="display: ; position: relative;">
            <div id="caption_587996" style="display:none">
             <h4>
              공장공장 x 낯설게 하기
             </h4>
             <p>
              제2화 여유도 재능
             </p>
            </div>
            [ahref]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5ab23ba291c28.png" style="display: ; position: relative;">
            <div id="caption_571867" style="display:none">
             <h4>
              공장공장 x 낯설게 하기
             </h4>
             <p>
              제1화 시간이 거꾸로 가는 도시, 목포
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/qkY2FmJzcqE","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap" data-src="https://cdn.imweb.me/thumbnail/20180321/5ab23ba3bc917.png" data-sub-html="#caption_571867" id="gal_item_">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20180321/5ab23ba3bc917.png" data-sub-html="#caption_571867" id="gal_item_" style="display: ">
              <p class="title">
               공장공장 x 낯설게 하기
               <span class="body">
                제1화 시간이 거꾸로 가는 도시, 목포
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5aa9f0e9b1793.png" style="display: ; position: relative;">
            <div id="caption_553009" style="display:none">
             <h4>
              공장공장 x 낯설게 하기
             </h4>
             <p>
              0화 프롤로그
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/_WCQ2bK61Nc","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap" data-src="https://cdn.imweb.me/thumbnail/20180315/5aa9f0ea7b3fc.png" data-sub-html="#caption_553009" id="gal_item_">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20180315/5aa9f0ea7b3fc.png" data-sub-html="#caption_553009" id="gal_item_" style="display: ">
              <p class="title">
               공장공장 x 낯설게 하기
               <span class="body">
                0화 프롤로그
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201901065c30e1500fb4a">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="갤러리" data-widget-parent-is-mobile="N" data-widget-type="gallery2">
         <div class="widget _gallery_wrap">
          <div class="img_rendering grid_02 type_grid img_border gallery2" id="container_w201901065c30e1500fb4a" style="padding-bottom: 0">
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c5d2d0f2a3ed.png" style="display: ; position: relative;">
            <div id="caption_1500246" style="display:none">
             <h4>
              괜찮아마을 2기 x 몬드
             </h4>
             <p>
              지역발견
             </p>
            </div>
            [linkx]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c5d2f3160e86.png" style="display: ; position: relative;">
            <div id="caption_1500337" style="display:none">
             <h4>
              괜찮아마을 2기 x 몬드
             </h4>
             <p>
              남도탐방
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/Sq--uIQ9x8Y","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190208/5c5d40d8c5b9f.png)" data-src="https://cdn.imweb.me/thumbnail/20190208/5c5d2f3241f9f.png" data-sub-html="#caption_1500337" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190208/5c5d40d8c5b9f.png);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190208/5c5d2f3241f9f.png" data-sub-html="#caption_1500337" id="gal_item_" style="display: ">
              <p class="title">
               괜찮아마을 2기 x 몬드
               <span class="body">
                남도탐방
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c5d2f88a3718.png" style="display: ; position: relative;">
            <div id="caption_1500338" style="display:none">
             <h4>
              괜찮아마을 2기 x 몬드 x 가랑비
             </h4>
             <p>
              당신과 나, 우리가 무르익어가는 시간
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/REH39NWEa24","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190208/5c5d40d960920.png)" data-src="https://cdn.imweb.me/thumbnail/20190208/5c5d2f89d8bf7.png" data-sub-html="#caption_1500338" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190208/5c5d40d960920.png);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190208/5c5d2f89d8bf7.png" data-sub-html="#caption_1500338" id="gal_item_" style="display: ">
              <p class="title">
               괜찮아마을 2기 x 몬드 x 가랑비
               <span class="body">
                당신과 나, 우리가 무르익어가는 시간
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c5d22e793889.png" style="display: ; position: relative;">
            <div id="caption_1499910" style="display:none">
             <h4>
              괜찮아마을 2기 x 몬드
             </h4>
             <p>
              우린 이렇게 지내요
             </p>
            </div>
            [linkx]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c5d2197b28e3.png" style="display: ; position: relative;">
            <div id="caption_1499891" style="display:none">
             <h4>
              괜찮아마을 2기 x 몬드
             </h4>
             <p>
              2기 입주식
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/W_1_8KdRVmc","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190208/5c5d40dab2d71.png)" data-src="https://cdn.imweb.me/thumbnail/20190208/5c5d219913088.png" data-sub-html="#caption_1499891" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190208/5c5d40dab2d71.png);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190208/5c5d219913088.png" data-sub-html="#caption_1499891" id="gal_item_" style="display: ">
              <p class="title">
               괜찮아마을 2기 x 몬드
               <span class="body">
                2기 입주식
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c30e100615ec.png" style="display: ; position: relative;">
            <div id="caption_1368466" style="display:none">
             <h4>
              괜찮아마을 2기 x 이유지
             </h4>
             <p>
              일상
             </p>
            </div>
            <a class="item_container _item_container" href='/\/youtu.be\/069HgwG1RrY","loop":"N","hide_title":"N"});' style="display: block">
             <div class="img_wrap _img_wrap" data-bg="url(https://cdn.imweb.me/thumbnail/20190208/5c5d40db59a24.png)" data-src="https://cdn.imweb.me/thumbnail/20190106/5c30e102df149.png" data-sub-html="#caption_1368466" id="gal_item_" style="background-image: url(https://cdn.imweb.me/thumbnail/20190208/5c5d40db59a24.png);; ">
             </div>
             <div class="text_wrap _text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190106/5c30e102df149.png" data-sub-html="#caption_1368466" id="gal_item_" style="display: ">
              <p class="title">
               괜찮아마을 2기 x 이유지
               <span class="body">
                일상
               </span>
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </a>
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c30e04e25a3c.png" style="display: ; position: relative;">
            <div id="caption_1368464" style="display:none">
             <h4>
              괜찮아마을 1기 x 이유지
             </h4>
             <p>
              자전거
             </p>
            </div>
            [ahref]
            
           </div>
           <div class="_item item_gallary" data-org="S2017041658f2383add757/5c30e04db3126.png" style="display: ; position: relative;">
            <div id="caption_1368465" style="display:none">
             <h4>
              괜찮아마을 1기 x 이유지
             </h4>
             <p>
              식탁
             </p>
            </div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201801115a564b9827424" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201801115a564c6d8201e">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201801115a564c6d8201e" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[area1][keywordx]
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_basic" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s2017093059cfa2dc575e3" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20170518591d11894fe50">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="최신글" data-widget-parent-is-mobile="N" data-widget-type="newest">
         <div class="widget">
          <div class="list-style m-margin-on row_02 type_row container_border" id="newest_w20170518591d11894fe50">
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               [ahref]
               
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             [ahref]
             
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p20190808f4d37731adad2" onclick="newestClickLike('p20190808f4d37731adad2', $('#like_token_key_p20190808f4d37731adad2').val(), $('#like_token_p20190808f4d37731adad2').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p20190808f4d37731adad2">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              9
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               <a class="row_title _fade_link" href="/press/?idx=2165406&amp;bmode=view" style="padding-right:20px">
                [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>
               </a>
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             <a class="body_font_color_60" href="/press/?idx=2165406&amp;bmode=view">
              <span class="inline-blocked" data-placement="auto" data-toggle="tooltip" title="2019-08-08 11:04:39">
               2019-08-08
              </span>
             </a>
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p2019080805ba5f7f31a41" onclick="newestClickLike('p2019080805ba5f7f31a41', $('#like_token_key_p2019080805ba5f7f31a41').val(), $('#like_token_p2019080805ba5f7f31a41').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p2019080805ba5f7f31a41">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              12
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               [ahref]
               
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             <a class="body_font_color_60" href="/press/?idx=2162525&amp;bmode=view">
              <span class="inline-blocked" data-placement="auto" data-toggle="tooltip" title="2019-08-07 12:23:15">
               2019-08-07
              </span>
             </a>
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p20190807ce7d5fb8e6f4e" onclick="newestClickLike('p20190807ce7d5fb8e6f4e', $('#like_token_key_p20190807ce7d5fb8e6f4e').val(), $('#like_token_p20190807ce7d5fb8e6f4e').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p20190807ce7d5fb8e6f4e">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              17
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               [ahref]
               
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             [ahref]
             
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p201908075de954aebe421" onclick="newestClickLike('p201908075de954aebe421', $('#like_token_key_p201908075de954aebe421').val(), $('#like_token_p201908075de954aebe421').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p201908075de954aebe421">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              15
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               [ahref]
               
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             <a class="body_font_color_60" href="/press/?idx=1994166&amp;bmode=view">
              <span class="inline-blocked" data-placement="auto" data-toggle="tooltip" title="2019-06-11 18:13:17">
               2019-06-11
              </span>
             </a>
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p20190611d851c90c21db9" onclick="newestClickLike('p20190611d851c90c21db9', $('#like_token_key_p20190611d851c90c21db9').val(), $('#like_token_p20190611d851c90c21db9').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p20190611d851c90c21db9">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              84
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               [ahref]
               
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             <a class="body_font_color_60" href="/press/?idx=1971265&amp;bmode=view">
              <span class="inline-blocked" data-placement="auto" data-toggle="tooltip" title="2019-06-03 21:55:15">
               2019-06-03
              </span>
             </a>
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p20190603a955b1cdb3f97" onclick="newestClickLike('p20190603a955b1cdb3f97', $('#like_token_key_p20190603a955b1cdb3f97').val(), $('#like_token_p20190603a955b1cdb3f97').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p20190603a955b1cdb3f97">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              75
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               [linkx]
               
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             [ahref]
             
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p201906035cf5a04d865e0" onclick="newestClickLike('p201906035cf5a04d865e0', $('#like_token_key_p201906035cf5a04d865e0').val(), $('#like_token_p201906035cf5a04d865e0').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p201906035cf5a04d865e0">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              84
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               <a class="row_title _fade_link" href="/press/?idx=1892428&amp;bmode=view" style="padding-right:20px">
                <i class="btl bt-lock" style="display: none; padding: 2px;">
                </i>
                <em style="padding-right:5px;color:#FF635D;">
                 소셜
                </em>
                행정안전부 - 괜찮아마을 프로젝트
                <span class="first_fake">
                 <span class="second_fake">
                  <span class="third_fake">
                   <i class="btl bt-lock" style="display: none">
                   </i>
                   <em style="padding-right:5px;color:#FF635D;">
                    소셜
                   </em>
                   행정안전부 - 괜찮아마을 프로젝트
                  </span>
                 </span>
                </span>
               </a>
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             <a class="body_font_color_60" href="/press/?idx=1892428&amp;bmode=view">
              <span class="inline-blocked" data-placement="auto" data-toggle="tooltip" title="2019-05-09 17:12:25">
               2019-05-09
              </span>
             </a>
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p201905095cd3e0e73c082" onclick="newestClickLike('p201905095cd3e0e73c082', $('#like_token_key_p201905095cd3e0e73c082').val(), $('#like_token_p201905095cd3e0e73c082').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p201905095cd3e0e73c082">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              105
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <li>[pkeyx]</li>[pkeyx]<li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             [ahref]
             
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p201905095cd3b3c780c77" onclick="newestClickLike('p201905095cd3b3c780c77', $('#like_token_key_p201905095cd3b3c780c77').val(), $('#like_token_p201905095cd3b3c780c77').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p201905095cd3b3c780c77">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              71
             </span>
            </small>
           </div>
           <div class="list line">
            <div class="table-cell vertical-middle" style="padding: 10px 0;">
             <div class="tabled full-width">
              <div class="line_table_cell table-cell vertical-middle" style="padding-right:20px">
               <a class="row_title _fade_link" href="/press/?idx=1871531&amp;bmode=view" style="padding-right:20px">
                <i class="btl bt-lock" style="display: none; padding: 2px;">
                </i>
                <em style="padding-right:5px;color:#00B8FF;">
                 신문
                </em>
                동아일보 - “혼자만 잘살면 무슨 재미?”… 공존 앞세우는 2030
                <span class="first_fake">
                 <span class="second_fake">
                  <span class="third_fake">
                   <i class="btl bt-lock" style="display: none">
                   </i>
                   <em style="padding-right:5px;color:#00B8FF;">
                    신문
                   </em>
                   동아일보 - “혼자만 잘살면 무슨 재미?”… 공존 앞세우는 2030
                  </span>
                 </span>
                </span>
               </a>
              </div>
             </div>
            </div>
            <small class="date table-cell vertical-middle" style="padding: 10px 0;">
             [ahref]
             
            </small>
            <small class="like_btn body_font_color_60 vertical-middle table-cell" name="newest_like_btn_p201905025cca4e5e0b6cb" onclick="newestClickLike('p201905025cca4e5e0b6cb', $('#like_token_key_p201905025cca4e5e0b6cb').val(), $('#like_token_p201905025cca4e5e0b6cb').val()); return false;" style="display: ">
             <span class="inline-blocked" style="cursor: pointer">
              <i class="btm bt-heart">
              </i>
              <em name="newest_like_count_p201905025cca4e5e0b6cb">
               0
              </em>
             </span>
            </small>
            <small class="view vertical-middle table-cell">
             <span class="inline-blocked">
              <i class="btm bt-eye">
              </i>
              87
             </span>
            </small>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s2017093059cfa27656bb5" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201801115a564cd90ec1d">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="15" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201801115a564cd90ec1d" style="width:100%; min-height:1px; height:15px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201707155968e8d5cb8e5">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201707155968e8d5cb8e5">
          <div class="text-table">
           <div>
            <p style="text-align: center;">
             <span style="color: rgb(110, 110, 110); font-size: 14px;">
              Social Media
             </span>
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20170524592590365f607">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="코드" data-widget-parent-is-mobile="N" data-widget-type="code">
         <div id="fb-root">
         </div>
         <center>
          <div class="fb-page" data-adapt-container-width="true" data-hide-cover="true" data-href="https://www.facebook.com/halyang.dream" data-show-facepile="false" data-small-header="true" data-tabs="timeline">
           <blockquote cite="https://www.facebook.com/halyang.dream" class="fb-xfbml-parse-ignore">
            [ahref]
            
           </blockquote>
          </div>
          <div class="fb-page" data-adapt-container-width="true" data-hide-cover="true" data-href="https://www.facebook.com/dontworryvillage" data-show-facepile="false" data-small-header="true" data-tabs="timeline">
           <blockquote cite="https://www.facebook.com/dontworryvillage" class="fb-xfbml-parse-ignore">
            [linkx]
            
           </blockquote>
          </div>
          <div class="fb-page" data-adapt-container-width="true" data-hide-cover="true" data-href="https://www.facebook.com/experoute" data-show-facepile="false" data-small-header="true" data-tabs="timeline">
           <blockquote cite="https://www.facebook.com/experoute" class="fb-xfbml-parse-ignore">
            <a href="/experoute">
             익스퍼루트
            </a>
           </blockquote>
          </div>
         </center>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <footer id="doz_footer_wrap">
   <div id="doz_footer">
    <div class="footer-section footer-type03 _footer_font_preview">
     <div class="inside">
      <div class="footer-wrap">
       <div class="foot-custom">
        <div class="custom-text _footer_text">
         <div class="site-brand _site_name" style="">
          공장공장
         </div>
         <div class="custom-text-info _text_editor">
          <p>
           상호 주식회사 공장공장
          </p>
          <p>
           <br/>
          </p>
          <p>
           주소
          </p>
          <p>
           전라남도 목포시 노적봉길 21-1
          </p>
          <p>
           <br/>
          </p>
          <p>
           <br/>
          </p>
          <p>
           대표이사 홍동우 박명호
          </p>
          <p>
           개인정보책임자 박명호
          </p>
          <p>
           <br/>
          </p>
          <p>
           사업자등록번호 106-87-10224
          </p>
          <p>
           통신판매업 신고 제2018-전남목포-0030호
          </p>
          <p>
           호스팅 공장공장
          </p>
          <p>
           <br/>
          </p>
          <p>
           문의 start@emptypublic.com
          </p>
          <p>
           전화 061-801-8008
          </p>
          <p>
           팩스 061-243-1011
          </p>
          <p>
           [linkx]
           
          </p>
          <p>
           <a href="/www/bizCommView.do?key=232&amp;apv_perm_no=2018480022830200033&amp;pageUnit=10&amp;searchCnd=wrkr_no&amp;searchKrwd=1068710224&amp;pageIndex=1" target="_blank">
            사업자정보확인
           </a>
          </p>
         </div>
        </div>
        <div class="copryright-area _copy_menu" style="">
         Copyright ⓒ 공장공장
        </div>
       </div>
       <div class="foot-main-nav _main_menu_wrap" style="">
        <ul class="nav nav-stacked footer-all-nav">
         <li class="_show_m2017041658f2383aeca62" style="">
          <a class="_fade_link _txt_m2017041658f2383aeca62" data-url="about" href="/about">
           <span class="plain_name" data-hover="">
            COMPANY
           </span>
          </a>
         </li>
         <li class="_show_m2017041658f2383aec7b3" style="">
          [ahref]
          
         </li>
         <li class="_show_m2017070259584b349d1a8" style="">
          <a class="_fade_link _txt_m2017070259584b349d1a8" data-url="project" href="/project">
           <span class="plain_name" data-hover="">
            PROJECT
           </span>
          </a>
         </li>
         <li class="_show_m2017090959b2e4590f520" style="">
          [linkx]
          
         </li>
         <li class="_show_m201803145aa92d4d326fe" style="">
          <a class="_fade_link _txt_m201803145aa92d4d326fe" data-url="contents" href="/contents">
           <span class="plain_name" data-hover="">
            CONTENTS
           </span>
          </a>
         </li>
         <li class="_show_m20170516591a769228fb6" style="">
          [linkx]
          
         </li>
         <li class="_show_m2017052159215ed25973c" style="">
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="foot-foot-nav _footer_menu_wrap" style="">
        <ul class="nav nav-stacked footer-all-nav">
         <div class="_footer_menu" style="">
         </div>
         <div class="_policy_menu" style="">
          <li class="_use_policy_menu">
           [ahref]
           
          </li>
          <li class="_use_policy_menu">
           <a href="/?mode=privacy" onclick="SITE.openPrivacy();return false;">
            개인정보처리방침
           </a>
          </li>
         </div>
         <div class="_tour_policy_menu" style="display:none;">
         </div>
        </ul>
       </div>
       <div class="foot-sociallink _sns_link" style="">
        <div class="btn-group _sns_link_list" role="group">
         [linkx]
         
         [ahref]
         
         <a class="btn pull-right _5a2f09a098dfb" href="/halyang.dream/" style="" target="_blank" type="button">
          <i class="simple icon-social-facebook">
          </i>
         </a>
        </div>
       </div>
      </div>
      <div class="foot-app-menu _app_menu clearfix" style="display:none;">
       <div class="inline-blocked google">
        [linkx]
        
       </div>
      </div>
     </div>
    </div>
   </div>
  </footer>
  <iframe id="hidden_frame" name="hidden_frame" style="position: absolute; left: -9999px; width: 1px; height: 1px; top:-9999px;">
  </iframe>
  <div aria-hidden="true" class="modal" id="cocoaModal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal submodal" id="cocoaSubModal" role="dialog" style="z-index: 17001">
   <div class="modal-dialog">
    <div class="modal-content">
    </div>
   </div>
  </div>
  <div class="talk_banner_wrap">
   <div class="talk_banner_div" data-id="18549">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0476
  </b>
 </body>
</html>
|<---