--->|<!DOCTYPE doctype html >
<html lang="en-US">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="http://plusnews.koreadaily.com/wp-content/uploads/2018/12/3-2-e1545254435381.jpg" property="og:image"/>
 </head>
 <body class="post-template-default single single-post postid-14513 single-format-standard white_sand global-block-template-1 single_template_3 td-full-layout" itemscope="itemscope" itemtype="http://schema.org/WebPage">
  <div class="td-scroll-up">
   <i class="td-icon-menu-up">
   </i>
  </div>
  <div class="td-menu-background">
  </div>
  <div id="td-mobile-nav">
   [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][linkx][pkeyx][area1][keywordx]
  </div>
  <div class="td-search-background">
  </div>
  <div class="td-search-wrap-mob">
   <div aria-labelledby="td-header-search-button" class="td-drop-down-search">
    <form action="/" class="td-search-form" method="get">
     [area1][keywordx]<li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
    </form>
    <div id="td-aj-search-mob">
    </div>
   </div>
  </div>
  <div class="td-theme-wrap" id="td-outer-wrap">
   <div class="tdc-header-wrap">
    <div class="td-header-wrap td-header-style-9">
     <div class="td-header-top-menu-full td-container-wrap">
      <div class="td-container td-header-row td-header-top-menu">
       <div class="top-bar-style-4">
        <div class="td-header-sp-top-widget">
         <span class="td-social-icon-wrap">
          <a href="/koreadailyhotnews" target="_blank" title="Facebook">
           <i class="td-icon-font td-icon-facebook">
           </i>
          </a>
         </span>
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
         <span class="td-social-icon-wrap">
          [linkx]
          
         </span>
        </div>
        <div class="td-header-sp-top-menu">
         <div class="td_data_time">
          <div>
           Tuesday, August 13, 2019
          </div>
         </div>
         <div class="menu-top-container">
          <ul class="top-header-menu" id="menu-td-demo-top-menu">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-first td-menu-item td-normal-menu menu-item-32" id="menu-item-32">
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="td-banner-wrap-full td-logo-wrap-full td-logo-mobile-loaded td-container-wrap">
      <div class="td-header-sp-logo">
       [linkx]
       
      </div>
     </div>
     <div class="td-header-menu-wrap-full td-container-wrap">
      <div class="td-header-menu-wrap td-header-gradient">
       <div class="td-container td-header-row td-header-main-menu">
        <div id="td-header-menu" role="navigation">
         <div id="td-top-mobile-toggle">
          [ahref]
          
         </div>
         <div class="td-main-menu-logo td-logo-in-header">
          [linkx]
          
          [ahref]
          
         </div>
         <div class="menu-td-demo-header-menu-container">
          <ul class="sf-menu" id="menu-td-demo-header-menu-1">
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-first td-menu-item td-mega-menu menu-item-8601">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item-0">
              <div class="td-container-border">
               <div class="td-mega-grid">
                <div class="td_block_wrap td_block_mega_menu td_uid_1_5d5274550b4a5_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_1_5d5274550b4a5">
                 <div class="td_mega_menu_sub_cats">
                  <div class="block-mega-child-cats">
                   [linkx]
                   
                   [linkx]
                   
                   [ahref]
                   
                   [linkx]
                   
                  </div>
                 </div>
                 <div class="td_block_inner" id="td_uid_1_5d5274550b4a5">
                  <div class="td-mega-row">
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="td-next-prev-wrap">
                  [ahref]
                  
                  [ahref]
                  
                 </div>
                 <div class="clearfix">
                 </div>
                </div>
               </div>
              </div>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-mega-menu menu-item-2428">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item-0">
              <div class="td-container-border">
               <div class="td-mega-grid">
                <div class="td_block_wrap td_block_mega_menu td_uid_6_5d52745518c84_rand td-no-subcats td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_6_5d52745518c84">
                 <div class="td_block_inner" id="td_uid_6_5d52745518c84">
                  <div class="td-mega-row">
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="td-next-prev-wrap">
                  [ahref]<li>[ahref]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                 </div>
                 <div class="clearfix">
                 </div>
                </div>
               </div>
              </div>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-mega-menu menu-item-799">
            <li>[linkx]</li><li>[pkeyx]</li>[area1][mkey1][ahref]
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-mega-menu menu-item-8613">
            [linkx]
            
            <ul class="sub-menu">
             <li class="menu-item-0">
              <div class="td-container-border">
               <div class="td-mega-grid">
                <div class="td_block_wrap td_block_mega_menu td_uid_15_5d5274552a203_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_15_5d5274552a203">
                 <div class="td_mega_menu_sub_cats">
                  <div class="block-mega-child-cats">
                   [ahref]
                   
                   [ahref]
                   
                   [linkx]
                   
                  </div>
                 </div>
                 <div class="td_block_inner" id="td_uid_15_5d5274552a203">
                  <div class="td-mega-row">
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="td-next-prev-wrap">
                  [linkx]
                  
                  [ahref]
                  
                 </div>
                 <div class="clearfix">
                 </div>
                </div>
               </div>
              </div>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-mega-menu menu-item-386">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item-0">
              <div class="td-container-border">
               <div class="td-mega-grid">
                <div class="td_block_wrap td_block_mega_menu td_uid_19_5d5274553088d_rand td-no-subcats td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_19_5d5274553088d">
                 <div class="td_block_inner" id="td_uid_19_5d5274553088d">
                  <div class="td-mega-row">
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="td-next-prev-wrap">
                  [ahref]
                  
                  [linkx]
                  
                 </div>
                 <div class="clearfix">
                 </div>
                </div>
               </div>
              </div>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-mega-menu menu-item-8231">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item-0">
              <div class="td-container-border">
               <div class="td-mega-grid">
                <div class="td_block_wrap td_block_mega_menu td_uid_20_5d527455355ea_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_20_5d527455355ea">
                 <div class="td_mega_menu_sub_cats">
                  <div class="block-mega-child-cats">
                   [ahref]
                   
                   [ahref]
                   
                   [ahref]
                   
                   [ahref]
                   
                   [linkx]
                   
                  </div>
                 </div>
                 <div class="td_block_inner" id="td_uid_20_5d527455355ea">
                  <div class="td-mega-row">
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     [area1][mkey1][pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="td-next-prev-wrap">
                  [linkx]
                  
                  [ahref]
                  
                 </div>
                 <div class="clearfix">
                 </div>
                </div>
               </div>
              </div>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-mega-menu menu-item-8675">
            [linkx]
            
            <ul class="sub-menu">
             <li class="menu-item-0">
              <div class="td-container-border">
               <div class="td-mega-grid">
                <div class="td_block_wrap td_block_mega_menu td_uid_26_5d5274553bac4_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_26_5d5274553bac4">
                 <div class="td_mega_menu_sub_cats">
                  <div class="block-mega-child-cats">
                   [linkx]
                   
                   [ahref]
                   
                   [linkx]
                   
                   [ahref]
                   
                  </div>
                 </div>
                 <div class="td_block_inner" id="td_uid_26_5d5274553bac4">
                  <div class="td-mega-row">
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [ahref]
                       
                      </div>
                      [linkx]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                      </h3>
                     </div>
                    </div>
                   </div>
                   <div class="td-mega-span">
                    <div class="td_module_mega_menu td-animation-stack td_mod_mega_menu">
                     <div class="td-module-image">
                      <div class="td-module-thumb">
                       [linkx]
                       
                      </div>
                      [ahref]
                      
                     </div>
                     <div class="item-details">
                      <h3 class="entry-title td-module-title">
                       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                      </h3>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="td-next-prev-wrap">
                  [ahref]
                  
                  [linkx]
                  
                 </div>
                 <div class="clearfix">
                 </div>
                </div>
               </div>
              </div>
             </li>
            </ul>
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children td-menu-item td-normal-menu menu-item-11442">
            [ahref]
            
            <ul class="sub-menu">
             <li class="menu-item menu-item-type-post_type menu-item-object-page td-menu-item td-normal-menu menu-item-15676">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-15672">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-15673">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent td-menu-item td-normal-menu menu-item-15674">
              [ahref]
              
             </li>
             <li class="menu-item menu-item-type-taxonomy menu-item-object-category td-menu-item td-normal-menu menu-item-15675">
              [ahref]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </div>
        <div class="header-search-wrap">
         <div class="td-search-btns-wrap">
          <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="td-header-search-button" role="button">
           <i class="td-icon-search">
           </i>
          </a>
          [linkx]
          
         </div>
         <div aria-labelledby="td-header-search-button" class="td-drop-down-search">
          <form action="/" class="td-search-form" method="get">
           <div class="td-head-form-search-wrap" role="search">
           </div>
          </form>
          <div id="td-aj-search">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="td-banner-wrap-full td-banner-bg td-container-wrap">
      [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][ahref][linkx][linkx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </div>
    </div>
   </div>
   <article class="td-post-template-3 post-14513 post type-post status-publish format-standard has-post-thumbnail category-nexen- category-127 td-container-wrap" id="post-14513" itemscope="" itemtype="http://schema.org/Article">
    <div class="td-post-header td-container">
     <div class="td-crumb-container">
      <div class="entry-crumbs">
       <span>
        [linkx]
        
       </span>
       <i class="td-icon-right td-bread-sep">
       </i>
       <span>
        [ahref]
        
       </span>
       <i class="td-icon-right td-bread-sep td-bred-no-url-last">
       </i>
       <span class="td-bred-no-url-last">
        눈같은 모래가 만드는 백색 신천지: 화이트 샌드 국립 기념지
       </span>
      </div>
     </div>
     <div class="td-post-header-holder td-image-gradient">
      <div class="td-post-featured-image">
       [ahref]
       
      </div>
      <header class="td-post-title">
       <ul class="td-category">
        <li class="entry-category">
         [ahref]
         
        </li>
        <li class="entry-category">
         [linkx]
         
        </li>
       </ul>
       <h1 class="entry-title">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h1>
       <p class="td-post-sub-title">
        넥센타이어와 함께하는 신현식의 대륙탐방
       </p>
       <div class="td-module-meta-info">
        <span class="td-post-date">
         <time class="entry-date updated td-module-date" datetime="2018-12-19T13:28:47+00:00">
          December 19, 2018
         </time>
        </span>
        <div class="td-post-views">
         <i class="td-icon-views">
         </i>
         <span class="td-nr-views-14513">
          2702
         </span>
        </div>
       </div>
      </header>
     </div>
    </div>
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span8 td-main-content" role="main">
       <div class="td-ss-main-content">
        <div class="td-post-sharing-top">
         <div class="td-post-sharing td-ps-bg td-ps-notext td-post-sharing-style1" id="td_social_sharing_article_top">
          <div class="td-post-sharing-visible">
           [linkx]
           
           [linkx]
           
           [linkx]
           
           [ahref]
           
           [ahref]
           
          </div>
          <div class="td-social-sharing-hidden">
           <ul class="td-pulldown-filter-list">
           </ul>
           [ahref]
           
          </div>
         </div>
        </div>
        <div class="td-post-content">
         <div class="td-a-rec td-a-rec-id-content_top td-rec-hide-on-m td-rec-hide-on-tl td-rec-hide-on-tp td-rec-hide-on-p td_uid_32_5d5274554441e_rand td_block_template_1">
          <div class="td-all-devices">
           [ahref]
           
          </div>
         </div>
         <div class="plusn-before-content" id="plusn-1909224246">
         </div>
         <p>
          눈이 시릴 정도로 하얀 모래다. 공원입구 모래능선은 모래 썰매를 타는 아이들과 행락객이 점령했다. 이들이 밞아놓은 모래사장은 처참하게 짓밟혀 일그러져 있었다. 또 다른 이들은 무리를 피해 사막의 속살로 들어가고 있었다.
         </p>
         <p>
          태양이 작렬하는 눈밭 같은 모래사막을 사람들은 순례하듯 걷고 있었다. 더운 탓에 하나같이 머리를 떨구고 시선을 모래에 뒀다. 누구도 범접할 수 없을 것 같은 하얀 살 같은 모래를 밟고 터벅 터벅 걷고 있었다.
         </p>
         <p>
         </p>
         <figure aria-describedby="caption-attachment-14516" class="wp-caption alignnone" id="attachment_14516" style="width: 696px">
          <figcaption class="wp-caption-text" id="caption-attachment-14516">
           화이트샌드 국립기념지는 1년에 60여만 명이 찾아오는 최고의 관광지다.
          </figcaption>
         </figure>
         <p>
          고단한 삶을 위로 받기라도 하려는 듯 사막의 우물을 찾아나선다. 하얀 모래사막은 희망을 찾는 곳이었다. 어느새 하얀 모래는 떨어지는 태양에 물들어 노랗게 변하고 있었다.
         </p>
         <p>
          하얀 사막은 말 그대로 하얀 모래로 가득한 곳이다.
         </p>
         <p>
          화이트 샌드 기념지가 자리 잡은 툴라로사 분지는 약 2억5000만 년 전 얕은 바다였다. 7000만 년 전 융기 현상으로 고원지대가 됐고 1000만 년 전에 다시 가라 앉아 분지가 됐다.
         </p>
         <p>
          동서 양쪽의 산에서 흘러들어오는 개울물에 녹아서 들어오는 석고물질이 분지에 있는 호수로 들어왔다. 분지가 돼 호수에 들어온 물은 바다로 나가지 못하고 갇혔다. 여름에도 가뭄이 심한 까닭에 호수가 증발되고 물속에 녹아 있던 석고는 투명석고라는 수정체가 돼 바닥에 남게 됐다.
         </p>
         <p>
          단단한 투명석고가 풍화작용으로 깨어지고 부서져서 흰 석고 모래 언덕이 탄생했다. 원래 수정 유리처럼 투명한 결정체였으나 입자끼리 부딪치고 긁혀서 표면이 부옇게 모래같이 됐다.
         </p>
         <p>
         </p>
         <figure aria-describedby="caption-attachment-14521" class="wp-caption alignnone" id="attachment_14521" style="width: 696px">
          <figcaption class="wp-caption-text" id="caption-attachment-14521">
           해발 1218미터의 고원지대며 여름의 경우 평균기온이 95도에 달할 정도로 무덥다.
          </figcaption>
         </figure>
         <p>
          그런 까닭에 흰 모래라고 말하지만 엄격히 말해서 이것은 전혀 보통 말하는 모래와는 무관하다. 모래 언덕은 지금도 바람에 의해서 매년 30피트 정도씩 이동하며 언덕의 모양도 계속 변하고 있다. 면적은 무려 275스퀘어마일이 되며 약 40%가 기념지에 속한다.
         </p>
         <p>
          공원안내소를 출발해 모래사막을 관통하는 8마일 길은 온통 하얀 세상이었다. 듄스 드라이브 끝에는 주차공간과 해를 피할 수 있는 피크닉 테이블들이 있다. 이른 아침이나 해지기 두 시간 전쯤에 사막 풍경 사진찍기 좋은 왕복 4.5마일 코스 알카리 프랫 트레일 등이 인기 있다.
         </p>
         <p>
         </p>
         <figure aria-describedby="caption-attachment-14526" class="wp-caption alignnone" id="attachment_14526" style="width: 696px">
          <figcaption class="wp-caption-text" id="caption-attachment-14526">
           남쪽 입구 가까운 곳에서 시작되는 빅듄 내처 트레일은 1마일 정도 되는 쉬운 코스다.
          </figcaption>
         </figure>
         <p>
          트레일을 벗어나 하이킹을 할 경우에는 GPS나 나침반을 휴대하고 가야한다. 모래밭 안에서 방향 감각을 잃고 한 곳을 맴도는 위험한 링반테룽 현상을 겪을 수 있기 때문이다. 물과 선글라스는 필수다.
         </p>
         <p>
          텍사스주 엘파소에서 동북쪽으로 100여 마일 가면 화이트 샌드 국립공원이 나온다. 화이트 샌드를 지나는 70번 도로는 군사지역이다. 미사일 발사 시험을 할 경우 70번 도로가 몇 시간 폐쇄될 수 있다고 경고한다.
         </p>
         <p>
          사막의 우물은 고통, 근심, 걱정이 없는 곳이다. 화이트 샌드를 걷다 보면 사막의 우물은 마음속 깊은 곳에 존재함을 알려준다.
         </p>
         <figure aria-describedby="caption-attachment-14527" class="wp-caption alignnone" id="attachment_14527" style="width: 696px">
          <figcaption class="wp-caption-text" id="caption-attachment-14527">
           기념지 내부에는 여러 정보를 얻을 수 있는 비지터 센터가 있다.
          </figcaption>
         </figure>
         <section class="relation_article-box ma_top60" id="relationArticles">
          <hr/>
         </section>
         <p>
          <strong>
           글, 사진 / 신현식
          </strong>
         </p>
         <p>
          <em>
           23년간 미주중앙일보 사진기자로 일하며 사진부장과
          </em>
          <em>
           사진 전문위원을 역임했다. 93년 도미 전까지 한국에서 광고사진 스튜디오 ‘옥슨’ 설립, 진도그룹 사진실장, 여성지 ‘행복이 가득한 집’과 ‘마리끌레르’ 의 사진 책임자로 일했으며 진도패션 광고 사진으로 중앙광고대상을 수상하기도 했다. 한국 최초 성소수자 사진전은 큰 반향을 일으켰다.
           <br/>
           2016년 6월 RV카로 미국 전역을 여행하기 시작했으며 2년 10개월 동안 40여개 주를 방문했다. 여행기 ‘신현식 기자의 대륙탐방’을 미주중앙일보에 연재 중이다.
          </em>
         </p>
         <div class="td-a-rec td-a-rec-id-content_bottom td-rec-hide-on-m td-rec-hide-on-tl td-rec-hide-on-tp td-rec-hide-on-p td_uid_33_5d52745544787_rand td_block_template_1">
          <div class="td-all-devices">
           <li>[linkx]</li><li>[pkeyx]</li><li>[area1][keywordx]</li><li>[ahref]</li><li>[pkeyx]</li>
          </div>
         </div>
        </div>
        <footer>
         <div class="td-post-source-tags">
         </div>
         <div class="td-block-row td-post-next-prev">
          <div class="td-block-span6 td-post-prev-post">
           <div class="td-post-next-prev-content">
            <span>
             Previous article
            </span>
            [linkx]
             [area1][mkey1][ahref]<li>[ahref]</li>
            
           </div>
          </div>
          <div class="td-next-prev-separator">
          </div>
          <div class="td-block-span6 td-post-next-post">
           <div class="td-post-next-prev-content">
            <span>
             Next article
            </span>
            [linkx]
            
           </div>
          </div>
         </div>
         <div class="author-box-wrap">
          <a href="/author/chowonhee/">
          </a>
          <div class="desc">
           <div class="td-author-name vcard author">
            <span class="fn">
             [linkx]
             
            </span>
           </div>
           <div class="td-author-description">
            미주중앙일보 디지털부 조원희 기자. '조원희의 M&amp;M' 에서 제일 좋아하는 주제인 영화와 음악에 대해 씁니다. M&amp;M은 좋은 친구에게 받는 영화나 음악 추천과 같은 글입니다.<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][mkey1]</li>[area1][mkey1]
           </div>
           <div class="td-author-social">
           </div>
           <div class="clearfix">
           </div>
          </div>
         </div>
         <span class="td-page-meta" itemprop="author" itemscope="" itemtype="https://schema.org/Person">
          <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
         </span>
         <meta content="2018-12-19T13:28:47+00:00" itemprop="datePublished"/>
         <meta content="2018-12-19T13:28:47-07:00" itemprop="dateModified"/>
         <meta itemid="http://plusnews.koreadaily.com/white_sand/" itemprop="mainEntityOfPage" itemscope="" itemtype="https://schema.org/WebPage">
          <span class="td-page-meta" itemprop="publisher" itemscope="" itemtype="https://schema.org/Organization">
           <span class="td-page-meta" itemprop="logo" itemscope="" itemtype="https://schema.org/ImageObject">
            <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
           </span>
           <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
          </span>
          <meta content="눈같은 모래가 만드는 백색 신천지: 화이트 샌드 국립 기념지" itemprop="headline "/>
          <span class="td-page-meta" itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
           <li>[area1][keywordx]</li>[ahref]<li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          </span>
         </meta>
        </footer>
        <div class="td_block_wrap td_block_related_posts td_uid_34_5d52745545ea2_rand td_with_ajax_pagination td-pb-border-top td_block_template_1" data-td-block-uid="td_uid_34_5d52745545ea2">
         <h4 class="td-related-title td-block-title">
          [linkx]
          
          [linkx]
          
         </h4>
         <div class="td_block_inner" id="td_uid_34_5d52745545ea2">
          <div class="td-related-row">
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              [area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][ahref][area1][keywordx]
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [linkx]
               
              </div>
              [linkx]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [linkx]
               
              </div>
              [linkx]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
          </div>
          <div class="td-related-row">
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [ahref]
               
              </div>
              [ahref]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [ahref]
               
              </div>
              [linkx]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [linkx]
               
              </div>
              [ahref]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
          </div>
          <div class="td-related-row">
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [linkx]
               
              </div>
              [linkx]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [linkx]
               
              </div>
              [linkx]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
           <div class="td-related-span4">
            <div class="td_module_related_posts td-animation-stack td_mod_related_posts">
             <div class="td-module-image">
              <div class="td-module-thumb">
               [ahref]
               
              </div>
              [ahref]
              
             </div>
             <div class="item-details">
              <h3 class="entry-title td-module-title">
               <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
              </h3>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="td-next-prev-wrap">
          [area1][keywordx][pkeyx][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][ahref][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][mkey1][ahref][area1][mkey1][pkeyx][area1][mkey1][pkeyx][area1][mkey1][area1][mkey1][pkeyx][linkx][pkeyx][ahref]
         </div>
        </div>
        <div class="comments" id="comments">
         <div class="comment-respond" id="respond">
          <h3 class="comment-reply-title" id="reply-title">
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h3>
          <form action="/wp-comments-post.php" class="comment-form" id="commentform" method="post" novalidate="">
           <div class="clearfix">
           </div>
           <div class="comment-form-input-wrap td-form-comment">
            <div class="td-warning-comment">
             Please enter your comment!
            </div>
           </div>
           <div class="comment-form-input-wrap td-form-author">
            <div class="td-warning-author">
             Please enter your name here
            </div>
           </div>
           <div class="comment-form-input-wrap td-form-email">
            <div class="td-warning-email-error">
             You have entered an incorrect email address!
            </div>
            <div class="td-warning-email">
             Please enter your email address here
            </div>
           </div>
           <div class="comment-form-input-wrap td-form-url">
           </div>
           <p class="comment-form-cookies-consent">
            <label for="wp-comment-cookies-consent">
             Save my name, email, and website in this browser for the next time I comment.
            </label>
           </p>
           <p class="form-submit">
           </p>
          </form>
         </div>
        </div>
       </div>
      </div>
      <div class="td-pb-span4 td-main-sidebar" role="complementary">
       <div class="td-ss-main-sidebar">
        <div class="td-a-rec td-a-rec-id-custom_ad_2 td_uid_37_5d5274554ef41_rand td_block_template_1">
         <div id="div-gpt-ad-1520551934414-2" style="height:250px; width:300px;">
         </div>
        </div>
        <div class="td_block_wrap td_block_text_with_title td_block_widget td_uid_38_5d5274554f520_rand td-pb-border-top td_block_template_5" data-td-block-uid="td_uid_38_5d5274554f520">
         <div class="td-block-title-wrap">
          <h4 class="td-block-title">
           <span class="td-pulldown-size">
            NEXEN_ROADTRIP
           </span>
          </h4>
         </div>
         <div class="td_mod_wrap td-fix-index">
          <div class="sbi sbi_mob_col_auto sbi_fixed_height sbi_col_3" data-cols="3" data-id="7298546158" data-num="9" data-options='{"sortby": "none", "showbio": "false","feedID": "7298546158", "headercolor": "832e93", "imagepadding": "1","mid": "M2E4MWE5Zg==", "disablecache": "false", "sbiCacheExists": "true","callback": "NWZkNWRkZmRmZTAz.NGY3ZmFlNzY2MDA3NmY5YjMyMDE=", "sbiHeaderCache": "true"}' data-res="auto" id="sb_instagram" style="width:100%; height:450px; background-color: #ffffff; padding-bottom: 2px; ">
           <div class="sb_instagram_header" style="padding: 2px; padding-bottom: 0;">
           </div>
           <div id="sbi_images" style="padding: 1px;">
            <div class="sbi_loader">
            </div>
           </div>
           <div class="sbi_hidden" id="sbi_load">
            [linkx]
            
            <span class="sbi_follow_btn sbi_custom">
             [linkx]
             
            </span>
           </div>
          </div>
         </div>
        </div>
        <aside class="td_block_template_1 widget widget_media_video">
         <div class="wp-video" style="width:100%;">
          <video class="wp-video-shortcode" controls="controls" id="video-14513-1" preload="metadata">
           <source src="https://www.youtube.com/watch?time_continue=32&amp;v=ezx7VmykaFs&amp;_=1" type="video/youtube"/>
           [linkx]
           
          </video>
         </div>
        </aside>
        <div class="td_block_wrap td_block_14 td_block_widget td_uid_39_5d52745550fdd_rand td-pb-full-cell td-pb-border-top td_block_template_5 td-column-1" data-td-block-uid="td_uid_39_5d52745550fdd">
         <div class="td-block-title-wrap">
          <h4 class="td-block-title">
           [ahref]
           
          </h4>
         </div>
         <div class="td_block_inner td-column-1" id="td_uid_39_5d52745550fdd">
          <div class="td-block-span12">
           <div class="td_module_mx1 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             [ahref]
             
            </div>
            <div class="td-module-meta-info">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-editor-date">
              <span class="td-author-date">
               <span class="td-post-date">
                <time class="entry-date updated td-module-date" datetime="2018-03-14T11:06:29+00:00">
                 March 14, 2018
                </time>
               </span>
              </span>
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_mx1 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             [linkx]
             
            </div>
            <div class="td-module-meta-info">
             <h3 class="entry-title td-module-title">
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h3>
             <div class="td-editor-date">
              <span class="td-author-date">
               <span class="td-post-date">
                <time class="entry-date updated td-module-date" datetime="2018-04-11T10:00:24+00:00">
                 April 11, 2018
                </time>
               </span>
              </span>
             </div>
            </div>
           </div>
          </div>
          <div class="td-block-span12">
           <div class="td_module_mx1 td_module_wrap td-animation-stack">
            <div class="td-module-thumb">
             [ahref]
             
            </div>
            <div class="td-module-meta-info">
             <h3 class="entry-title td-module-title">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <div class="td-editor-date">
              <span class="td-author-date">
               <span class="td-post-date">
                <time class="entry-date updated td-module-date" datetime="2018-08-15T13:27:58+00:00">
                 August 15, 2018
                </time>
               </span>
              </span>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="clearfix">
        </div>
       </div>
      </div>
     </div>
    </div>
   </article>
   <div class="td-footer-wrapper td-footer-container td-container-wrap">
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span12">
      </div>
     </div>
     <div class="td-pb-row">
      <div class="td-pb-span12">
      </div>
     </div>
    </div>
    <div class="td-footer-bottom-full">
     <div class="td-container">
      <div class="td-pb-row">
       <div class="td-pb-span3">
        <aside class="footer-logo-wrap">
         [ahref]
         
        </aside>
       </div>
       <div class="td-pb-span5">
        <aside class="footer-text-wrap">
         <div class="block-title">
          <span>
           ABOUT US
          </span>
         </div>
         플러스 뉴스 plus news는 미주중앙일보 KOREADAILY.COM이 만드는 디지털 스페셜 사이트입니다.
        </aside>
       </div>
       <div class="td-pb-span4">
        <aside class="footer-social-wrap td-social-style-2">
         <div class="block-title">
          <span>
           FOLLOW US
          </span>
         </div>
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
         <span class="td-social-icon-wrap">
          [linkx]
          
         </span>
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
         <span class="td-social-icon-wrap">
          [ahref]
          
         </span>
        </aside>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="td-sub-footer-container td-container-wrap">
    <div class="td-container">
     <div class="td-pb-row">
      <div class="td-pb-span td-sub-footer-menu">
       <div class="menu-td-demo-top-menu-container">
        <ul class="td-subfooter-menu" id="menu-td-demo-top-menu-1">
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-first td-menu-item td-normal-menu menu-item-32">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="td-pb-span td-sub-footer-copy">
       © Copyright 2016 - 미주중앙일보 KOREADAILY.COM
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="td-more-articles-box">
   <i class="td-icon-close td-close-more-articles-box">
   </i>
   <span class="td-more-articles-box-title">
    MORE STORIES
   </span>
   <div class="td-content-more-articles-box">
    <div class="td_module_7 td_module_wrap td-animation-stack">
     [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][area1][mkey1][ahref][linkx][pkeyx]
    </div>
    <div class="td_module_7 td_module_wrap td-animation-stack">
     <div class="td-module-thumb">
      <a class="td-image-wrap" href="/angel_island/" rel="bookmark" title="1920년대 한인 이민자들 거쳐간 천사의 섬: 앤젤 아일랜드">
      </a>
     </div>
     <div class="item-details">
      <h3 class="entry-title td-module-title">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <div class="td-module-meta-info">
       <span class="td-post-date">
        <time class="entry-date updated td-module-date" datetime="2018-11-15T14:29:07+00:00">
         November 15, 2018
        </time>
       </span>
      </div>
     </div>
    </div>
    <div class="td_module_7 td_module_wrap td-animation-stack">
     <li>[ahref]</li><li>[pkeyx]</li><li>[area1][keywordx]</li>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0296
  </b>
 </body>
</html>
|<---