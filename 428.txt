--->|<!DOCTYPE html>
<html>
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="none" http-equiv="x-pjax-version"/>
  <meta content="the seed" name="generator"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="application-name"/>
  <meta content="yes" name="mobile-web-app-capable"/>
  <meta content="나무위키" name="msapplication-tooltip"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-starturl"/>
  <meta content="#008275" name="theme-color"/>
  <meta content="user-scalable=no, initial-scale=1.0, maximum-scale=5.0, minimum-scale=1.0, width=device-width" name="viewport"/>
  <meta content="noarchive" name="googlebot"/>
 </head>
 <body class="senkawa">
  <div class="navbar-wrapper">
   <nav class="navbar navbar-dark bg-inverse navbar-static-top">
    [linkx]
    
    <ul class="nav navbar-nav">
     <li class="nav-item">
      [ahref]
      
     </li>
     <li class="nav-item">
      [linkx]
      
     </li>
     <li class="nav-item dropdown">
      [ahref]
      
      <div class="dropdown-menu right">
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       [linkx]
       
       [ahref]
       
       [linkx]
       
       [ahref]
       
       [linkx]
       
       [ahref]
       
       [ahref]
       
       [ahref]
       
       [linkx]
       
      </div>
     </li>
     <li class="nav-item dropdown">
      <a aria-expanded="false" aria-haspopup="true" class="nav-link dropdown-toggle" data-toggle="dropdown" href="#" role="button" title="나무라이브">
       <span class="icon ion-android-list">
       </span>
       <span class="icon-title">
        라이브
       </span>
       <span class="caret">
       </span>
      </a>
      <div class="dropdown-menu right">
       [ahref]
       
       [linkx]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
        <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
       
       [linkx]
       
       [linkx]
       
       <a class="dropdown-item" href="/b/society">
        사회 채널
       </a>
       <a class="dropdown-item" href="/b/lgbt">
        성소수자 채널
       </a>
       [ahref]
       
       <a class="dropdown-item" href="/b/sports">
        스포츠 채널
       </a>
       <a class="dropdown-item" href="/b/city">
        도시·지리 채널
       </a>
      </div>
     </li>
    </ul>
    <ul class="nav navbar-nav pull-right">
     <li class="nav-item dropdown user-menu-parent">
      <a aria-haspopup="true" class="nav-link dropdown-toggle user-menu" data-toggle="dropdown" href="#" title="Member Menu">
       <span class="icon ion-person">
       </span>
      </a>
      <div class="dropdown-menu user-dropdown right">
       <div class="dropdown-item user-info">
        <div class="user-info">
         <div>
          219.145.144.65
         </div>
         <div>
          Please login!
         </div>
        </div>
       </div>
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [linkx]
       
       [ahref]
       
       <div class="dropdown-divider">
       </div>
       [ahref]
       
      </div>
     </li>
    </ul>
    <form class="form-inline navbar-form search-box-parent">
     <div class="input-group search-box">
      <span class="input-group-btn left-search-btns">
       [linkx]
       
      </span>
      <span class="input-group-btn right-search-btns">
       <button class="btn btn-secondary" id="searchBtn" type="button">
        <span class="icon ion-search">
        </span>
       </button>
       <button class="btn btn-secondary" id="goBtn" type="button">
        <span class="icon ion-arrow-right-c">
        </span>
       </button>
      </span>
     </div>
    </form>
   </nav>
  </div>
  <div class="content-wrapper">
   <aside class="sidebar has-site-notice">
    <div class="card recent-card">
     <h5 class="card-title">
      최근 변경
     </h5>
     <div class="link-table" id="recentChangeTable">
      [linkx]
      
     </div>
     [linkx]
     
    </div>
    <div class="test-ad-card">
     <iframe frameborder="0" height="270" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/c/270x270.html?v=2" width="270">
     </iframe>
    </div>
    <div class="card live-list-card" data-count="20" data-slug="headline">
     <h5 class="card-title">
      헤드라인 최신글
     </h5>
     <div class="link-table">
      [ahref]
      
     </div>
     [ahref]
     
    </div>
    <div class="ad-card">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-slot="2029530375" style="display:inline-block;width:160px;height:600px">
     </ins>
    </div>
   </aside>
   <article class="container-fluid wiki-article">
    <div class="wiki-article-menu">
     <div class="btn-group" role="group">
      [ahref]
      
      [ahref]
      
      <a class="btn btn-secondary" href="/discuss/%ED%95%99%EA%B5%90%EC%9D%98%20%EC%95%84%EC%9D%B4%EB%8F%8C" role="button">
       토론
      </a>
      [linkx]
      
      [ahref]
      
      [linkx]
      
     </div>
    </div>
    <h1 class="title">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h1>
    <p class="wiki-edit-date">
     최근 수정 시각:
     <time data-format="Y-m-d H:i:s" datetime="2019-06-18T06:13:18.000Z">
      2019-06-18 06:13:18[ahref][linkx]<li>[area1][keywordx]</li>
     </time>
    </p>
    <div class="adsense">
     <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="horizontal" data-ad-slot="3379361405" data-full-width-responsive="false" style="display:block">
     </ins>
    </div>
    <div class="wiki-category">
     <h2>
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <ul>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="wiki-content clearfix">
     <div class="wiki-inner-content">
      <div class="wiki-paragraph">
       <div class="wiki-macro-toc" id="toc">
        <div class="toc-indent">
         <span class="toc-item">
          [linkx]
          
          . 개요
         </span>
         <span class="toc-item">
          [linkx]
          
          . 상세
         </span>
         <span class="toc-item">
          [ahref]
          
          . 현실
         </span>
         <span class="toc-item">
          [ahref]
          
          . 해당하는 캐릭터
         </span>
         <span class="toc-item">
          [ahref]
          
          . 일단 아이돌은 맞는데 별개의 케이스
         </span>
        </div>
       </div>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        学園のアイドル
        <br/>
        <br/>
        일본
        [ahref]
        
        이라면 으레 하나 쯤은 있는
        <a class="wiki-link-internal" href="/w/%ED%81%B4%EB%A6%AC%EC%85%B0" title="클리셰">
         클리셰
        </a>
        중 하나다. 작품의 주무대가 되는
        <a class="wiki-link-internal" href="/w/%ED%95%99%EA%B5%90" title="학교">
         학교
        </a>
        라는 커뮤니티에서 우상화되는 인물을 가리킨다. 시초이자 가장 유명한 캐릭터로는 아마도
        [ahref]
        
        의
        [linkx]
        
        일 것이다.
        [ahref]
        
        의 대중 문화 작품에서 자주 등장하는 인물 유형.
        [linkx]
        
        도 일본만화의 영향으로 웹툰에서 학교가 배경으로 나오면 아이돌만큼은 아니지만 다른 학생보다 눈에 띄고 인기 많은 엄친아나 엄친딸이 한두 명씩 등장하는 경우가 꽤 있긴 하다. 특히 장르가
        [linkx]
        
        로 가면 더 흔해진다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        대체로 교내 제일의
        [linkx]
        
        이며, 그 밖에
        [linkx]
        
        나
        <a class="wiki-link-internal" href="/w/%EC%8A%A4%ED%8F%AC%EC%B8%A0" title="스포츠">
         스포츠
        </a>
        에도 뛰어난 팔방미인이라는 설정이 붙는 경우가 많다. 가끔은 집안도
        [ahref]
        
        라서
        <a class="wiki-link-internal" href="/w/%EC%97%84%EC%B9%9C%EC%95%84" title="엄친아">
         엄친아
        </a>
        가 되기도 하며, 집안에 권력이 있어서 선생도 꼼짝을 못하는 경우가 있다. 이런 것도 아니라면 연예인이거나 모델이라는 설정 등 아무튼 외모 외에도 무언가 다른 학생들이 갖추지 못하는 우월한 무언가를 적어도 하나씩은 갖추고 있는 경우가 대다수.
        <br/>
        <br/>
        다른 학생들이 사방에서 줄줄 따라다니거나, 매일 아침 고백 편지가 신발장에 가득 차거나, 급기야 팬클럽이나 친위대, 심하면
        <a class="wiki-link-internal" href="/w/%EC%82%AC%EC%83%9D%ED%8C%AC" title="사생팬">
         사생팬
        </a>
        까지 결성되는 사태를 불러 일으키는 존재이다.
        <a class="wiki-link-internal" href="/w/%ED%94%84%EB%A6%AC%ED%8C%8C%EB%9D%BC" title="프리파라">
         프리파라
        </a>
        나
        <a class="wiki-link-internal" href="/w/%EB%9F%AC%EB%B8%8C%EB%9D%BC%EC%9D%B4%EB%B8%8C!" title="러브라이브!">
         러브라이브!
        </a>
        처럼 학교의 아이돌로 설정되었거나 친구가 많은 캐릭터가 레알로 작중에서
        [linkx]
        
        (
        [linkx]
        
        ) 활동을 하고 있는 경우도 있다.
        <br/>
        <br/>
        크게 분류하면
       </div>
       <ul class="wiki-list">
        <li>
         <div class="wiki-paragraph">
          자신이
          [linkx]
          
          로 여겨지며 인기 있다는 것을 알지만 그에 대해 크게 신경쓰지 않거나, 귀찮아 하는 타입. 주로 어른스러운 성격의 캐릭터가 이런 경우가 많다.
          [linkx]
          
          나
          [linkx]
          
          타이틀이 옵션(?)으로 붙기도 한다.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          자신이 인기가 있다는 것조차 잘 모르고 자신을 평범하다고 생각하는 타입. 이 경우는 순수한 천연캐릭터인 경우가 대다수.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          아이돌로서 인기가 있다는 것을 잘 알고 그것을 이용하여 여왕 노릇을 하는 타입. 이런 경우는
          [linkx]
          
          쪽에 더 가까워진다.
         </div>
        </li>
       </ul>
       <div class="wiki-paragraph">
        <br/>
        등으로 나눌 수 있다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <div class="wiki-paragraph">
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%EC%9D%BC%EB%B3%B8%20%EB%A7%8C%ED%99%94" title="일본 만화">
         일본 만화
        </a>
        트렌드상 대다수의 인물관이 비현실의 정점을 달리며 어디에서나 보기 힘든 종류의 인물상이다.
        <br/>
        <br/>
        물론 이렇게 학교 전체가 아니라 학내에 연예인급 외모의 얼짱이나 학내에 진짜 현역 연예인이 있다면 조금 비슷한 정도일지도 모르지만, 애초에 정말 유명한 연예인인 경우 학교에 1년에 한두 번 올까말까하다. 혹은 이를테면, 모 여아이돌 그룹 연습생 출신으로 데뷔를 포기하고 유명 대학에 진학한 것으로 화제가 되었던 모 여학생의 경우 좀 유명하긴 하지만 아이돌 수준까지는 아니다.
        <br/>
        <br/>
        국내에서 이런 캐릭터에 가장 가까웠던 인물의 예를 들면
        [ahref]
        
        ,
        <a class="wiki-link-internal" href="/w/%EC%9D%B4%EC%8A%B9%EA%B8%B0" title="이승기">
         이승기<li>[area1][keywordx]</li>[area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>
        </a>
        ,
        <a class="wiki-link-internal" href="/w/%EC%9D%B4%ED%9A%A8%EB%A6%AC#s-2" title="이효리">
         이효리
        </a>
        ,
        [ahref]
        
        가 있다. 이런 인물들은 상당수가 연예인으로 데뷔하기 전 학생 때 관심 있는 이성들을 끌고다니는 일이 무용담처럼 전해지곤 한다. 대표적인 게 울산여고 시절 김태희.
        <br/>
        <br/>
        단지 이 개념이 창작물에 자주 나오는
        [ahref]
        
        의 경우 "지모토 아이돌"이라 불리는 특정 지방에서 다소 특별하게 여겨지는 인물이 실제로 있기도 하며 일본이라는 국가의 특별한 문화 중 하나로 여겨진다.
        <br/>
        <br/>
        아니 애초에 굳이 일본에 국한하지 않더라도 2차원에서 나오는 과장된 설정, 그러니까 무슨 친위대가 존재한다거나, 해당 인물이 나타나면 모두 껌뻑 죽는다거나 하는 설정을 제하고 보면 학교나 학원에서 특별한 위상을 지닌 사람이 종종 존재하는 경우는 세계 어디에서나 흔히 찾을 수 있다.
        [linkx]
        
        의 7, 80년대 대학가에서 이야기 하는
        [linkx]
        
        ,
        <a class="wiki-link-internal" href="/w/%EB%AF%B8%EA%B5%AD" title="미국">
         미국
        </a>
        의 고등학교에서 이야기하는 "프롬 퀸", "잇-걸(it-girl)" 등이 그 예. 물론 창작물에서 묘사되는 수준의 숭배(?)는 거의 없으며, 이마저도 대학이나 일부 국가의 고등학교 같은 자유로운 학제에서나 볼 수 있을 뿐이지 한국의 중고등학교같이 경직된 학제 내에서는 사실상 없다고 봐도 무방하다. 한국에서는 중고등학교보다는
        [linkx]
        
        에서 그나마 좀 더 창작물과 비슷한 개념이 있을 확률이 높다.
        <br/>
       </div>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <ul class="wiki-list">
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/F4" title="F4">
           F4
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          SA 전원 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <del>
           김체리
          </del>
          김귤
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%B2%B4%EB%A6%AC%EB%B3%B4%EC%9D%B4%20%EA%B7%B8%EB%85%80" title="체리보이 그녀">
           체리보이 그녀
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EB%82%98%EB%A3%A8%ED%86%A0" title="나루토">
           나루토
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          나루토키 코노미 - 파랑과 청의 물방울 -a calling from tears-
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <h3>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          [linkx]
          
          -
          [ahref]
          
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          나이토 쿄코,
          [linkx]
          
          , 니시모토 에리카 -
          <a class="wiki-link-internal" href="/w/%EC%98%A4%EB%82%98%EB%8B%88%20%EB%A7%88%EC%8A%A4%ED%84%B0%20%EC%BF%A0%EB%A1%9C%EC%82%AC%EC%99%80" title="오나니 마스터 쿠로사와">
           오나니 마스터 쿠로사와
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EB%82%98%EC%B8%A0%EC%B9%B4%EC%99%80%20%EB%A7%88%EC%8A%A4%EC%A6%88" title="나츠카와 마스즈">
           나츠카와 마스즈
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          남세희 -
          <a class="wiki-link-internal" href="/w/%EC%98%A4%ED%9B%84%205%EC%8B%9C%EC%9D%98%20%EB%A9%94%EC%9D%B4%EB%93%9C" title="오후 5시의 메이드">
           오후 5시의 메이드
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
          ,
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          <a class="wiki-link-internal" href="/w/%EB%85%B8%EA%B8%B0%EC%9E%90%EC%B9%B4%20%ED%95%98%EB%A3%A8%EC%B9%B4%EC%9D%98%20%EB%B9%84%EB%B0%80" title="노기자카 하루카의 비밀">
           노기자카 하루카의 비밀
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EB%85%B9%ED%8B%B0%EC%8A%A4%20%EB%A3%A8%EC%8B%9C%EC%8A%A4%20%EC%B9%B4%EC%9D%BC%EB%A3%B8" title="녹티스 루시스 카일룸">
           녹티스 루시스 카일룸
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [ahref]
          
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          ,
          [linkx]
          
          ,
          [linkx]
          
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%9D%B4%EB%82%98%EC%A6%88%EB%A7%88%20%EC%9D%BC%EB%A0%88%EB%B8%90%20GO" title="이나즈마 일레븐 GO">
           이나즈마 일레븐 GO
          </a>
          <a class="wiki-fn-content" href="5" title="이쪽도 게임판에서만 나온다.">
           <span class="target" id="rfn-5">
           </span>
           [5]
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          ,
          [linkx]
          
          ,
          [linkx]
          
          [linkx]
          
          ,
          <del>
           [ahref]
           
          </del>
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          류조지 하루카 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [ahref]
          
          ,
          [ahref]
          
          ,
          [linkx]
          
          ,
          [linkx]
          
          를 포함한
          <strong>
           [ahref]
           
           여성 멤버들 전원
          </strong>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          ,
          [ahref]
          
          ,
          [ahref]
          
          ,
          [linkx]
          
          ,
          [ahref]
          
          ,폴리 채프먼 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          - 대디 페이스
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%95%84%EB%A7%88%EA%B0%80%EB%AF%B8" title="아마가미">
           아마가미
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [linkx]
           <li>[area1][mkey1]</li><li>[ahref]</li>[pkeyx][area1][keywordx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          미나세 사쿠라코 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [ahref]
          
          -
          [linkx]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EB%AF%B8%EC%BD%94%EC%8B%9C%EB%B0%94%20%EB%AF%B8%EC%BD%94%ED%86%A0" title="미코시바 미코토">
           미코시바 미코토
          </a>
          ,
          [ahref]
          
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          (새로운 육체 기준) -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%82%AC%EC%82%AC%EC%84%B8%EA%B0%80%EC%99%80%20%EC%82%AC%EC%82%AC%EB%AF%B8" title="사사세가와 사사미">
           사사세가와 사사미
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx][ahref][area1][mkey1][area1][mkey1][pkeyx][area1][mkey1][linkx][ahref][area1][keywordx][area1][mkey1][pkeyx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][linkx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%82%AC%EC%BF%A0%EB%9D%BC%EA%B8%B0%20%EB%A7%88%EC%9D%B4" title="사쿠라기 마이">
           사쿠라기 마이
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%82%AC%EC%BF%A0%EC%95%BC(%EC%8B%9C%EC%8A%A4%ED%84%B0%20%ED%94%84%EB%A6%B0%EC%84%B8%EC%8A%A4)" title="사쿠야(시스터 프린세스)">
           사쿠야
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          [linkx]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%BA%A0%ED%8D%BC(%EB%9D%BC%EC%9D%B4%ED%8A%B8%20%EB%85%B8%EB%B2%A8)" title="캠퍼(라이트 노벨)">
           캠퍼
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          학생 전원 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [ahref]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EA%BC%AC%EB%A7%88%EB%A7%88%EB%B2%95%EC%82%AC%20%EB%A0%88%EB%AF%B8" title="꼬마마법사 레미">
           꼬마마법사 레미
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          세키네 케이치로 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%8B%9C%EB%9D%BC%EC%B9%B4%EC%99%80%20%EC%BD%94%ED%86%A0%EB%A6%AC" title="시라카와 코토리">
           시라카와 코토리
          </a>
          ,
          <a class="wiki-link-internal" href="/w/%EC%95%84%EC%82%AC%EC%BF%A0%EB%9D%BC%20%EB%84%A4%EB%AC%B4" title="아사쿠라 네무">
           아사쿠라 네무
          </a>
          -
          <a class="wiki-link-internal" href="/w/%EB%8B%A4%EC%B9%B4%ED%8F%AC%20%EC%8B%9C%EB%A6%AC%EC%A6%88" title="다카포 시리즈">
           D.C.
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          ,
          [linkx]
          
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          ,
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%B9%B4%EA%B5%AC%EC%95%BC%20%EB%8B%98%EC%9D%80%20%EA%B3%A0%EB%B0%B1%EB%B0%9B%EA%B3%A0%20%EC%8B%B6%EC%96%B4%20~%EC%B2%9C%EC%9E%AC%EB%93%A4%EC%9D%98%20%EC%97%B0%EC%95%A0%20%EB%91%90%EB%87%8C%EC%A0%84~" title="카구야 님은 고백받고 싶어 ~천재들의 연애 두뇌전~">
           카구야 님은 고백받고 싶어 ~천재들의 연애 두뇌전~
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          시라이시 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          시오노미야 쿠루미 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
          (단 여기는 학생회장도 겸함)
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%86%8C%EB%84%A4%20%EB%AF%B8%EC%9C%A0%ED%82%A4" title="소네 미유키">
           소네 미유키
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%ED%9B%84%EB%A5%B4%EC%B8%A0%20%EB%B0%94%EC%8A%A4%EC%BC%93" title="후르츠 바스켓">
           후르츠 바스켓
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [ahref]
          
          , 바비
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%EB%A6%AC%EB%A7%88%20%EC%86%8C%EC%9D%B4%EC%B9%98%EB%A1%9C" title="아리마 소이치로">
           아리마 소이치로
          </a>
          -
          <a class="wiki-link-internal" href="/w/%EA%B7%B8%20%EB%82%A8%EC%9E%90!%20%EA%B7%B8%20%EC%97%AC%EC%9E%90!" title="그 남자! 그 여자!">
           그 남자! 그 여자!
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%EB%A7%88%EA%B8%B0%20%EC%9C%A0%ED%82%A4%EC%BD%94" title="아마기 유키코">
           아마기 유키코
          </a>
          <a class="wiki-fn-content" href="6" title="진짜 아이돌인 리세가 전학 오기 전까진 시골이지만 교내 인기 원탑. 둔감한 탓에 철벽방어를 자랑해 굴지의 아마기고개라고 불린다.">
           <span class="target" id="rfn-16">
           </span>
           [16]
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%EB%A7%88%EB%AF%B8%EC%95%BC%20%EC%97%90%EB%A0%88%EB%82%98" title="아마미야 에레나">
           아마미야 에레나
          </a>
          ,
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          아사카와 세나 - Gift ~기프트~
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          - Canvas3
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%8A%A4%EC%A6%88%EB%AF%B8%EC%95%BC%20%ED%95%98%EB%A3%A8%ED%9E%88%EC%9D%98%20%EC%9A%B0%EC%9A%B8" title="스즈미야 하루히의 우울">
           스즈미야 하루히의 우울
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%EC%82%AC%ED%9E%88%EB%82%98%20%ED%9E%88%EC%9A%94%EB%A6%AC" title="아사히나 히요리">
           아사히나 히요리
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          아이하라 사리나 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          , 오다기리 미오 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%ED%82%A4%EC%95%BC%EB%A7%88%20%EB%AF%B8%EC%98%A4" title="아키야마 미오">
           아키야마 미오
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%ED%85%8C%EB%82%98(%EC%95%84%ED%85%8C%EB%82%98%20%EC%BB%B4%ED%94%8C%EB%A0%89%EC%8A%A4)" title="아테나(아테나 컴플렉스)">
           아테나
          </a>
          -
          <a class="wiki-link-internal" href="/w/%EC%95%84%ED%85%8C%EB%82%98%20%EC%BB%B4%ED%94%8C%EB%A0%89%EC%8A%A4" title="아테나 컴플렉스">
           아테나 컴플렉스
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          ,
          [linkx]
          
          -
          [ahref]
          
          <a class="wiki-fn-content" href="7" title="교내 2대 여신이라고 불리운다. 나코가 없다니">
           <span class="target" id="rfn-17">
           </span>
           [17]
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          오우지 마사무네 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          오오하라 코토네 -
          <a class="wiki-link-internal" href="/w/%EC%96%B4%EC%84%9C%20%EC%99%80!%20%EC%98%A4%EC%BB%AC%ED%8A%B8%20%EC%97%B0%EA%B5%AC%EB%B6%80" title="어서 와! 오컬트 연구부">
           어서 와! 오컬트 연구부
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          <a class="wiki-link-internal" href="/w/%EC%9D%B4%EC%97%90%EB%82%98%EA%B0%80%20%EC%B9%B4%EB%82%98" title="이에나가 카나">
           이에나가 카나
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          유가인 -
          <a class="wiki-link-internal" href="/w/%EB%8F%8C%EC%95%84%EC%98%A8%20%EB%9F%AD%ED%82%A4%EC%A7%B1" title="돌아온 럭키짱">
           돌아온 럭키짱
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
           [pkeyx][area1][mkey1][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][mkey1][ahref][pkeyx]
          
          ,
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%9C%A4%EC%8B%9C%EC%9B%90" title="윤시원">
           윤시원
          </a>
          <a class="wiki-fn-content" href="9" title="다만 현재 하나를 포함해서 그의 악랄한 본성을 알고 있는 그의 전 여자친구들은 오히려 그를 매우 혐오하고 있는 상황.">
           <span class="target" id="rfn-19">
           </span>
           [19]
          </a>
          -
          <a class="wiki-link-internal" href="/w/%ED%95%98%EB%82%98%EC%9D%98%20%ED%95%98%EB%A3%A8" title="하나의 하루">
           하나의 하루[pkeyx]<li>[area1][keywordx]</li>[area1][keywordx][ahref]<li>[area1][mkey1]</li>
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          <a class="wiki-link-internal" href="/w/%EB%B8%94%EB%A6%AC%EC%B9%98" title="블리치">
           블리치
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%ED%8F%AD%ED%92%8D%EC%9D%98%20%EC%A0%84%ED%95%99%EC%83%9D" title="폭풍의 전학생">
           폭풍의 전학생
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%9D%B4%EC%98%88%EC%9D%80(%ED%8F%AC%EC%9D%B4%EC%A6%8C%20%EC%95%A0%ED%94%8C)" title="이예은(포이즌 애플)">
           이예은
          </a>
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          - LOVELY CATION 2
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          이카루가 이부키 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          ,
          [linkx]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%86%8C%EB%85%80%EC%9D%98%20%EC%84%B8%EA%B3%84" title="소녀의 세계">
           소녀의 세계
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%99%80%EB%9D%BC!%20%ED%8E%B8%EC%9D%98%EC%A0%90" title="와라! 편의점">
           와라! 편의점
          </a>
          애니판
         </div>
        </li>
        <li>
         [pkeyx]<li>[pkeyx]</li>[ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          , 정불주 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          카나세 카논 -
          <a class="wiki-link-internal" href="/w/%EC%8A%A4%ED%8A%B8%EB%9D%BC%EC%9D%B4%ED%81%AC%20%EB%8D%94%20%EB%B8%94%EB%9F%AC%EB%93%9C" title="스트라이크 더 블러드">
           스트라이크 더 블러드
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%9C%A0%ED%9D%AC%EC%99%95%20ZEXAL" title="유희왕 ZEXAL">
           유희왕 ZEXAL
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          카미죠 미유키 - 휘슬!
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          [ahref]
          
          ,
          <a class="wiki-link-internal" href="/w/%ED%95%98%EC%84%B8%EA%B0%80%EC%99%80%20%EC%BD%94%EB%B0%94%ED%86%A0" title="하세가와 코바토">
           하세가와 코바토
          </a>
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          카시이 유이 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
          - 본 문서 짤방의 주인공.
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          카지우라 우미 - fortissimo//Akkord:Bsusvier
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%B9%B4%EC%A0%9C%ED%95%98%EC%95%BC%20%EC%87%BC%ED%83%80" title="카제하야 쇼타">
           카제하야 쇼타
          </a>
          [linkx]
          
          -
          <a class="wiki-link-internal" href="/w/%EB%84%88%EC%97%90%EA%B2%8C%20%EB%8B%BF%EA%B8%B0%EB%A5%BC" title="너에게 닿기를">
           너에게 닿기를
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%ED%95%98%EC%95%BC%ED%85%8C%EC%B2%98%EB%9F%BC!" title="하야테처럼!">
           하야테처럼!
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%BD%94%EC%9A%B0%EC%82%AC%EC%B9%B4%20%ED%82%A4%EB%A6%AC%EB%85%B8" title="코우사카 키리노">
           코우사카 키리노
          </a>
          -
          <a class="wiki-link-internal" href="/w/%EB%82%B4%20%EC%97%AC%EB%8F%99%EC%83%9D%EC%9D%B4%20%EC%9D%B4%EB%A0%87%EA%B2%8C%20%EA%B7%80%EC%97%AC%EC%9A%B8%20%EB%A6%AC%EA%B0%80%20%EC%97%86%EC%96%B4" title="내 여동생이 이렇게 귀여울 리가 없어">
           내 여동생이 이렇게 귀여울 리가 없어
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          코테가와 치사 -
          [linkx]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          -
          [linkx]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          쿠라사와 사나에 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          퀸(
          [linkx]
          
          ) -
          [linkx]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          <a class="wiki-fn-content" href="1" title="이분은 아예 idol의 본래 뜻인 숭배받는 우상의 뜻이다. 학생회장인데 학생들 전원뿐만 아니라 교사들한테까지 사츠키사마라고 불리고 학교의 모든 사람들이 사츠키의 명령에 따른다. 엄마가 이사장이어서 그런 것도 있고, 나머지 인원들이 덤벼도 이길까 말까 할 정도로 강해서이기도 하다. 우리가 쓰는 뜻인 아이돌이기도 하다. 체형과 외모 모두 훌륭한 편이여서 준케츠 변신 상태에서 남학생들이 환호의 박수를 치기도 했다.">
           <span class="target" id="rfn-31">
           </span>
           [31]
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%ED%82%A4%EB%A6%AC%EC%95%BC%20%EC%97%90%EB%A6%AC%EC%B9%B4" title="키리야 에리카">
           키리야 에리카
          </a>
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/Dear%20My%20Friend" title="Dear My Friend">
           Dear My Friend
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          쿠즈미 후코 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          ,
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/Fate/stay%20night" title="Fate/stay night">
           Fate/stay night
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          <a class="wiki-fn-content" href="3" title="학교의 남녀 모두에게 천사로서의 취급을 받으며, 주위의 눈치를 볼 필요도 없이 하치만에게 다가갈 수 있을 정도이다.">
           <span class="target" id="rfn-33">
           </span>
           [33]
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
           [area1][mkey1]<li>[pkeyx]</li>[area1][keywordx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/%EC%84%B1%EA%B2%80%EC%82%AC%EC%9D%98%20%EA%B8%88%EC%A3%BC%EC%98%81%EC%B0%BD" title="성검사의 금주영창">
           성검사의 금주영창
          </a>
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <li>[area1][keywordx]</li><li>[ahref]</li>[pkeyx]
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          ,
          [ahref]
          
          -
          <a class="wiki-link-internal" href="/w/SHUFFLE!" title="SHUFFLE!">
           SHUFFLE!
          </a>
          시리즈
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          후지와라 카즈히토 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
           [area1][mkey1][linkx][ahref][pkeyx][ahref][linkx][linkx][linkx][linkx][area1][mkey1][ahref][linkx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          
          -
          [linkx]
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][linkx][area1][keywordx][pkeyx][area1][keywordx][area1][mkey1]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          [ahref]
          
          와
          [ahref]
          
          를 비롯한 가디언 멤버들-
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          ,
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx]
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          히야마 아카네 -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
       </ul>
      </div>
      <h2 class="wiki-heading">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h2>
      <div class="wiki-heading-content">
       <ul class="wiki-list">
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EB%AF%B8%EC%95%BC%EB%85%B8%EC%BD%94%EC%9A%B0%EC%A7%80%20%EB%AF%B8%EC%A6%88%ED%98%B8" title="미야노코우지 미즈호">
           미야노코우지 미즈호
          </a>
          <a class="wiki-fn-content" href="6" title="남자가 여장하고 여학생들의 아이돌.">
           [pkeyx][ahref][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][area1][keywordx][pkeyx][ahref][area1][mkey1][linkx][ahref][linkx][ahref][area1][mkey1][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][keywordx][area1][keywordx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          </a>
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          (!?) -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <strong>
           [linkx]
           
          </strong>
          -
          [ahref]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          (!!?) -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%95%84%EC%8A%A4%EB%82%98(%EC%86%8C%EB%93%9C%20%EC%95%84%ED%8A%B8%20%EC%98%A8%EB%9D%BC%EC%9D%B8)" title="아스나(소드 아트 온라인)">
           아스나
          </a>
          ,
          [linkx]
          
          -
          [ahref]
          
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [ahref]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          윤미라
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [linkx]
          
          [linkx]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%EC%B9%B8%EB%B0%94%EB%A3%A8%20%EC%8A%A4%EB%A3%A8%EA%B0%80" title="칸바루 스루가">
           칸바루 스루가
          </a>
          [linkx]
          
          -
          [ahref]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          코우노 토오루, 시호다니 유지로, 유타카 미코토 -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          <a class="wiki-link-internal" href="/w/%ED%82%A4%EC%82%AC%ED%82%A4%EB%85%B8%EB%AF%B8%EC%95%BC%20%EC%B9%98%ED%95%98%EC%95%BC" title="키사키노미야 치하야">
           키사키노미야 치하야
          </a>
          -
          [ahref]
          
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          <a class="wiki-fn-content" href="5" title="여자가 남장하고 여학생들의 아이돌.">
           <span class="target" id="rfn-45">
           </span>
           [45]
          </a>
          ,
          [linkx]
          
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
        <li>
         <div class="wiki-paragraph">
          [ahref]
          
          -
          [linkx]
          
         </div>
        </li>
       </ul>
       <div class="wiki-paragraph">
        <br/>
       </div>
      </div>
      <div class="wiki-macro-footnote">
       <span class="footnote-list">
        <span class="target" id="fn-1">
        </span>
        [linkx]
        
        신딸기는 전 아이돌이었고 실제 김체리는 아이돌이 아니다. 김체리로 변장한 김귤이 학교 내에 새로운 아이돌.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-2">
        </span>
        [linkx]
        
        일단 학교는 아니지만 비슷한 케이스
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-3">
        </span>
        [ahref]
        
        집안에서는
        [ahref]
        
        로 변한다.
        [ahref]
        
        화는 덤이다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-4">
        </span>
        [ahref]
        
        애니판에선 크게 부각되진 않지만 게임판에서 나온다. 게다가 애니판에서도 다른 학교에 갔을 때 여학생들을 얼굴로 사로잡은 적도 있다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-5">
        </span>
        [ahref]
        
        이쪽도 게임판에서만 나온다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-6">
        </span>
        [linkx]
        
        idol의 본래 뜻인 숭배받는 우상에 해당되는 케이스로, 3명 전부, 반센누를 지원하는 3대 가문이란 점도 있지만, 이 점을 재외하고도 반센누의 학생들에게 엄청난 인기를 얻고 있다. 특히 리츠코의 경우, 원래라면 올해 붉은 장미회의 회두가 되어야 할
        <a class="wiki-link-internal" href="/w/%EB%A9%94%EC%B9%B4%ED%83%80%20%EB%AF%B8%EC%B8%A0%ED%82%A4" title="메카타 미츠키">
         미츠키
        </a>
        가, 리세가 흰백합회 회두가 되었다는것을 알자, 대등한 조건으로 상대하기 위해, 리세급의 인기를 지닌 리츠코에게 회두 자리를 양보했을 정도. 마리카는 학생회장이란 직책도 있고,
        [linkx]
        
        이 강간을 했다는 루머가 퍼졌을때, 학생들이 패닉에 빠져 주인공을 비난했을 정도였다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-7">
        </span>
        [ahref]
        
        이쪽은 의외로 숨겨진 팬들이 있다는 게 언급된다. 리세 루트에서의 연인 놀이 때도 숨겨진 팬들이 절규했을 정도.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-8">
        </span>
        [ahref]
        
        사이난 고교에 전입한 첫 날부터 착한 척과 내숭으로 남학생들의 인기를 끌기 시작했으며,
        <strong>
         V
        </strong>
        enus
        <strong>
         M
        </strong>
        omo
        <strong>
         C
        </strong>
        lub이란 친위대
        <del>
         를 빙자해서 이상한 짓만 골라서 해대는 패거리들
        </del>
        까지 생겼을 정도. 여학생들에게도 꽤 호감을 산 듯하다.
        <del>
         늘 곁에 있으면서
         [ahref]
         
         를 잘 알고 있는
         [ahref]
         
         는 불쾌해하는 게 함정
        </del>
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-9">
        </span>
        [ahref]
        
        둘 다 학교의 아이돌 취급이지만 그것을 다루는 방법이 완전 다르다. 미사키의 경우엔 오히려 학교의 여왕님 타입에 더 가까운 편.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-10">
        </span>
        [ahref]
        
        여자인데도 잘생기고 느끼한 대사를 잘 날려서 남학생들에게 학원의 왕자라 불린다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-11">
        </span>
        [ahref]
        
        여자 변신 후 한정
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-12">
        </span>
        [linkx]
        
        학교에서 팬클럽은 기본. 농구 시합에는 응원단이 원정 응원하러 오기도 한다(...).
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-13">
        </span>
        [linkx]
        
        이쪽은 실제로도 아이돌일을 하고 있다
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-14">
        </span>
        [ahref]
        
        단, 유메는 정확한 의미에서의 학교의 아이돌은 아니다. 인기가 있는 것은 확실하지만 대놓고 떠받들어지는 것은 아니고 숨겨진 팬클럽이 있을 뿐이다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-15">
        </span>
        [linkx]
        
        여왕벌 고스크
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-16">
        </span>
        [linkx]
        
        진짜 아이돌인 리세가 전학 오기 전까진 시골이지만 교내 인기 원탑. 둔감한 탓에 철벽방어를 자랑해 굴지의 아마기고개라고 불린다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-17">
        </span>
        [linkx]
        
        교내 2대 여신이라고 불리운다.
        <del>
         [ahref]
         
         가 없다니
        </del>
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-18">
        </span>
        [ahref]
        
        학교 교내신문이 베니오에 대한 것만 있을 정도.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-19">
        </span>
        <a href="9">
         [19]
        </a>
        다만 현재 하나를 포함해서 그의 악랄한 본성을 알고 있는 그의 전 여자친구들은 오히려 그를 매우 혐오하고 있는 상황.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-20">
        </span>
        [ahref]
        
        성별이 불확실하였지만 이후 여자인 게 밝혀졌다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-21">
        </span>
        [linkx]
        
        스스로도 학교의 아이돌이라고 말 할 정도다. 물론 주인공을 제외한 다른 사람들은 그
        [ahref]
        
        <a class="wiki-link-internal" href="/w/%EB%B3%80%ED%83%9C" title="변태">
         속을
        </a>
        모르지만.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-22">
        </span>
        [linkx]
        
        [linkx]
        
        공식 페이지에서 연재하는
        <strong>
         [ahref]
         
         's 다이어리
        </strong>
        에서 학교의 슈퍼스타라고 언급했다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-23">
        </span>
        [ahref]
        
        처음 등장했을 때 남학생들의 시선을 한 몸에 받았다. 이후 그녀의 터프함 앞에 남학생들이 물러나긴 했지만 91화에서 유마와 리오가 사귄다는 소문이 퍼지자 온 남학생들이 절규를 함으로서 인기가 여전하다는 것이 드러났다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-24">
        </span>
        [ahref]
        
        남학생 한정. 여학생(특히 클래스메이트)들에게는 그 특유의 성격 때문에 철저하게 미움받고 있다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-25">
        </span>
        [linkx]
        
        얘는 세나와는 달리 여학생들한테도 인기가 많다. 단지, 성격이 그 모양이라...
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-26">
        </span>
        [linkx]
        
        여자들에게는 얼굴과 성격으로 인기가 많아서 팬클럽도 있을 정도고, 남자들에게는 사교성이 많은 친우로서 인기가 많다. 그냥 이 정도면 마성의 남자(…). 여자들이 모두의 카제하야라고 연애도 못하게 하려고 했을 정도니 말 다했다(…).
        <del>
         그리고 남주인공이다
        </del>
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-27">
        </span>
        [linkx]
        
        재색겸비이기도 하지만 가장 큰 이유는 기계공학과의
        [linkx]
        
        라서. 작중 기계공학과의 학년 성비는 140:3이다(...).
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-28">
        </span>
        [ahref]
        
        닮은 꼴 프린세스(TVA 333~334화) 참조. 두 사람 다 모교에서는 전설적이었던 학교의 아이돌로 통한다(...).
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-29">
        </span>
        [linkx]
        
        전직 아이돌. TV에서 톱스타였다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-30">
        </span>
        <a href="0">
         [30]
        </a>
        퀸 말고도
        <a class="wiki-link-internal" href="/w/%EC%B5%9C%EB%8B%AC%EB%8B%AC" title="최달달">
         최달달
        </a>
        ,
        <a class="wiki-link-internal" href="/w/%EC%9D%B4%EB%AC%B8%EC%98%81" title="이문영">
         이문영
        </a>
        같은 S클래스 학생들도 비슷한 경우다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-31">
        </span>
        [ahref]
        
        이분은 아예 idol의 본래 뜻인 숭배받는 우상의 뜻이다.
        [linkx]
        
        인데 학생들 전원뿐만 아니라 교사들한테까지 사츠키
        [linkx]
         [area1][mkey1]<li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx][pkeyx]
        
        라고 불리고 학교의 모든 사람들이 사츠키의 명령에 따른다.
        [ahref]
        
        가 이사장이어서 그런 것도 있고, 나머지 인원들이 덤벼도 이길까 말까 할 정도로 강해서이기도 하다. 우리가 쓰는 뜻인 아이돌이기도 하다. 체형과 외모 모두 훌륭한 편이여서
        <a class="wiki-link-internal" href="/w/%EC%A4%80%EC%BC%80%EC%B8%A0" title="준케츠">
         준케츠
        </a>
        변신 상태에서 남학생들이 환호의 박수를 치기도 했다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-32">
        </span>
        [linkx]
        
        큐티하니 F 한정.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-33">
        </span>
        [linkx]
        
        학교의 남녀 모두에게 천사로서의 취급을 받으며, 주위의 눈치를 볼 필요도 없이 하치만에게 다가갈 수 있을 정도이다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-34">
        </span>
        [ahref]
        
        학교의 아이돌을 넘어 거의 신성화에 가까운 존경을 받는 인물이지만, 정작 본인은 자신이 학교에서
        <a class="wiki-link-internal" href="/w/%EC%9D%B4%EC%A7%80%EB%A9%94" title="이지메">
         이지메
        </a>
        를 당하고 있다고 착각하고 있다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-35">
        </span>
        [ahref]
        
        첫 화에서 자신을 둘러싼 소문 덕분에 세이치로에게 삥 뜯으려던 양아치들을 아무런 힘도 쓰지 않고 제압할 정도였으며, "Cool&amp;Spicy"라고 주변에서 떠받들지만 사실은 성격 때문에 전학 첫 날 자기 소개를 제대로 하지 못해 말주변이 없고 쿨하다고 여겨져서 부풀려진 케이스.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-36">
        </span>
        [ahref]
        
        남자가 여장하고 여학생들의 아이돌.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-37">
        </span>
        [ahref]
        
        밑의 선샤인과 더불어
        <strong>
         학교에서 아이돌 활동을 하는
        </strong>
        경우. 그러니까
        [linkx]
        
        개념이다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-38">
        </span>
        [linkx]
        
        일단 배경이 학교가 아닌 아인크라드 게임상 내 한정. 아인크라드에서 아스나는 팬클럽도 있는데다 인기투표 1위를 차지하는 등 게임 내 아이돌 취급을 받는 걸 알 수 있고, 시리카는 소설 묘사로는 미흡하지만 언급 상, 귀여운 외모로 아이돌이라고 불리고 있다고 한다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-39">
        </span>
        [ahref]
        
        설정상으로는 맞으나, 실제로 작중에서는
        [ahref]
        
        .
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-40">
        </span>
        [linkx]
        
        학생이 아니라
        <a class="wiki-link-internal" href="/w/%EB%B3%B4%EA%B1%B4%EA%B5%90%EC%82%AC" title="보건교사">
         보건교사
        </a>
        지만 워낙 미인이라 아이돌 취급 받는다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-41">
        </span>
        [linkx]
        
        분명 현직 아이돌인데 비인기 아이돌인지라 학교 내에서는 그냥 학생1 취급.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-42">
        </span>
        [ahref]
        
        예쁘지만 애인으로 삼고 싶지는 않은 아이돌 앙케이트 1위.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-43">
        </span>
        [linkx]
        
        여학생들 사이에선 확실히 아이돌급. 근데 작중에선
        <del>
         아라레기
        </del>
        코요미를 제외한 남학생이 등장하지 않는 관계로 남학생 사이에서 어떨진 불명.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-44">
        </span>
        [linkx]
        
        여기도 여장남자다.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-45">
        </span>
        [ahref]
        
        여자가 남장하고 여학생들의 아이돌.
       </span>
       <span class="footnote-list">
        <span class="target" id="fn-46">
        </span>
        [linkx]
        
        <strong>
         남자가 아닐까
        </strong>
        싶은 캐릭터이다.
        [linkx]
        
        는 아니지만 남자 옷을 입어도 위화감이 없을 정도로 남자다운데다 다니는 학교가 여학교인지라 여학생들에게 인기가 많다.
       </span>
      </div>
     </div>
     <iframe frameborder="0" height="100" id="ad-powerlink-pc" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink.html?v=18" width="100%">
     </iframe>
     <iframe frameborder="0" height="175" id="ad-powerlink-mobile" marginheight="0" marginwidth="0" scrolling="no" src="//namu.live/static/ad/powerlink_mobile.html?v=18" width="100%">
     </iframe>
    </div>
    <footer>
     <p>
      <br/>
      이 저작물은
      [ahref]
      
      에 따라 이용할 수 있습니다. (단, 라이선스가 명시된 일부 문서 및 삽화 제외)
      <br/>
      기여하신 문서의 저작권은 각 기여자에게 있으며, 각 기여자는 기여하신 부분의 저작권을 갖습니다.
      <br/>
      <br/>
      나무위키는 백과사전이 아니며 검증되지 않았거나, 편향적이거나, 잘못된 서술이 있을 수 있습니다.
      <br/>
      나무위키는 위키위키입니다. 여러분이 직접 문서를 고칠 수 있으며, 다른 사람의 의견을 원할 경우 직접 토론을 발제할 수 있습니다.
     </p>
    </footer>
   </article>
  </div>
  <div class="footer-wrapper">
   <div class="live-list-card mobile-live-bottom-list" data-count="5" data-slug="headline">
    <h6>
     헤드라인 최신글
    </h6>
    <div class="link-table">
     [ahref]
     
    </div>
    [linkx]
    
   </div>
   <div class="ad-bottom">
    <ins class="adsbygoogle" data-ad-client="ca-pub-4481395322450420" data-ad-format="auto" data-ad-slot="2145080446" data-full-width-responsive="true" style="display:block">
    </ins>
   </div>
   <footer class="footer">
    <p>
     namu.wiki
     <span class="sep">
     </span>
     [ahref]
     
     <span class="sep">
     </span>
     [ahref]
     
     <span class="sep">
     </span>
     Operado por umanle S.R.L.
     <span class="sep">
     </span>
     Hecho con <3 en Asunción, República del Paraguay
    </p>
    <p>
     Su zona horaria es
     <span id="timezone">
     </span>
     <span class="sep">
     </span>
     Impulsado por
     <i>
      the seed engine
     </i>
    </p>
   </footer>
  </div>
  <ul class="nav-control">
   <li>
    [linkx]
    
   </li>
   <li>
    [linkx]
    
   </li>
  </ul>
  <div class="modal fade" id="shortcutHelpModal">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
       <span class="sr-only">
        Close
       </span>
      </button>
      <h5 class="modal-title">
       단축키 도움말
      </h5>
     </div>
     <div class="modal-body">
      <dl class="dl-horizontal">
       <dt class="col-sm-3">
        <b>
         F
        </b>
        ront Gate
       </dt>
       <dd class="col-sm-9">
        대문
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         C
        </b>
        hanges
       </dt>
       <dd class="col-sm-9">
        최근 변경
       </dd>
       <dt class="col-sm-3">
        Recent
        <b>
         D
        </b>
        iscuss
       </dt>
       <dd class="col-sm-9">
        최근 토론
       </dd>
       <dt class="col-sm-3">
        R
        <b>
         A
        </b>
        ndom
       </dt>
       <dd class="col-sm-9">
        랜덤 문서
       </dd>
       <dt class="col-sm-3">
        <b>
         Shift
        </b>
        +
        <b>
         S
        </b>
        earch
       </dt>
       <dd class="col-sm-9">
        검색
       </dd>
       <dt class="col-sm-3">
        <b>
         E
        </b>
        dit
       </dt>
       <dd class="col-sm-9">
        문서 편집
       </dd>
       <dt class="col-sm-3">
        <b>
         ?
        </b>
       </dt>
       <dd class="col-sm-9">
        단축키 도움말
       </dd>
      </dl>
     </div>
    </div>
   </div>
  </div>
  <div class="modal fade" data-backdrop="false" id="searchModal">
   <div class="modal-dialog modal-sm">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
       <span class="sr-only">
        Close
       </span>
      </button>
      <h6 class="modal-title">
       검색
      </h6>
     </div>
     <div class="modal-body">
      <div class="input-group search-box">
       <span class="input-group-btn">
        <button class="btn btn-secondary" id="searchBtn" style="margin-left: 0;" type="button">
         <span class="icon ion-search">
         </span>
        </button>
        <button class="btn btn-secondary" id="goBtn" type="button">
         <span class="icon ion-arrow-right-c">
         </span>
        </button>
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="modal" id="footnoteModal">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <h5 class="modal-title">
       각주:
      </h5>
     </div>
     <div class="modal-body">
     </div>
     <div class="modal-footer">
      <button class="btn btn-block" data-dismiss="modal" type="button">
       닫기
      </button>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0472
  </b>
 </body>
</html>
|<---