--->|<!DOCTYPE doctype html>
<html class="no-js" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="width=1080" name="viewport"/>
  <meta content="데일리포엠" name="apple-mobile-web-app-title">
   <meta content="창작가무극 '윤동주, 달을 쏘다'... 윤동주 시가 전하는 울림" name="title">
    <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
     <meta content="News" name="Classification"/>
     <meta content="데일리포엠" name="Copyright"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="http://www.dailypoem.kr/news/thumbnail/old/2019030804135563_v150.jpg" property="og:image"/>
     <meta content="article" property="og:type"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="이윤도" property="og:article:author"/>
     <meta content="summary" name="twitter:card"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
     <meta content="http://www.dailypoem.kr/news/thumbnail/old/2019030804135563_v150.jpg" name="twitter:image"/>
     <meta content="http://www.dailypoem.kr/news/articleView.html?idxno=1270" name="twitter:site"/>
     <meta content="이윤도" name="twitter:creator">
      <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
     </meta>
     <meta content="1270" property="dable:item_id"/>
     <meta content="이윤도" property="dable:author"/>
     <meta content="News" property="article:section"/>
     <meta content="2019-03-08T18:08:03+09:00" property="article:published_time"/>
     <title>
      [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </title>
     <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <div class="off-canvas-wrapper">
   <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
    <div class="off-canvas user-canvas position-left" data-off-canvas="" id="offCanvas">
     <button aria-label="Close menu" class="close-button" data-close="" type="button">
      <span aria-hidden="true">
       ×
      </span>
     </button>
     <nav class="user-canvas-navs">
      <ul class="vertical menu" data-accordion-menu="" data-multi-open="false">
       <li>
        [linkx]
        
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N1&amp;view_type=sm" target="_top">
         Poet
        </a>
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N2&amp;view_type=sm" target="_top">
         Poem
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <li>[area1][mkey1]</li>[linkx]<li>[pkeyx]</li>[linkx]
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N7&amp;view_type=sm" target="_top">
         Multi
        </a>
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N8&amp;view_type=sm" target="_top">
         Columm
        </a>
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N9&amp;view_type=sm" target="_top">
         News
        </a>
       </li>
      </ul>
     </nav>
    </div>
    <div class="off-canvas-content" data-off-canvas-content="">
     <div class="min-width-1080" id="user-wrap">
      <header class="posi-re float-center" id="user-header">
       <div class="clearfix text-center">
       </div>
       <div id="header-wrapper">
        <header id="nav-header">
         <div class="float-center width-1080">
          <div class="dis-table">
           <div class="dis-table-cell user-banner text-left">
            <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li><li>[area1][keywordx]</li>[ahref][area1][mkey1]
           </div>
           <div class="dis-table-cell">
            [linkx]
            
           </div>
           <div class="dis-table-cell user-banner text-right">
            <div class="user-search dis-inline">
             <button class="user-search-btn" type="button">
              <i class="s7-search">
              </i>
              <span class="show-for-sr">
               검색버튼
              </span>
             </button>
             <fieldset class="user-search-form">
              <form action="/news/articleList.html" method="post" name="head-search">
               <label class="show-for-sr" for="search">
                기사검색
               </label>
               <button onclick="if(this.form.sc_word.value != ''){this.form.submit();}else{alert('검색어를 입력해주세요');this.form.sc_word.focus();return false;}" title="기사검색" type="button">
                <i class="s7-search">
                </i>
                <span class="show-for-sr">
                 검색
                </span>
               </button>
              </form>
             </fieldset>
            </div>
            <div class="dis-inline">
             [pkeyx][ahref][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][ahref][pkeyx][area1][mkey1][linkx][linkx][ahref][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
            </div>
           </div>
          </div>
         </div>
        </header>
        <nav id="user-nav">
         <div class="float-center width-1080" id="user-nav-wrapper">
          <button class="all-section" data-toggle="offCanvas" type="button">
           <i class="fa fa-bars fa-fw">
           </i>
           전체
          </button>
          <ul class="mega-menu" id="mega-menu">
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N1&amp;view_type=sm" target="_top">
             Poet
            </a>
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N2&amp;view_type=sm" target="_top">
             Poem
            </a>
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            [ahref]
            
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N4&amp;view_type=sm" target="_top">
             Book
            </a>
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            [ahref]
            
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N6&amp;view_type=sm" target="_top">
             Essay
            </a>
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N7&amp;view_type=sm" target="_top">
             Multi
            </a>
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N8&amp;view_type=sm" target="_top">
             Columm
            </a>
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            [ahref]
            
            <ul class="sub-menu-vertical">
            </ul>
           </li>
          </ul>
          <div class="user-intro">
           <i class="fa fa-clock-o">
           </i>
           2019-08-12 22:03 (월)
          </div>
         </div>
        </nav>
       </div>
      </header>
      <section class="posi-re text-left auto-pady-25 float-center width-1080" id="user-container">
       <div class="float-center width-1080" id="layer-popups">
       </div>
       <div class="posi-re float-center width-1080">
        <div class="view-aside left-wing" data-duration="300" data-scroll="n" data-top-margin="5" id="floating_banner_left">
         <div class="box-margins height-152">
         </div>
        </div>
        <div class="view-aside right-wing" data-duration="300" data-scroll="n" data-top-margin="5" id="floating_banner_right">
         <div class="box-margins height-152">
         </div>
        </div>
       </div>
       <div class="float-center max-width-1080">
        <div class="clearfix">
        </div>
        <div class="dis-none show-for-large" id="article-header-title">
         <button class="aht-btn prev" onclick="javascript:articleHeader.move(
				'prev',
				'embargo_date',
				'1552036083_1270',
				'S1N9',
				'',
				'');" title="이전기사" type="button">
          <i class="fa fa-angle-left fa-fw">
          </i>
          <span class="sr-only">
           이전
          </span>
         </button>
         <button class="aht-btn next" onclick="javascript:articleHeader.move(
				'next',
				'embargo_date',
				'1552036083_1270',
				'S1N9',
				'',
				'');" title="다음기사" type="button">
          <i class="fa fa-angle-right fa-fw">
          </i>
          <span class="sr-only">
           다음
          </span>
         </button>
         <div class="aht-wrapper width-1080">
          <div class="aht-columns aht-logo">
           [linkx]
           
          </div>
          <div class="aht-columns aht-title">
           <div class="aht-title-view">
            창작가무극 '윤동주, 달을 쏘다'... 윤동주 시가 전하는 울림
           </div>
          </div>
          <div class="aht-columns aht-options">
           <ul class="info-options no-bullet">
            <li>
             <button class="options-btn has-tip" data-disable-hover="false" data-open="article-sns" data-tooltip="" title="기사공유하기" type="button">
              <i class="icon-share">
              </i>
              <span class="show-for-sr">
               기사공유하기
              </span>
             </button>
            </li>
            <li>
             <button class="options-btn has-tip" data-disable-hover="false" data-tooltip="" onclick="articlePrint('1270')" title="프린트" type="button">
              <i class="icon-printer">
              </i>
              <span class="show-for-sr">
               프린트
              </span>
             </button>
            </li>
            <li>
             <button class="options-btn has-tip" data-disable-hover="false" data-tooltip="" onclick="articleMail('1270')" title="메일보내기" type="button">
              <i class="icon-email-b">
              </i>
              <span class="show-for-sr">
               메일보내기
              </span>
             </button>
            </li>
            <li class="fonts-option">
             <button class="fonts-btn options-btn" type="button">
              <i class="icon-plus">
              </i>
              <span class="show-for-sr">
               글씨키우기
              </span>
             </button>
             <ul class="fonts-option-panel no-bullet">
              <li>
               <label for="font-size15_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size16_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size17_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size18_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size19_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size20_1">
                가나다라마바사
               </label>
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </div>
        </div>
        <header class="article-view-header">
         <nav class="article-head-nav auto-marbtm-10">
          <a href="/">
           HOME
          </a>
          <i class="fa fa-angle-right fa-fw">
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][linkx][area1][mkey1][area1][keywordx][linkx][pkeyx][pkeyx][area1][keywordx][area1][mkey1][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][linkx][area1][keywordx]
          </i>
          [linkx]
          
         </nav>
         <div class="article-header-wrap">
          <div class="article-head-title">
           창작가무극 '윤동주, 달을 쏘다'... 윤동주 시가 전하는 울림
          </div>
         </div>
         <section class="article-head-info">
          [linkx][ahref][area1][mkey1][ahref][pkeyx][pkeyx][linkx][linkx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         </section>
        </header>
        <hr/>
        <div class="user-content">
         <section class="user-snb">
          <div class="user-snb-wrapper">
           <article class="article-veiw-body view-page">
            <h2>
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h2>
            <div class="clearfix">
            </div>
            <div class="" id="article-view-content-div" itemprop="articleBody">
             <p>
              <span style="font-family: 맑은 고딕;">
              </span>
             </p>
             <table align="center" border="0" cellspacing="0" class="body_img_table body_img_center">
              <tbody>
               <tr>
                <td>
                 <div class="body_img_table2">
                 </div>
                 <p class="body_img_caption">
                  <span style="font-family: 맑은 고딕; font-size: 10px;">
                   '윤동주, 달을 쏘다' 중 / 서울예술단 제공
                  </span>
                 </p>
                </td>
               </tr>
              </tbody>
             </table>
             <p>
              <li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
              </span>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
               <span style="mso-fareast-font-family: 함초롬바탕;">
                지난
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                2
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                월에 공연했던 낭송음악극
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                동주 [pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>
               </span>
               <span style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                –
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                찰나와 억겁
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                에 이어
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                3
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                월에도 윤동주 시인의 이야기가 무대에 오른다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                .
               </span>
              </span>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
              </span>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
               <span style="mso-fareast-font-family: 함초롬바탕;">
                서울예술단 창작가무극
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                윤동주
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ,
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                달을 쏘다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                가 오는
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                17
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                일까지 예술의전당
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                CJ
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                토월극장에서
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                5
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                번째 공연을 하는 것이다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                . 2012
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                년 초연했던 연극이
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                3·1
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                운동
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                100
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                주년을 기념해 다시 한 번 올려졌다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                . [ahref][pkeyx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][pkeyx][area1][keywordx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][mkey1][ahref][ahref][pkeyx][ahref][ahref][area1][mkey1][pkeyx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                연극은 일제 강점기라는 비극에 맞서 고뇌하던 시인 윤동주와 뜨거웠던 청년들의 이야기를 다룬다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                .
               </span>
              </span>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
              </span>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
               <span style="mso-fareast-font-family: 함초롬바탕;">
                일제 강점기라는 아픈 시대의 가운데서 거친 말들을 쏟아내고 싶지만 그럴 수 없어 부끄러워했던 윤동주는 아름다운 시어 뒤에 저항과 분노의 마음을 눌러 담아냈다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                . ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                팔복
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                으로 시작해
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                십자가
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’ ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                참회록
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’ ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                서시
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’ ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                별 헤는 밤
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’ ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                하늘과 바람과 별과 시
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                까지<li>[ahref]</li><li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]<li>[linkx]</li>
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ,
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                이번 연극은 시의 서정성을 해치지 않기 위해 시인의 대표작을 노래가 아닌 가사와 대사로 엮어낸다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                .
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                대신
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ,
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                그의 시는 고뇌하는 윤동주의 독백과 대사 속에 녹아들어 긴 여운을 남긴다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                .
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                특히
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ,
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                이 작품의 백미로 꼽히는 마지막 감옥 장면에서 절규하며 쏟아내는
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                서시
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                와
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ‘
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                별 헤는 밤
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                ’
               </span>
               <span style="mso-fareast-font-family: 함초롬바탕;">
                은 처절한 반성문처럼 그가 겪어내야 했던 절망과 고통이 고스란히 드러나며 객석에 강렬한 울림을 안겨준다
               </span>
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                .
               </span>
              </span>
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
             </p>
             <p class="0" style="mso-pagination: none; mso-padding-alt: 0pt 0pt 0pt 0pt;">
              <span style="font-family: 맑은 고딕;">
               <span lang="EN-US" style="letter-spacing: 0pt; mso-fareast-font-family: 함초롬바탕; mso-font-width: 100%; mso-text-raise: 0pt;">
                /이윤도 기자
                [ahref]
                
               </span>
              </span>
             </p>
             <div class="view-copyright">
              저작권자 © 데일리포엠 무단전재 및 재배포 금지
             </div>
             <div class="view-editors">
              <div class="float-right">
               <div class="profile-images">
               </div>
               [linkx]
               
               [ahref]
               
              </div>
             </div>
            </div>
            <div class="clearfix">
            </div>
           </article>
           <hr/>
           <div class="clearfix">
           </div>
           <div class="vote-container">
           </div>
           <div class="reveal gray" data-reveal="" id="reply-delete-modal">
            <header class="reveal-header">
             <div class="reveal-title">
              댓글삭제
             </div>
            </header>
            <section class="reveal-container">
             <div class="reveal-msg">
              삭제한 댓글은 다시
              <span class="user-point">
               복구할 수 없습니다.
              </span>
              <br/>
              그래도 삭제하시겠습니까?
             </div>
             <form action="p" id="reply-delete-form" method="post" name="replyForm">
             </form>
            </section>
            <button aria-label="Close modal" class="close-button" data-close="" type="button">
             <span aria-hidden="true">
              ×
             </span>
            </button>
           </div>
           <article class="article-reply" id="reply">
            <header class="reply-header">
             <strong>
              댓글
             </strong>
             <span class="text-muted">
              0
             </span>
            </header>
            <button class="reply-trick" data-mode="reply" id="reply-write-btn" type="button">
             댓글입력
            </button>
            <section class="reply-container" id="reply-container" style="display:none">
             <div class="reply-comment">
              <form action="p" id="reply-form" method="post" name="replyForm">
              </form>
             </div>
            </section>
            <div class="reveal gray" data-reveal="" id="reply-modal">
             <header class="reveal-header">
              <div class="reveal-title">
               댓글쓰기
              </div>
             </header>
             <section class="reveal-container">
              <div class="reveal-msg">
               계정을 선택하시면
               <span class="user-point">
                로그인·계정인증
               </span>
               을 통해
               <br/>
               댓글을 남기실 수 있습니다.
              </div>
              <div class="reply-login">
               <div class="button-group nd-white large">
                [linkx]
                
                <button class="button expanded" id="btn-nomember-write" type="button">
                 <i class="icon-chat fa-fw user-point">
                 </i>
                 비회원 글쓰기
                </button>
               </div>
               <div class="clearfix" id="nomember-info" style="display:none">
                <hr>
                 <fieldset class="row expanded small-collapse medium-uncollapse">
                  <div class="small-12 medium-3 columns">
                   <label class="text-left medium-text-right medium-middle" for="name">
                    <strong class="key-point">
                     이름
                    </strong>
                   </label>
                  </div>
                  <div class="small-12 medium-9 columns">
                   [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][linkx][ahref][ahref][area1][keywordx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][linkx][area1][keywordx]
                  </div>
                 </fieldset>
                 <fieldset class="row expanded small-collapse medium-uncollapse">
                  <div class="small-12 medium-3 columns">
                   <label class="text-left medium-text-right medium-middle" for="password">
                    <strong class="key-point">
                     비밀번호
                    </strong>
                   </label>
                  </div>
                  <div class="small-12 medium-9 columns">
                  </div>
                 </fieldset>
                 <fieldset class="row expanded small-collapse medium-uncollapse">
                  <div class="small-12 medium-3 columns">
                   <label class="text-left medium-text-right medium-middle" for="kcaptcha">
                    <strong class="key-point">
                     자동등록방지
                    </strong>
                   </label>
                  </div>
                  <div class="small-12 medium-9 columns">
                   <div class="input-group auto-marbtm-5">
                    <div id="captcha_container">
                    </div>
                   </div>
                  </div>
                 </fieldset>
                 <hr/>
                 <footer class="clearfix">
                  <div class="float-right small-float-center">
                   <button class="button user-bg small-expanded" id="no-member-write">
                    <i class="fa fa-plus-circle fa-fw">
                    </i>
                    <strong>
                     확인
                    </strong>
                   </button>
                  </div>
                 </footer>
                </hr>
               </div>
              </div>
             </section>
             <button aria-label="Close modal" class="close-button" data-close="" id="login-close-button" type="button">
              <span aria-hidden="true">
               ×[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li>
              </span>
             </button>
            </div>
            <section class="reply-list">
             <header class="header">
              <div class="list-category">
               [ahref]
               
               [linkx]
               
              </div>
             </header>
             <section class="container">
             </section>
            </section>
            <hr/>
           </article>
           <div class="clearfix">
           </div>
          </div>
         </section>
         <aside class="user-aside">
          <article class="box-skin design-7">
           <header class="header">
            <strong>
             <span class="size-20 user-point">
              Photo
             </span>
            </strong>
           </header>
           <section class="content">
            <div class="auto-article auto-pr01" id="roll_6">
             <div class="dis-none posi-re">
              [ahref]
              
              <div class="photo-titbg">
               [ahref]
               
              </div>
             </div>
             <div class="dis-none posi-re">
              <a class="auto-images cover line height-200" href="/news/articleView.html?idxno=10392" style="background-image:url(/news/thumbnail/201907/10392_10762_4627_v150.jpg)" target="_top">
               <span class="show-for-sr">
                [문창두의 여행 스케치]활짝 핀 해바라기를 만나는 기쁨이란~
               </span>
              </a>
              <div class="photo-titbg">
               [ahref]
               
              </div>
             </div>
             <div class="dis-none posi-re">
              [ahref]
               [linkx]<li>[linkx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
              
              <div class="photo-titbg">
               [ahref]
               
              </div>
             </div>
             <div class="dis-none posi-re">
              [ahref]
              
              <div class="photo-titbg">
               [linkx]
               
              </div>
             </div>
             <div class="dis-none posi-re">
              <a class="auto-images cover line height-200" href="/news/articleView.html?idxno=10381" style="background-image:url(/news/thumbnail/201907/10381_10725_543_v150.jpg)" target="_top">
               <span class="show-for-sr">
                [문창두의 여행 스케치]방태산의 시원한 이단폭포
               </span>
              </a>
              <div class="photo-titbg">
               <a class="size-14 line-height-3-x auto-fontF onload" href="/news/articleView.html?idxno=10381" target="_top">
                [문창두의 여행 스케치]방태산의 시원한 이단폭포
               </a>
              </div>
             </div>
             <div class="dis-none posi-re">
              <a class="auto-images cover line height-200" href="/news/articleView.html?idxno=10380" style="background-image:url(/news/thumbnail/201907/10380_10720_5633_v150.jpg)" target="_top">
               <span class="show-for-sr">
                [문창두의 여행 스케치]남대천 지류를 따라 양양으로 가는길
               </span>
              </a>
              <div class="photo-titbg">
               [ahref]
               
              </div>
             </div>
            </div>
           </section>
          </article>
          <div class="box-margins height-30">
          </div>
          <article class="box-skin design-7">
           <header class="header">
            <strong>
             <strong>
              인기기사
             </strong>
            </strong>
           </header>
           <section class="content">
            <div class="auto-article auto-db01">
             <ul>
              <li class="clearfix">
               <div class="number count1 user-bg">
                1
               </div>
               [ahref]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count2 user-bg">
                2
               </div>
               [linkx]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count3 user-bg">
                3
               </div>
               [linkx]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count4 default-bg">
                4
               </div>
               [linkx]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count5 default-bg">
                5
               </div>
               [linkx]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count6 default-bg">
                6
               </div>
               <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=10438" target="_top">
                [책갈피] 사철나무 그늘 아래 쉴때는_장정일
               </a>
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count7 default-bg">
                7
               </div>
               [ahref]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count8 default-bg">
                8
               </div>
               [linkx]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count9 default-bg">
                9
               </div>
               [linkx]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count10 default-bg">
                10
               </div>
               [linkx]
               
              </li>
             </ul>
            </div>
           </section>
          </article>
          <div class="box-margins height-30">
          </div>
          <article class="box-skin design-7">
           <header class="header">
            <strong>
             <strong>
              최신기사
             </strong>
            </strong>
           </header>
           <section class="content">
            <div class="auto-article auto-dl04">
             <ul>
              <li class="auto-column">
               <div class="size-14 auto-padbtm-8">
                [ahref]
                
               </div>
               [ahref]
               
              </li>
              <li class="auto-column auto-padtop-25">
               <div class="size-14 auto-padbtm-8">
                <a class="line-height-3-2x auto-fontA onload" href="/news/articleView.html?idxno=10444" target="_top">
                 [월요일에 만나는 영미 시] 더위 – 힐다 둘리틀
                </a>
               </div>
               [ahref]
               
              </li>
              <li class="auto-column auto-padtop-25">
               <div class="size-14 auto-padbtm-8">
                [ahref]
                
               </div>
               [ahref]
               
              </li>
              <li class="auto-column auto-padtop-25">
               <div class="size-14 auto-padbtm-8">
                [linkx]
                
               </div>
               <a class="auto-images cover line max-width-165 height-100" href="/news/articleView.html?idxno=10442" style="background-image:url(/news/thumbnail/201908/10442_10862_5914_v150.jpg)" target="_top">
                <span class="show-for-sr">
                 [책갈피] 흔들리며 피는 꽃_도종환
                </span>
               </a>
              </li>
              <li class="auto-column auto-padtop-25">
               <div class="size-14 auto-padbtm-8">
                [linkx]
                
               </div>
               [linkx]
               
              </li>
              <li class="auto-column auto-padtop-25">
               <div class="size-14 auto-padbtm-8">
                [ahref]
                
               </div>
               [ahref]
               
              </li>
              <li class="auto-column auto-padtop-25">
               <div class="size-14 auto-padbtm-8">
                [linkx]
                
               </div>
               [ahref]
               
              </li>
             </ul>
            </div>
           </section>
          </article>
          <div class="box-margins height-35">
          </div>
         </aside>
        </div>
        <div class="auto-martop-20 clearfix">
        </div>
       </div>
      </section>
      <footer class="user-style-default" id="user-footer">
       <div class="float-center width-1080">
        <div class="footer-menu">
         <li>[linkx]</li><li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx][ahref]
        </div>
       </div>
      </footer>
      <div class="clearfix text-center">
      </div>
      <button class="back-to-top" id="back-to-top" title="위로" type="button">
       <i class="s7-angle-up">
        <span class="show-for-sr">
         위로
        </span>
       </i>
      </button>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0293
  </b>
 </body>
</html>|<---