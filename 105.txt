--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="no-cache" http-equiv="Cache-Control"/>
  <meta content="0" http-equiv="Expires"/>
  <meta content="no-cache" http-equiv="Pragma"/>
  <meta content="sCs6FWhVVHrUqLvMzfn0G4TVuT4GILl2jffqotMFf2g" name="google-site-verification">
   <meta content="width=1200" name="viewport">
    <meta content="205162475146663165246375" property="qc:admins">
     <meta content="vZijtXsr6K41bIZJ2_cbXTRPiynp8QKDPhQA2UC1M4w" name="google-site-verification">
      <meta content="O7ERcBZcObs5exXAVVtMjxpk27p2riEs2hG5g_4uON0" name="google-site-verification">
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <noscript>
  </noscript>
  <span id="solutiontype" style="display:none;">
   cafe24
  </span>
  <span id="sfsnapfit_store_id" style="display:none">
   66girls
  </span>
  <div>
  </div>
  <div class="top_line_wrap" id="top_line_flex">
   <div class="flexslider">
    <ul class="xans-element- xans-bannermanage2 xans-bannermanage2-display-58 xans-bannermanage2-display xans-bannermanage2-58 slides">
     <li class="">
      <div class="msld_bg">
       <div class="bannermanage2-none-info">
        등록된 배너가 없습니다.
       </div>
      </div>
      [linkx]
      
     </li>
     <li class="">
      <div class="msld_bg">
       <div class="bannermanage2-none-info">
        등록된 배너가 없습니다.
       </div>
      </div>
      [linkx]
      
     </li>
    </ul>
   </div>
   <div class="top_ban_close">
    [linkx]
    
   </div>
  </div>
  <div class="side_panel">
   <span class="btn_pn_toggle">
    [ahref]
    
   </span>
   <ul class="rp_cont">
    <li>
     [ahref]
     
     <p class="caption">
      즐겨찾기
     </p>
    </li>
    <li class="xans-element- xans-layout xans-layout-statelogoff yellow">
     [ahref]
     
     <p class="caption">
      로그인
     </p>
    </li>
    <li>
     [ahref]
     
     <p class="caption">
      마이페이지
     </p>
    </li>
    <li>
     [ahref]
     
     <p class="caption">
      출석체크
     </p>
    </li>
    <li>
     <a href="/order/basket.html">
     </a>
     <p class="caption">
      장바구니
     </p>
    </li>
    <li>
     [linkx]
     
     <p class="caption">
      주문조회
     </p>
    </li>
    <li class="mhide">
     [linkx]
     
     <p class="caption wide">
      [6B]66BASIC
     </p>
    </li>
    <li class="mhide">
     [linkx]
     
     <p class="caption wide">
      [CC]CCLOOK
     </p>
    </li>
    <li class="mhide">
     <a href="/product/list.html?cate_no=249">
     </a>
     <p class="caption">
      [M]몬스터진
     </p>
    </li>
    <li class="mhide">
     <a href="/product/list.html?cate_no=245">
     </a>
     <p class="caption">
      66BOY&amp;GIRL
     </p>
    </li>
    <li class="mhide">
     [linkx]
     
     <p class="caption wide">
      [LL]레이디라벨
     </p>
    </li>
    <li class="mhide last">
     [linkx]
     
     <p class="caption wide">
      [damda]담다쥬얼리
     </p>
    </li>
    <li>
     [ahref]
     
     <p class="caption wide">
      플래그십스토어
     </p>
    </li>
    <li>
     [ahref]
     
     <p class="caption">
      이벤트참여
     </p>
    </li>
   </ul>
   <div class="rp_detail">
    <div class="rp_bookmark">
     [ahref]
     
    </div>
    <div class="req">
     <span>
      [ahref]
      
     </span>
     <span>
     </span>
     /
     <span class="xans-element- xans-layout xans-layout-statelogoff red">
      [linkx]
      
     </span>
     <span>
     </span>
    </div>
    <ul class="mywrap">
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <div class="rp_ban imgonly xhide">
     <div id="rp_ban_sld">
      <div class="flexslider">
       <ul class="xans-element- xans-bannermanage2 xans-bannermanage2-display-51 xans-bannermanage2-display xans-bannermanage2-51 slides">
        <li class="slides_item xans-record-">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
    </div>
    <ul class="rp_brand">
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <div class="rp_ban imgonly xhide">
     [linkx]
     
    </div>
    <div class="rp_ban txtban">
     [ahref]
     
    </div>
    <div class="rp_ban txtban">
     [linkx]
     
    </div>
   </div>
  </div>
  <div class="all_wrap">
   <div class="side_wrap">
    <section class="side_section">
     <div class="lang">
      <div class="xans-element- xans-layout xans-layout-multishoplist list">
       <button class="toggle" type="button">
        <span>
        </span>
       </button>
       <ul class="xans-element- xans-layout xans-layout-multishoplistitem">
        <li class="selected xans-record-">
         [ahref]
         
        </li>
        <li class="xans-record-">
         [ahref]
         
        </li>
        <li class="xans-record-">
         [ahref]
         
        </li>
        <li class="xans-record-">
         [linkx]
         
        </li>
        <li class="xans-record-">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="side_logo">
      [linkx]
      
     </div>
     <div class="search_side">
      <div class="box">
       <form action="/product/search.html" enctype="multipart/form-data" id="searchBarForm" method="get" name="" target="_self">
       </form>
      </div>
     </div>
    </section>
    <div class="snb_wrap">
     <ul class="tab_ul">
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <div class="snb_cont">
      <div class="cont snc1">
       <div class="st_cate">
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/product/list.html?cate_no=103">
           <span>
            당일발송
           </span>
          </a>
         </li>
        </ul>
       </div>
       <div class="xans-element- xans-layout xans-layout-category" id="side_nav">
        <ul class="nav d1_wrap">
         <li class="d1 xans-record-" data-param="?cate_no=81">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=70">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=69">
          <a href="/product/list.html?cate_no=69">
           셔츠/블라우스
          </a>
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=71">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=86">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=233">
          [pkeyx][ahref][area1][mkey1]
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=75">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=84">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=232">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=72">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=618">
          <a href="/product/list.html?cate_no=618">
           66Premium
          </a>
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=78">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=107">
          <a href="/product/list.html?cate_no=107">
           66운동복
          </a>
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=416">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=405">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=490">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=306">
          <a href="/product/list.html?cate_no=306">
           SALE
          </a>
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=293">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=292">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=249">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=645">
          [ahref]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=411">
          [linkx]
          
         </li>
         <li class="d1 xans-record-" data-param="?cate_no=245">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="cont snc2">
       <div class="board_nav">
        <div class="title_bn">
        </div>
        <ul>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="cont snc3">
       <div class="recent_side">
        <div class="xans-element- xans-layout xans-layout-productrecent xans-element- xans-product xans-product-recentlist side_recent xans-record- side_recent" id="rscent_sld">
         <p class="message displaynone">
          최근본 상품
          <br/>
          내역이 없습니다.
         </p>
         <ul class="recent_prd prd_slide slides">
          <li class="displaynone xans-record-">
           [ahref]
           
          </li>
          <li class="displaynone xans-record-">
           [ahref]
           
          </li>
         </ul>
        </div>
        <div class="rc_banner">
         <div class="title_rc">
          TODAY HOT!
         </div>
         <div class="ban">
          [ahref]
          
         </div>
         <div class="ban">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="site_body">
    <div class="logo_top">
     <div class="logo1">
      [ahref]
      
     </div>
     <div class="logo2">
      [linkx]
      
     </div>
    </div>
    <div class="contents_66">
     <div class="xans-element- xans-product xans-product-menupackage best50-hide">
      <div class="xans-element- xans-product xans-product-headcategory path">
       <span>
        현재 위치
       </span>
       <ol>
        <h1>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
        <li>
         [linkx]
         
        </li>
        <li class="">
         [linkx]
         
        </li>
        <li class="">
         [linkx]
         
        </li>
        <li class="displaynone">
         [linkx]
         
        </li>
        <li class="displaynone">
         <strong>
          [ahref]
          
         </strong>
        </li>
       </ol>
      </div>
      <div class="xans-element- xans-product xans-product-headcategory title">
       <p class="banner">
       </p>
       <h2>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h2>
       <span class="likeButton displaynone">
        <button type="button">
         <strong>
         </strong>
        </button>
       </span>
      </div>
      <ul class="menuCategory">
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        <a href="/product/list.html?cate_no=684">
         미니스커트
         <span class="count displaynone">
          ()
         </span>
        </a>
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [linkx]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [linkx]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [linkx]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [ahref]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [linkx]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [linkx]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
        [linkx]
        
       </li>
       <li class="xans-element- xans-product xans-product-displaycategory selected xans-record-" style="display:;">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="xans-element- xans-product xans-product-listrecommend ec-base-product prd_flexslider best50-hide">
      <div class="title_best">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
      </div>
      <ul class="prdList prd_slide slides">
       <li class="xans-record-" id="anchorBoxId_92481">
        <div class="box">
         <div class="thumbnail">
          <div class="prdImg">
           [ahref]
           
           <span class="wish">
           </span>
          </div>
         </div>
         <div class="description">
          <span class="chk">
          </span>
          <strong class="name">
           [ahref]
           
          </strong>
          <ul class="xans-element- xans-product xans-product-listitem spec info_control">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#555555;font-weight:bold;">
             16,000원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#878787;">
              상품 요약설명
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#878787;">
             트렌디한 랩 디자인으로 편안하게 입어질 스커트 팬츠! 부담없는 미니기장에 A라인 실루엣이 다리를 길고 슬림 해 보이게 해요 :) 자연스럽게 주름진 드라이한 소재로 여름 내내 쾌적하게♡
            </span>
           </li>
          </ul>
         </div>
         <div class="icon">
          <div class="promotion">
          </div>
          <div class="button">
           <div class="likeButton displaynone">
            <button type="button">
             <strong>
             </strong>
            </button>
           </div>
           <div class="option">
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="xans-record-" id="anchorBoxId_93467">
        <div class="box">
         <div class="thumbnail">
          <div class="prdImg">
           [linkx]
           
           <span class="wish">
           </span>
          </div>
         </div>
         <div class="description">
          <span class="chk">
          </span>
          <strong class="name">
           [linkx]
           
          </strong>
          <ul class="xans-element- xans-product xans-product-listitem spec info_control">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#555555;font-weight:bold;">
             12,000원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#878787;">
              상품 요약설명
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#878787;">
             포인트 톡톡한 플라워 스커트팬츠! 넉넉한 통, 밴딩허리로 편안함은 물론 군살까지 쏙 커버해 체형부담 없어요! 얇고 가벼운 원단이라 시원하답니다 :) 여름철 일상룩, 휴양지룩으로 강력추천♡
            </span>
           </li>
          </ul>
         </div>
         <div class="icon">
          <div class="promotion">
          </div>
          <div class="button">
           <div class="likeButton displaynone">
            <button type="button">
             <strong>
              [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
             </strong>
            </button>
           </div>
           <div class="option">
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="xans-record-" id="anchorBoxId_93639">
        <div class="box">
         <div class="thumbnail">
          <div class="prdImg">
           <a href="/product/detail.html?product_no=93639&amp;cate_no=250&amp;display_group=2" name="anchorBoxName_93639">
           </a>
           <span class="wish">
           </span>
          </div>
         </div>
         <div class="description">
          <span class="chk">
          </span>
          <strong class="name">
           [ahref]
           
          </strong>
          <ul class="xans-element- xans-product xans-product-listitem spec info_control">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#555555;font-weight:bold;">
             14,000원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#878787;">
              상품 요약설명
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#878787;">
             클래식한 체크 패턴으로 어디든 센슈얼하게 매치되는 미니스커트- 부착되어 있는 속 팬츠로 편안한 활동이 가능하고요 가벼운 코튼 소재가 한 여름에도 시원하게 입어져요! 단독은 물론 세트로 즐기기 좋아 추천♡
            </span>
           </li>
          </ul>
         </div>
         <div class="icon">
          <div class="promotion">
          </div>
          <div class="button">
           <div class="likeButton displaynone">
            <button type="button">
             <strong>
             </strong>
            </button>
           </div>
           <div class="option">
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="xans-record-" id="anchorBoxId_91563">
        <div class="box">
         <div class="thumbnail">
          <div class="prdImg">
           [linkx]
           
           <span class="wish">
           </span>
          </div>
         </div>
         <div class="description">
          <span class="chk">
          </span>
          <strong class="name">
           [linkx]
           
          </strong>
          <ul class="xans-element- xans-product xans-product-listitem spec info_control">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#555555;font-weight:bold;">
             16,000원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#878787;">
              상품 요약설명
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#878787;">
             군더더기없이 깔끔한 랩스커트! 허리는 잘록하고 밑단은 A자로 여유로워 실루엣 부각없이 날씬한 핏♡ 탄탄한 면소재라 늘어짐현상 없구요 내부 속바지 안감으로 더욱 편안해요! :)
            </span>
           </li>
          </ul>
         </div>
         <div class="icon">
          <div class="promotion">
          </div>
          <div class="button">
           <div class="likeButton displaynone">
            <button type="button">
             <strong>
             </strong>
            </button>
           </div>
           <div class="option">
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="xans-record-" id="anchorBoxId_91803">
        <div class="box">
         <div class="thumbnail">
          <div class="prdImg">
           [ahref]
           
           <span class="wish">
           </span>
          </div>
         </div>
         <div class="description">
          <span class="chk">
          </span>
          <strong class="name">
           <a class="" href="/product/detail.html?product_no=91803&amp;cate_no=250&amp;display_group=2">
            <span class="title displaynone">
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              상품명
             </span>
             :
            </span>
            <span style="font-size:13px;color:#000000;font-weight:bold;">
             에스닉훌치마바지
            </span>
           </a>
          </strong>
          <ul class="xans-element- xans-product xans-product-listitem spec info_control">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#555555;font-weight:bold;">
             12,000원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#878787;">
              상품 요약설명
             </span>
             :
            </strong>
            <span style="font-size:12px;color:#878787;">
             트렌디한 무드가 돋보이는 페이즐리 패턴의 스커트 팬츠♡ 예쁘게 떨어지는 라인은 다리가 날씬해 보이는 효과까지! 흔하지 않은 디자인으로 멋스러운 데일리룩 추천드려요:)
            </span>
           </li>
          </ul>
         </div>
         <div class="icon">
          <div class="promotion">
          </div>
          <div class="button">
           <div class="likeButton displaynone">
            <button type="button">
             <strong>
             </strong>
            </button>
           </div>
           <div class="option">
           </div>
          </div>
         </div>
        </div>
       </li>
      </ul>
     </div>
     <div class="xans-element- xans-product xans-product-normalpackage best50-hide">
      <div class="xans-element- xans-product xans-product-normalmenu">
       <div class="function">
        <p class="prdCount">
         Total :
         <strong>
          27
         </strong>
        </p>
        <ul class="xans-element- xans-product xans-product-orderby" id="type">
         <li class="xans-record-">
          [linkx]
          
         </li>
         <li class="xans-record-">
          [ahref]
          
         </li>
         <li class="xans-record-">
          [linkx]
          
         </li>
        </ul>
        <span class="compare displaynone">
         [linkx]
         
        </span>
       </div>
       <fieldset class="condition displaynone">
        <legend>
         조건별 검색
        </legend>
        <p>
         <select class="xans-element- xans-product xans-product-firstselect FirstSelect">
          <option value="">
           -조건선택-
          </option>
          <option class="" value="">
          </option>
         </select>
         <select class="xans-element- xans-product xans-product-secondselect SecondSelect">
          <option value="">
           -조건선택-
          </option>
          <option class="" value="">
          </option>
         </select>
         [ahref]
         
        </p>
       </fieldset>
      </div>
      <div class="xans-element- xans-product xans-product-searchdata xans-record-" id="searchContent">
       <form class="searchCondition" id="ec-product-searchdata-form" method="get" name="">
        <div class="searchArea" id="ec-searchdata-area">
         <table>
          <caption>
           검색조건
          </caption>
          <colgroup>
           <col style="width:157px;"/>
           <col style="width:auto;"/>
          </colgroup>
          <tbody>
           <tr class="xans-element- xans-product xans-product-searchfilterlist xans-record-" filterlistnum="0">
            <th class="title" scope="row">
             색상
            </th>
            <td class="colorChip">
             <div class="cell">
              <ul class="xans-element- xans-product xans-product-filterform content">
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#ffffff" svalue="color=#ffffff" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#000000" svalue="color=#000000" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#ebdcc5" svalue="color=#ebdcc5" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#d7b170" svalue="color=#d7b170" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#fec0cb" svalue="color=#fec0cb" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#d987db" svalue="color=#d987db" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#501704" svalue="color=#501704" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#00b3ff" svalue="color=#00b3ff" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#a9a9a9" svalue="color=#a9a9a9" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#feffef" svalue="color=#feffef" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#e2cca5" svalue="color=#e2cca5" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#603417" svalue="color=#603417" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#000082" svalue="color=#000082" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#56754c" svalue="color=#56754c" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#0000fd" svalue="color=#0000fd" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#f09d01" svalue="color=#f09d01" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#c20f0a" svalue="color=#c20f0a" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#007543" svalue="color=#007543" type="button">
                </button>
               </li>
               <li class="xans-record-">
                <button class="circle ec-product-searchdata-form" style="background-color:#474747" svalue="color=#474747" type="button">
                </button>
               </li>
              </ul>
              <div class="withinInput displaynone">
               <button class="btnResearch" type="button">
                검색
               </button>
              </div>
              <div class="priceInput displaynone">
               직접입력
               <span class="btnPriceSearch">
                [linkx]
                
               </span>
              </div>
              <div class="slider displaynone">
              </div>
              <p class="value displaynone">
              </p>
              <div class="extend">
               <button class="btnExtend ec-searchdata-option-title" type="button">
                펼치기/열기
               </button>
              </div>
             </div>
            </td>
           </tr>
           <tr class="xans-element- xans-product xans-product-searchfilterlist xans-record-" filterlistnum="1">
            <th class="title" scope="row">
             사이즈
            </th>
            <td class="button">
             <div class="cell">
              <ul class="xans-element- xans-product xans-product-filterform content">
               <li class="xans-record-">
                <button class="ec-product-searchdata-form" svalue="size=FREE" type="button">
                 FREE
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-form" svalue="size=L" type="button">
                 L
                </button>
               </li>
               <li class="xans-record-">
                XL<li>[pkeyx]</li>[pkeyx][area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-form" svalue="size=S" type="button">
                 S
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-form" svalue="size=M" type="button">
                 M
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-form" svalue="size=2XL" type="button">
                 2XL
                </button>
               </li>
              </ul>
              <div class="withinInput displaynone">
               <button class="btnResearch" type="button">
                검색
               </button>
              </div>
              <div class="priceInput displaynone">
               직접입력
               <span class="btnPriceSearch">
                [ahref]
                
               </span>
              </div>
              <div class="slider displaynone">
              </div>
              <p class="value displaynone">
              </p>
              <div class="extend">
               <button class="btnExtend ec-searchdata-option-title" type="button">
                펼치기/열기
               </button>
              </div>
             </div>
            </td>
           </tr>
           <tr class="xans-element- xans-product xans-product-searchfilterlist xans-record-" filterlistnum="2">
            <th class="title" scope="row">
             가격
            </th>
            <td class="button full">
             <div class="cell">
              <ul class="xans-element- xans-product xans-product-filterform content">
               <li class="xans-record-">
                <button class="ec-product-searchdata-price" max_price="20000" min_price="" svalue="price=0" type="button">
                 ~ 20,000원
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-price" max_price="40000" min_price="20000" svalue="price=1" type="button">
                 20,000원 ~ 40,000원
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-price" max_price="60000" min_price="40000" svalue="price=2" type="button">
                 40,000원 ~ 60,000원
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-price" max_price="80000" min_price="60000" svalue="price=3" type="button">
                 60,000원 ~ 80,000원
                </button>
               </li>
               <li class="xans-record-">
                <button class="ec-product-searchdata-price" max_price="" min_price="80000" svalue="price=4" type="button">
                 80,000원 ~
                </button>
               </li>
              </ul>
              <div class="withinInput displaynone">
               <button class="btnResearch" type="button">
                검색
               </button>
              </div>
              <div class="priceInput">
               직접입력
              </div>
              <div class="slider displaynone">
              </div>
              <p class="value displaynone">
              </p>
              <div class="extend">
               <button class="btnExtend ec-searchdata-option-title" type="button">
                펼치기/열기
               </button>
              </div>
             </div>
            </td>
           </tr>
           <tr class="xans-element- xans-product xans-product-searchfilterlist xans-record-" filterlistnum="3">
            <th class="title" scope="row">
             해시태그
            </th>
            <td class="check hashtag">
             <div class="cell">
              <ul class="xans-element- xans-product xans-product-filterform content">
               <li class="xans-record-">
                <label>
                </label>
               </li>
               <li class="xans-record-">
                <label>
                </label>
               </li>
               <li class="xans-record-">
                <label>
                </label>
               </li>
               <li class="xans-record-">
                <label>
                </label>
               </li>
               <li class="xans-record-">
                <label>
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 모던
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 바캉스룩
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 베이직
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 소개팅룩
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 심플
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 유니크
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 캐주얼
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 캠퍼스룩
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 클래식
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 트렌디
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 트윈룩
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 파자마
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 포멀룩
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 포인트
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 하객룩
                </label>
               </li>
               <li class="xans-record-">
                <label>
                 홈웨어
                </label>
               </li>
              </ul>
              <div class="withinInput displaynone">
               <button class="btnResearch" type="button">
                검색
               </button>
              </div>
              <div class="priceInput displaynone">
               직접입력
               <span class="btnPriceSearch">
                [ahref]
                
               </span>
              </div>
              <div class="slider displaynone">
              </div>
              <p class="value displaynone">
              </p>
              <div class="extend">
               <button class="btnExtend ec-searchdata-option-title" type="button">
                펼치기/열기
               </button>
              </div>
             </div>
            </td>
           </tr>
           <tr class="xans-element- xans-product xans-product-searchfilterlist xans-record-" filterlistnum="4">
            <th class="title" scope="row">
             결과 내 검색
            </th>
            <td class="search searchForm">
             <div class="cell">
              <div class="withinInput">
               <button class="btnResearch" type="button">
                검색
               </button>
               <div class="suggest">
                <ul>
                </ul>
               </div>
              </div>
              <div class="priceInput displaynone">
               직접입력
               <span class="btnPriceSearch">
                [linkx]
                
               </span>
              </div>
              <div class="slider displaynone">
              </div>
              <p class="value displaynone">
              </p>
              <div class="extend">
               <button class="btnExtend ec-searchdata-option-title" type="button">
                펼치기/열기
               </button>
              </div>
             </div>
            </td>
           </tr>
          </tbody>
         </table>
         <button class="btnAllExtend" type="button">
          열기/접기
         </button>
        </div>
       </form>
      </div>
      <div class="xans-element- xans-product xans-product-searchdata xans-record-">
       [linkx]<li>[area1][keywordx]</li><li>[ahref]</li>
      </div>
      <div class="xans-element- xans-product xans-product-listnormal ec-base-product best50-hide">
       <ul class="prdList grid4">
        <li class="xans-record-" id="anchorBoxId_94470">
         <div class="box">
          <div class="thumbnail">
           [area1][mkey1][area1][mkey1][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][pkeyx][pkeyx][area1][keywordx][area1][mkey1]
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx]
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;text-decoration:line-through;">
              16,000원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#f15b24;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#f15b24;font-weight:bold;">
              15,200원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              데일리, 홈웨어로 가볍게 즐기는 훌스커트팬츠! 넓게 플레어지는 바지통에 밴딩허리로 남다른 편안함♡ 면&amp;폴리 혼방 소재로 산뜻하구요 :) 베이직 컬러로 부담없이 코디하기 좋아요
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_94201">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            <a href="/product/detail.html?product_no=94201&amp;cate_no=250&amp;display_group=1" name="anchorBoxName_94201">
            </a>
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              14,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              허리 올밴딩으로 편안하게 입기좋은 치마바지- 찰랑이는 소재로 시원하게 착용되구요, 넉넉한 통과 기장감으로 체형 부담없어요! 데일리룩, 휴양지룩으로 강.추♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_94067">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            <a class="" href="/product/detail.html?product_no=94067&amp;cate_no=250&amp;display_group=1">
             <span class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               상품명
              </span>
              :
             </span>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              썸머큐롯팬츠
             </span>
            </a>
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              14,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              미니한 기장의 치마바지에요 :) 허리 밴딩이라 편하게 입을 수 있고 안 쪽에 팬츠 안감이 같이 제작되어 활동성 또한 좋은 아이랍니다- 캐주얼 룩이나 블라우스와 함께 데이트 룩으로도 너무 예뻐요 ♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_93639">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              14,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              클래식한 체크 패턴으로 어디든 센슈얼하게 매치되는 미니스커트- 부착되어 있는 속 팬츠로 편안한 활동이 가능하고요 가벼운 코튼 소재가 한 여름에도 시원하게 입어져요! 단독은 물론 세트로 즐기기 좋아 추천♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_93467">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              12,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              포인트 톡톡한 플라워 스커트팬츠! 넉넉한 통, 밴딩허리로 편안함은 물론 군살까지 쏙 커버해 체형부담 없어요! 얇고 가벼운 원단이라 시원하답니다 :) 여름철 일상룩, 휴양지룩으로 강력추천♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_93412">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              18,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              사이드주름과 버튼이 포인트인 린넨미니스커트- 여유있는 H라인으로 레그라인 군살커버에 좋아요! 시원하고 톡톡한 린넨 100%소재로 여름에 즐겨 입기 딱♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_92481">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            <a href="/product/detail.html?product_no=92481&amp;cate_no=250&amp;display_group=1" name="anchorBoxName_92481">
            </a>
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              트렌디한 랩 디자인으로 편안하게 입어질 스커트 팬츠! 부담없는 미니기장에 A라인 실루엣이 다리를 길고 슬림 해 보이게 해요 :) 자연스럽게 주름진 드라이한 소재로 여름 내내 쾌적하게♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_91803">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <li>[ahref]</li><li>[linkx]</li>[linkx]<li>[area1][keywordx]</li><li>[pkeyx]</li>
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              12,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              트렌디한 무드가 돋보이는 페이즐리 패턴의 스커트 팬츠♡ 예쁘게 떨어지는 라인은 다리가 날씬해 보이는 효과까지! 흔하지 않은 디자인으로 멋스러운 데일리룩 추천드려요:)
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_91665">
         [linkx]<li>[linkx]</li><li>[ahref]</li><li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </li>
        <li class="xans-record-" id="anchorBoxId_91642">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              14,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              단색의 아이템과 매치해도 포인트 톡톡♡ 잔플라워 패턴의 플레어 스커트팬츠! 아방한 핏이라 더욱 사랑스럽구요 :) 이너팬츠&amp;올밴딩으로 편하게 입기 좋아요~
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_91563">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              군더더기없이 깔끔한 랩스커트! 허리는 잘록하고 밑단은 A자로 여유로워 실루엣 부각없이 날씬한 핏♡ 탄탄한 면소재라 늘어짐현상 없구요 내부 속바지 안감으로 더욱 편안해요! :)
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <[keywordx]>
            </[keywordx]>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_91210">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            <a class="" href="/product/detail.html?product_no=91210&amp;cate_no=250&amp;display_group=1">
             <span class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               상품명
              </span>
              :
             </span>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              린넨슬릿스커트팬츠
             </span>
            </a>
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              린넨 혼방으로 S/S, 간절기 내내! 밑위가 넉넉한 스커트팬츠라 핏이 더욱 예뻐요♡ 캐주얼룩, 포멀룩 구분없이 어디에나 깔끔하게 매치! 다채로운 6컬러로 컬러별 소장도 강력 추천해요~ :)
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_90801">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              A라인핏으로 날씬해보이는 체크 랩스커트팬츠! 활동감을 높여준 디자인으로 데일리하게 자주 찾게되는 아이예요 :) 모던한 체크지로 상의 어디에나 포인트 톡톡♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_90289">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              14,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              심플, 베이직한 A라인 미니스커트! 이너팬츠와 허리뒷밴드로 편하게 입어져요! :) 기본 스타일이라 어디에나 잘 어울리구요! 린넨 55%함량으로 여름까지 쭈욱~
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_54269">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              12,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              기능성 소재로 땀흡수에GOOD
              <br/>
              짧지않은 치마기장으로
              <br/>
              평상시에도 부담없어요:D
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_86704">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            <a href="/product/detail.html?product_no=86704&amp;cate_no=250&amp;display_group=1" name="anchorBoxName_86704">
            </a>
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              18,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              날씬해 보이는 A라인 언발스커트!
              <br/>
              톡톡한 체크지에 버튼 포인트까지
              <br/>
              세련된 디테일에 반한 아이랍니다 :)
              <br/>
              니트,맨투맨 어디든 잘어울려요~
              <br/>
              속바지 안감이라 편하게 입어요♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_86524">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              세련된 컬러배색이 단벌코디도 고급진!
              <br/>
              슬림한 A라인 핏 벨트세트 스커트♡
              <br/>
              헤링본+체크패턴의 조화가 매력적-
              <br/>
              속바지 안감으로 활동하기에도
              <br/>
              편하게 입어졌던 A스커트예요-
              <br/>
              자켓과 세트코디도 추천할게요♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_83089">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              언발디테일과 절개선으로
              <br/>
              날씬해보일수밖에 없는 디자인-!
              <br/>
              A라인에 4부기장으로 떨어져
              <br/>
              딱 다리가 예뻐보이는 핏이에요 :)
              <br/>
              블라우스,셔츠와 특히 잘어울렸고
              <br/>
              은근 스니커즈,운동화 코디에도 굿!
              <br/>
              2%스판으로 움직임도 편했어요~
              <br/>
              S/S데일리스커트로 강추!
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[ahref]</li>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_82926">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            <a class="" href="/product/detail.html?product_no=82926&amp;cate_no=250&amp;display_group=1">
             <span class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               상품명
              </span>
              :
             </span>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              폴링랩린넨숏츠
             </span>
            </a>
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;text-decoration:line-through;">
              19,900원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#f15b24;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#f15b24;font-weight:bold;">
              13,900원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              톡톡한 린넨지로 시원한 감촉에
              <br/>
              와이드 밑단과 허리 뒷밴딩으로
              <br/>
              편안함까지 쏙- 챙긴 랩치마바지!
              <br/>
              볼드한 요크 스트랩으로 한번 꼬아
              <br/>
              톡- 늘어뜨리기만해도 멋스러워요
              <br/>
              체형커버에도 탁월한 팬츠♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           [linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li><li>[area1][keywordx]</li>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_81436">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;text-decoration:line-through;">
              15,000원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#f15b24;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#f15b24;font-weight:bold;">
              10,500원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              날씬해보이는 플레어 치마바지!
              <br/>
              여러번 샘플링끝에 찾은 핏이에요 :)
              <br/>
              4부길이로 길이감 안정적이고
              <br/>
              A라인 실루엣의 플레어핏으로
              <br/>
              체형커버도 예쁜 치마바지♡
              <br/>
              허리밴딩으로 편하게 입어지고
              <br/>
              블라우스,티셔츠 다양하게 어울려
              <br/>
              데일리팬츠로 강.추해요-!
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_81267">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              14,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              잔잔한 플라워패턴이 들어간
              <br/>
              플리츠주름스커트를 소개해요
              <br/>
              쫀쫀한 허리밴딩으로 라인을 쏙~
              <br/>
              잡아주어 잘록한 핏이 연출되고요
              <br/>
              A라인으로 퍼지는 핏이 예뻤어요
              <br/>
              안감이 속바지로 들어가 활동성도 굿♡
              <br/>
              55~77까지 편하게 입어요 :D
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_80536">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [ahref]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;text-decoration:line-through;">
              18,000원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#f15b24;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#f15b24;font-weight:bold;">
              12,600원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              A라인으로 예쁘게 떨어지는 코튼SK-
              <br/>
              앞쪽에 앙증맞은 포켓과 절개선이 콕!
              <br/>
              세트로 구성된 오링벨트를 더해주면
              <br/>
              캐주얼한 룩으로 입어져 좋았어요 :)
              <br/>
              속팬츠 디자인으로 활동성도 UP♡
              <br/>
              지금부터 여름시즌 쭈욱 입어요!
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_80275">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              날씬해보이는 4부길이 스커트팬츠!
              <br/>
              감각적인 언발 랩스커트팬츠 입니다 :)
              <br/>
              5% 스판혼방에 여유로운 통으로
              <br/>
              비교할 수 없는 편안함을 더했구요!
              <br/>
              사이드엔 오링 지퍼로 트렌디함까지~
              <br/>
              깔끔한 디자인이라 어디에나 매치 굿♡
              <br/>
              데일리,오피스룩 어디든 OK!
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             [ahref][ahref][ahref][pkeyx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][pkeyx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx]
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_71951">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            [linkx]
            
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              16,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              A라인 핏으로 떨어지는
              <br/>
              격자 체크패턴 치마바지예요!
              <br/>
              독특한 디자인과 클래식한 컬러로
              <br/>
              기본 상의와도 매치가 좋아요 :)
              <br/>
              가볍게 묶어 연출하는 끈으로
              <br/>
              묶는 방법에 따라 다양하게!
              <br/>
              유니크하고 귀여운 팬츠예요♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_68880">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            <a href="/product/detail.html?product_no=68880&amp;cate_no=250&amp;display_group=1" name="anchorBoxName_68880">
            </a>
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            [linkx]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              18,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              감각적으로 절개라인이 들어간
              <br/>
              A라인 4부 플레어 스커트예요~ :)
              <br/>
              활동하기 편한 치마바지로 부담없고
              <br/>
              힙과 허벅지는 커버되는 핏!
              <br/>
              쫀쫀한 소재로 고급스러워요-
              <br/>
              전체적으로 신축이 좋아서
              <br/>
              입는내내 편하실거에요^^
              <br/>
              다양한 상의에 여름내내 입어요♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           [pkeyx][pkeyx][area1][keywordx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][linkx][pkeyx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][ahref][area1][mkey1][ahref]
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_71910">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            <a href="/product/detail.html?product_no=71910&amp;cate_no=250&amp;display_group=1" name="anchorBoxName_71910">
            </a>
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
            [area1][keywordx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx]
           </span>
           <strong class="name">
            [ahref]
            
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              12,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              A라인으로 사랑스럽게 퍼지는
              <br/>
              치마 반바지를 소개할게요 :)
              <br/>
              와이드핏으로 편하게 입어지고
              <br/>
              허리밴딩은 캐주얼하게 포인트!
              <br/>
              박스티,블라우스 다른느낌으로
              <br/>
              다양한 상의에 입어요!
              <br/>
              F~XL사이즈로 사이즈 걱정도 NO!
              <br/>
              치마인듯,바지인듯 편하고 귀엽게♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
        <li class="xans-record-" id="anchorBoxId_71573">
         <div class="box">
          <div class="thumbnail">
           <div class="prdImg">
            <a href="/product/detail.html?product_no=71573&amp;cate_no=250&amp;display_group=1" name="anchorBoxName_71573">
            </a>
            <span class="wish">
            </span>
           </div>
          </div>
          <div class="description">
           <span class="chk">
           </span>
           <strong class="name">
            <a class="" href="/product/detail.html?product_no=71573&amp;cate_no=250&amp;display_group=1">
             <span class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               상품명
              </span>
              :
             </span>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              포켓벨트치마반바지
             </span>
            </a>
           </strong>
           <ul class="xans-element- xans-product xans-product-listitem spec info_control">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#555555;font-weight:bold;">
              19,000원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               상품 요약설명
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;">
              시선을 사로잡는 숏팬츠-!
              <br/>
              랩처럼 겹쳐 입는 스타일로
              <br/>
              스커트 팬츠 같이 입어져요 :)
              <br/>
              빅 포켓과 리본은 포인트로!
              <br/>
              기본T에도 멋스럽게 어울려요
              <br/>
              앞은 스커트,뒷모습은 숏츠로
              <br/>
              귀엽고 상큼한 데일리룩으로 추천♡
             </span>
            </li>
           </ul>
          </div>
          <div class="icon">
           <div class="promotion">
           </div>
           <div class="button">
            <div class="likeButton displaynone">
             <button type="button">
              <strong>
              </strong>
             </button>
            </div>
            <div class="option">
            </div>
           </div>
          </div>
         </div>
        </li>
       </ul>
      </div>
     </div>
     <div class="xans-element- xans-product xans-product-normalpaging ec-base-paginate best50-hide">
      <a class="first" href="e">
      </a>
      <a href="e">
      </a>
      <ol>
       <li class="xans-record-">
        [ahref]
        
       </li>
      </ol>
      [linkx]
       [ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][linkx][linkx][linkx][area1][mkey1][area1][mkey1][pkeyx][ahref][area1][mkey1][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
      
      [ahref]
      
     </div>
     <div id="spm_page_type" style="display:none">
      sq_product_list_page
     </div>
     <div id="spm_banner_main">
     </div>
    </div>
   </div>
  </div>
  <div class="tail_wrap">
   <div class="tail_body">
    <div class="tail_item">
     <div class="title_tail">
      CS CENTER
     </div>
     <div class="tel">
      1688-1360
     </div>
     <div class="time">
      <span>
       WEEK
      </span>
      10:00 ~ 17:00
      <br/>
      <span>
       LUNCH
      </span>
      12:00 ~ 13:00
     </div>
     <div class="time_info">
      주말, 공휴일은 휴무입니다.
      <br/>
      통화량 폭주로 전화연결이 안 될 경우,
      <br/>
      게시판에 문의 남겨주시면
      <br/>
      빠른 처리 해드리겠습니다.
      <br/>
     </div>
    </div>
    <div class="tail_item">
     <div class="title_tail">
      ACCOUNT INFO
     </div>
     <ul class="bank_info">
      <li>
       <span>
        농협
       </span>
       317-6677-6677-11
      </li>
      <li>
       <span>
        국민
       </span>
       96677-667751
      </li>
      <li>
       <span>
        우체국
       </span>
       400010-02-890732
      </li>
      <li>
       <span>
        우리
       </span>
       1005-593-667788
      </li>
      <li>
       예금주: ㈜육육걸즈
      </li>
     </ul>
     <a href="/ms/escrow/s_escrowYn.do?mertid=CF_mall66" target="_blank">
     </a>
    </div>
    <div class="tail_item">
     <div class="title_tail">
      RETURN
     </div>
     <div class="return_txt">
      <a href="/article/5f-%EB%B0%B0%EC%86%A1%ED%9B%84%EA%B5%90%ED%99%98%ED%99%98%EB%B6%88/15/104394468/">
       교환/반품 정책 확인
       <i class="xi-play">
       </i>
      </a>
      <br/>
      <br/>
      전북 전주시 덕진구 백제대로 714
      <br/>
      동전주 우체국 물류센터
      <br/>
      육육걸즈 앞
      <br/>
     </div>
    </div>
    <div class="tail_item">
     <div class="title_tail">
      WITH US
     </div>
     <ul class="shop_info">
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
     <div class="bsns_wrap">
      <ul class="sns">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="tail_item last">
     <div class="title_tail">
      COMPANY INFO
     </div>
     <div class="com_info">
      상호명: (주) 육육걸즈 |  대표 : 박예나
      <br/>
      주소 : 55075 전라북도 전주시 완산구 호동길 24 (삼천동3가) 육육걸즈
      <br/>
      개인정보관리책임자 : 박예나 | 이메일: dpskek@hanmail.net
      <br/>
      사업자등록번호 : 402-86-03809
      [ahref]
      
      <br/>
      통신판매업신고 : 2013-전주완산-0303
      <br/>
      <br/>
      호스팅 : (주)심플렉스인터넷
      <br/>
      Copyright © 육육걸즈 all rights reserved.
      <br/>
      <div class="logo_b2">
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="copyright_wrap">
   <div class="cptxt">
    Copyright ©
    <strong>
     육육걸즈
    </strong>
    All rights reserved.
   </div>
  </div>
  <div class="scroll_cotrol">
   [linkx]
   
   [linkx]
   
  </div>
  <div class="sub_mid_nav" id="qna_nav">
   <ul class="bnav_current">
    <li>
     [linkx]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [linkx]
     
    </li>
    <li>
     [linkx]
     
    </li>
    <li>
     [ahref]
     
    </li>
   </ul>
  </div>
  <div id="progressPaybar" style="display:none;">
   <div class="layerProgress" id="progressPaybarBackground">
   </div>
   <div id="progressPaybarView">
    <div class="box">
     <p class="graph">
      <span>
      </span>
      <span>
      </span>
     </p>
     <p class="txt">
      본 결제 창은 결제완료 후 자동으로 닫히며,결제 진행 중에 본 결제 창을 닫으시면
      <br/>
      주문이 되지 않으니 결제 완료 될 때 까지 닫지 마시기 바랍니다.
     </p>
    </div>
   </div>
  </div>
  <noscript>
   <div style="display:inline;">
   </div>
  </noscript>
  <div id="crt_product_list_script" style="display:none;">
  </div>
  <div id="ggc_common_top_script" style="display:none;">
  </div>
  <div id="ggd_product_list_script" style="display:none;">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0116
  </b>
 </body>
</html>
|<---