--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
   [area1][keywordx]<li>[ahref]</li><li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
  </meta>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="no-cache" http-equiv="Cache-Control"/>
  <meta content="0" http-equiv="Expires"/>
  <meta content="no-cache" http-equiv="Pragma"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
   <meta content="website" property="og:type"/>
   <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
   <meta content="http://www.anyhuman.co.kr/home/img/logo.jpg" property="og:image"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
   <meta content="28ab8adf345cbd1c2550e504ef4b2e01a3bfeb19" name="naver-site-verification">
    <meta content="나눔의집 위안부 할머님 들을 후원하는 희망나비 위안부 팔찌 공식 판매처" name="description">
     <meta content="website" property="og:type"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="http://www.anyhuman.co.kr/web/upload/category/logo/462f999dbc70bd171a92b0de3b0399be_3_top.jpg" property="og:image"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <noscript>
  </noscript>
  <div id="wrap">
   <div id="header">
    <div class="gnb">
     <div class="container cb">
      <ul class="xans-element- xans-layout xans-layout-statelogoff gnb_ul flUl fr">
       <li class="t_f_login fr">
        [ahref]
        
       </li>
       <li class="li1">
        [linkx]
        
       </li>
       <li>
        [area1][keywordx][ahref][ahref][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][linkx][linkx][linkx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][ahref][area1][keywordx][pkeyx][area1][mkey1][area1][mkey1][pkeyx][ahref]
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="logo_lnb container cb">
     <h1 class="xans-element- xans-layout xans-layout-logotop logo fl">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h1>
     <ul class="lnb fl flUl">
      <li class="li li1">
       [linkx]
       
      </li>
      <li class="xans-element- xans-layout xans-layout-category li li2 xans-record-">
       [ahref]
       
      </li>
      <li class="li li3">
       [ahref]
       
      </li>
      <li class="li li4">
       [linkx]
       
      </li>
      <li class="li li5">
       [ahref]
       
      </li>
     </ul>
     <div class="hd_r fr cb">
      <form action="/product/search.html" enctype="multipart/form-data" id="searchBarForm" method="get" name="" target="_self">
       <div class="xans-element- xans-layout xans-layout-searchheader hd_s fr">
        <fieldset>
        </fieldset>
       </div>
      </form>
      <div class="hd_w_link tar fr">
       [ahref]
       
       [linkx]
       
      </div>
      <div class="hd_sns tar fr">
       [ahref]
       
       [ahref]
       
      </div>
     </div>
    </div>
   </div>
   <div class="container quick por">
    <div class="r poa" id="quick">
     <p>
      [ahref]
      
     </p>
     <p>
      [ahref]
      
     </p>
     <div class="q_link">
      <p>
       [linkx]
       
      </p>
      <p>
       [linkx]
       
      </p>
      <p>
      </p>
      <div class="xans-element- xans-layout xans-layout-productrecent">
       <ul>
        <li class="pb5 displaynone xans-record-">
         [linkx]
         
        </li>
        <li class="pb5 displaynone xans-record-">
         [linkx]
         
        </li>
       </ul>
       <p class="top">
        [linkx]
        
       </p>
      </div>
     </div>
    </div>
   </div>
   <div id="contents" style="background-color:#fcf7e7;">
    <div class="container">
     <noscript>
     </noscript>
     <div class="xans-element- xans-product xans-product-detail">
      <div class="prod_v_t_box cb detailArea">
       <div class="xans-element- xans-product xans-product-image prod_v_l fl">
        <div class="big keyImg">
         <div class="thumbnail">
          [linkx]
          
          <div id="zoom_wrap">
          </div>
         </div>
        </div>
        <div class="xans-element- xans-product xans-product-addimage prod_v_thum listImg">
         <ul class="flUl">
          <li class="xans-record-">
          </li>
         </ul>
        </div>
        <div class="color displaynone">
        </div>
        <div class="likeButton displaynone">
         <button type="button">
          <span class="title">
           좋아요
          </span>
          <span class="count">
          </span>
         </button>
        </div>
       </div>
       <div class="prod_v_r fr">
        <div class="prod_v_top">
         <div class="prod_title_box">
          <h2 class="prod_title">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <[keywordx]>
          </[keywordx]>
          <div class="xans-element- xans-product xans-product-detaildesign">
           <div class="option_tb">
            <table summary="">
             <caption>
              기본 정보
             </caption>
             <tbody>
              <tr class="dn xans-record-">
               <th scope="row">
                <span style="font-size:16px;color:#555555;">
                 상품명
                </span>
               </th>
               <td>
                <span style="font-size:16px;color:#555555;">
                 위안부 희망나비 팔찌
                </span>
               </td>
              </tr>
              <tr class="dn xans-record-">
               <th scope="row">
                <span style="font-size:14px;color:#333333;font-weight:bold;">
                 판매가
                </span>
               </th>
               <td class="copy_txt">
                <span style="font-size:14px;color:#333333;font-weight:bold;">
                 <strong id="span_product_price_text">
                  15,000원
                 </strong>
                </span>
               </td>
              </tr>
              <tr class="xans-record-">
               <th scope="row">
                <span style="font-size:14px;color:#333333;">
                 국내·해외배송
                </span>
               </th>
               <td>
                <span style="font-size:14px;color:#333333;">
                 국내배송
                </span>
               </td>
              </tr>
              <tr class="xans-record-">
               <th scope="row">
                <span style="font-size:14px;color:#666666;">
                 배송비
                </span>
               </th>
               <td>
                <span style="font-size:14px;color:#666666;">
                 <span class="delv_price_B">
                  <strong>
                   2,500원
                  </strong>
                  (30,000원 이상 구매 시 무료)
                 </span>
                </span>
               </td>
              </tr>
              <tr class="xans-record-">
               <th scope="row">
                <span style="font-size:12px;color:#555555;">
                 수량
                </span>
               </th>
               <td>
                <span style="font-size:12px;color:#555555;">
                 <span id="NewProductQuantityDummy">
                  <span class="quantity">
                  </span>
                 </span>
                </span>
               </td>
              </tr>
             </tbody>
            </table>
           </div>
          </div>
         </div>
         <div class="option_tb">
          <table summary="">
           <caption>
            SNS 상품홍보
           </caption>
           <tbody>
            <tr class="">
             <th scope="row">
              SNS 상품홍보
             </th>
             <td class="social">
             </td>
            </tr>
           </tbody>
          </table>
         </div>
         <p class="displaynone">
         </p>
         <div class="option_tb">
          <table summary="">
           <caption>
            상품 옵션
           </caption>
           <tbody class="xans-element- xans-product xans-product-option xans-record-">
            <tr class="xans-element- xans-product xans-product-option xans-record-">
             <th scope="row">
              크기
             </th>
             <td>
              <select class="ProductOption0" id="product_option_id1" item_listing_type="S" name="option1" option_code="O000000B" option_product_no="18" option_select_element="ec-option-select-finder" option_sort_no="1" option_style="select" option_title="크기" option_type="E" product_option_area="product_option_18_0" product_type="product_option" required="true">
               <option link_image="" value="*">
                - [필수] 옵션을 선택해 주세요 -
               </option>
               <option link_image="" value="**">
                -------------------
               </option>
               <option link_image="" value="3">
                큰팔찌(18.5cm~) 남
               </option>
               <option link_image="" value="4">
                작은팔찌(13.5cm~) 여
               </option>
              </select>
              <p class="value">
              </p>
             </td>
            </tr>
            <tr class="displaynone" id="">
             <td class="selectButton" colspan="2">
              [ahref]
              
             </td>
            </tr>
           </tbody>
          </table>
         </div>
         <div class="option_tb" id="totalProducts">
          <p class="dn option_t_txt pb5 ec-base-help txtWarn txt11 displaynone">
           수량을 선택해주세요.
          </p>
          <p class="ec-base-help txtWarn txt11 displaynone">
           위 옵션선택 박스를 선택하시면 아래에 상품이 추가됩니다.
          </p>
          <table class="quant_tb" summary="">
           <tbody class="displaynone">
            <tr>
             <th>
              위안부 희망나비 팔찌
             </th>
             <td>
              <span class="quantity">
               [linkx]
               
               [ahref]
                <li>[linkx]</li>[linkx][area1][mkey1]
               
              </span>
             </td>
             <td class="dn right">
              <span class="quantity_price">
               15000
              </span>
              <span class="mileage displaynone">
               (
               <span class="mileage_price">
                0
               </span>
               )
              </span>
             </td>
            </tr>
           </tbody>
           <tbody>
           </tbody>
           <tfoot>
            <tr class="prod_v_total">
             <th>
              총 상품금액
             </th>
             <td class="tar" colspan="2">
              <span class="total">
               <strong>
                <em>
                 0
                </em>
               </strong>
               (0개)
              </span>
             </td>
            </tr>
            <tr>
             <td colspan="3">
              <p class="ec-base-help txt11 displaynone EC-price-warning">
               할인가가 적용된 최종 결제예정금액은 주문 시 확인할 수 있습니다.
              </p>
             </td>
            </tr>
           </tfoot>
          </table>
         </div>
        </div>
        <div class="xans-element- xans-product xans-product-action">
         <div class="prod_v_btn ec-base-button">
          [ahref]
          
          [ahref]
          
          <span class="displaynone">
          </span>
          [ahref]
          
         </div>
         <div id="NaverChk_Button">
         </div>
        </div>
       </div>
      </div>
      <div class="supplyInfo displaynone">
      </div>
      <div class="eventArea displaynone">
       <h3>
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <div class="event">
       </div>
      </div>
     </div>
     <div class="xans-element- xans-product xans-product-additional prod_v_cont_box">
      <div class="ec-base-tab grid5" id="prdDetail">
       <ul class="prod_v_tab flUl menu">
        <li class="li1 selected">
         [ahref]
         
        </li>
        <li class="li2">
         [linkx]
          <li>[area1][mkey1]</li>[pkeyx][area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
         
        </li>
        <li class="li3">
         [linkx]
         
        </li>
        <li class="li4">
         [linkx]
         
        </li>
        <li class="li5">
         [linkx]
         
        </li>
       </ul>
       <div class="prod_v_cont">
        <p>
        </p>
        <p style="text-align: center;">
        </p>
        <p style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
         <iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="" frameborder="0" height="360" src="https://www.youtube.com/embed/ZjwcGz7_zgo" width="640">
         </iframe>
         <br/>
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
         <br/>
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
         <br/>
        </p>
        <div align="center">
        </div>
        <div align="center">
         <p>
         </p>
         <p>
         </p>
         <p>
          <br/>
         </p>
        </div>
        <div align="center">
         <p>
         </p>
         <p>
         </p>
         <p>
         </p>
         <p>
          [area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
         </p>
         <p>
          <br/>
         </p>
        </div>
        <p style="text-align: center;">
        </p>
        <p style="text-align: center;">
        </p>
        <p style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
        </p>
        <p align="center" style="text-align: center;">
         <br/>
        </p>
       </div>
      </div>
      <div class="ec-base-tab grid5" id="prdInfo">
       <ul class="prod_v_tab flUl menu">
        <li class="li1">
         [ahref]
         
        </li>
        <li class="li2 selected">
         [linkx]
         
        </li>
        <li class="li3">
         [ahref]
         
        </li>
        <li class="li4">
         [linkx]
         
        </li>
        <li class="li5">
         [ahref]
         
        </li>
       </ul>
       <div class="dn prod_v_cont">
        <h3>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
        고액결제의 경우 안전을 위해 카드사에서 확인전화를 드릴 수도 있습니다. 확인과정에서 도난 카드의 사용이나 타인 명의의 주문등
      정상적인 주문이 아니라고 판단될 경우 임의로 주문을 보류 또는 취소할 수 있습니다.
        <br/>
        <br/>
        무통장 입금은 상품 구매 대금은 PC뱅킹, 인터넷뱅킹, 텔레뱅킹 혹은 가까운 은행에서 직접 입금하시면 됩니다.
        <br/>
        주문시 입력한 입금자명과 실제입금자의 성명이 반드시 일치하여야 하며, 7일 이내로 입금을 하셔야 하며 입금되지
      않은 주문은 자동취소 됩니다.
        <br/>
       </div>
       <div class="dn prod_v_cont">
        <h3>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h3>
        <ul class="delivery">
         <li>
          배송 방법 : 택배
         </li>
         <li>
          배송 지역 : 전국지역
         </li>
         <li>
          배송 비용 : 2,500원
         </li>
         <li>
          배송 기간 : 2일 ~ 4일
         </li>
         <li>
          배송 안내 :
          <br>
           · 애니휴먼 상품은 대한통운 택배를 이용하여 배송이 진행됩니다. (1588-1255)
           <br>
            · 애니휴먼 상품은 3만원 이상 구매시 배송비가 무료입니다. 3만원 미만은 2,500원의 배송비가 부과됩니다.
            <br>
             · 발송기간은 평균 1~2일 정도 소요 예정이며 기타 지역 또는 택배사 사정에 따라 조금 틀려집니다.(상품별로 상이할 수 있으니 상품 상세페이지를 확인해주세요.)
             <br>
              · 무통장 입금확인은 오후 1시까지 이루어집니다. 입금확인은 전날 오후 1시 이후~당일 오후 1시 이전 건에 대해 오전10시부터 이루어 집니다 .
              <br>
               · 상품 품절 또는 입고 지연시 공지사항과 문자메세지로 알려드립니다. 경우에 따라 유선으로 안내해 드립니다.
              </br>
             </br>
            </br>
           </br>
          </br>
         </li>
        </ul>
       </div>
       <div class="prod_v_cont">
        <div class="fwb">
         ▶ 배송 안내
        </div>
        <br>
         · 애니휴먼 상품은 대한통운 택배를 이용하여 배송이 진행됩니다. (1588-1255)
         <br>
          · 애니휴먼 상품은 3만원 이상 구매시 배송비가 무료입니다. 3만원 미만은 2,500원의 배송비가 부과됩니다.
          <br>
           · 발송기간은 평균 1~2일 정도 소요 예정이며 기타 지역 또는 택배사 사정에 따라 조금 틀려집니다.(상품별로 상이할 수 있으니 상품 상세페이지를 확인해주세요.)
           <br>
            · 무통장 입금확인은 오후 1시까지 이루어집니다. 입금확인은 전날 오후 1시 이후~당일 오후 1시 이전 건에 대해 오전10시부터 이루어 집니다 .
            <br>
             · 상품 품절 또는 입고 지연시 공지사항과 문자메세지로 알려드립니다. 경우에 따라 유선으로 안내해 드립니다.
            </br>
           </br>
          </br>
         </br>
        </br>
       </div>
       <div class="prod_v_cont">
        <b>
         ▶ 교환/반품
        </b>
        <div>
         <b>
          <br/>
         </b>
         <div>
          · 교환/반품 신청은 상품 수령 후 5일 이내 애니휴먼 홈페이지 접속 후 해당 상품 클릭 후 상품 밑부분 Q&amp;A 글을 남겨주세요.
         </div>
         <div>
          또는 고객센터 ( 070-7794-3213)으로 전화 상담 후 대한통운 택배(1588-1255) 로 송장번호로 반품접수후 애니휴먼으로 보내주세요.
         </div>
         <div>
          · 타 택배사 이용 교환 하실 경우 선불 택배비 결제 해주시고 편도 택배비 2500원을 입금(동봉) 해주셔야 합니다.
         </div>
         <div>
          · 단순변심/고객주문 실수로 인한 환불(반품)은 편도 택배비 5000원을 입금해주셔야 합니다.
         </div>
         <div>
          · 단순변심/고객주문 실수로 인한 교환은 왕복택배비 5000원을 입금해주셔야 합니다.
         </div>
         <div>
          · 상품 발송전 주문 취소 교환 배송지 주소 변경은 입금확인 1시 이전에 전화상담 또는 구매하신 상품 게시판에 글을 남겨주셔야 물류팀에서 처리가능합니다.
         </div>
         <div>
          · ‘배송중’ 상품은 상품이 이미 출고되어 배송비 부담후 취소/교환이 가능합니다.
         </div>
         <div>
          · 불량으로 인한 경우는 상품 수령일로부터 2일 이내 고객상담센터(070-7794-3213)로 전화상담후 재발송 해드립니다.
         </div>
         <div>
          <br/>
         </div>
         <div>
          <br/>
         </div>
         <div>
          <br/>
         </div>
         <div>
          <br/>
         </div>
         <b>
          ▶ 환불
         </b>
        </div>
        <div>
         <b>
          <br/>
         </b>
         <div>
          · 반송 상품 입고 후 일괄적으로 이루어집니다.
         </div>
         <div>
          · 카드결제 취소의 경우 카드사 영업일 기준 7일 정도 소요됩니다.
         </div>
         <div>
          · 계좌 환불의 경우 일괄적으로 이루어지며 영업일 기준 약 2~3일 정도 소요됩니다.
         </div>
         <div>
          · 무통장 입금 결제건의 경우 구매하신 상품 게시판에 계좌번호를 남겨 주시기 바랍니다.[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][mkey1][area1][mkey1][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][pkeyx][ahref][pkeyx][area1][keywordx][pkeyx][ahref][area1][keywordx]
         </div>
        </div>
       </div>
       <div class="tac">
       </div>
       <div class="prod_v_cont">
        <h3 class="dn">
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h3>
       </div>
      </div>
      <div class="ec-base-tab grid5" id="prdReview">
       <ul class="prod_v_tab flUl menu">
        <li class="li1">
         [ahref]
         
        </li>
        <li class="li2">
         [linkx]
         
        </li>
        <li class="li3 selected">
         [ahref]
         
        </li>
        <li class="li4">
         [linkx]
         
        </li>
        <li class="li5">
         [linkx]
         
        </li>
       </ul>
       <div class="prod_v_cont">
        <div class="xans-element- xans-product xans-product-review">
         [linkx]
         
         <p class="noAccess displaynone">
          글읽기 권한이 없습니다.
         </p>
         <div class="minor displaynone">
          <p>
           <strong>
            "19세 미만의 미성년자"
           </strong>
           는 출입을 금합니다!
          </p>
          <p class="button">
           [linkx]
           
          </p>
         </div>
         <div class="v_bd_tb ec-base-table typeList">
          <table class="" summary="">
           <caption>
            상품사용후기
           </caption>
           <thead>
            <tr>
             <th class="th1" scope="col">
              번호
             </th>
             <th class="th2" scope="col">
              제목
             </th>
             <th class="th3" scope="col">
              작성자[area1][mkey1]<li>[pkeyx]</li><li>[pkeyx]</li>[pkeyx]
             </th>
             <th class="th4" scope="col">
              작성일
             </th>
            </tr>
           </thead>
           <tbody class="center">
            <tr class="xans-record-">
             <td>
              212
             </td>
             <td class="subject left txtBreak">
              [ahref]
              
             </td>
             <td>
              김****
             </td>
             <td class="txtInfo txt11">
              2019-07-17
             </td>
            </tr>
            <tr class="xans-record-">
             <li>[ahref]</li>[ahref][area1][mkey1]<li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
            </tr>
            <tr class="xans-record-">
             <td>
              210
             </td>
             <td class="subject left txtBreak">
              [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             </td>
             <td>
              홍****
             </td>
             <td class="txtInfo txt11">
              2019-03-27
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              209
             </td>
             <td class="subject left txtBreak">
             </td>
             <td>
              애니휴먼
             </td>
             <td class="txtInfo txt11">
              2019-03-27
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              208
             </td>
             <td class="subject left txtBreak">
              [ahref]
              
             </td>
             <td>
              박****
             </td>
             <td class="txtInfo txt11">
              2019-03-13
             </td>
            </tr>
           </tbody>
          </table>
         </div>
        </div>
        <p class="tar">
         [ahref]
         
         [ahref]
         
        </p>
        <div class="xans-element- xans-product xans-product-reviewpaging pageNum">
         [ahref]
         
         [ahref]
         
         [linkx]
         
         [linkx]
         
         [linkx]
         
         [ahref]
         
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="ec-base-tab grid5" id="prdQnA">
       <ul class="prod_v_tab flUl menu">
        <li class="li1">
         [ahref]
         
        </li>
        <li class="li2">
         [linkx]
         
        </li>
        <li class="li3">
         [linkx]
          [area1][keywordx][linkx][linkx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][pkeyx][ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][linkx][area1][keywordx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][pkeyx][ahref]
         
        </li>
        <li class="li4 selected">
         [linkx]
         
        </li>
        <li class="li5">
         [ahref]
         
        </li>
       </ul>
       <div class="prod_v_cont">
        <div class="xans-element- xans-product xans-product-qna">
         [ahref]
         
         <p class="noAccess displaynone">
          글읽기 권한이 없습니다.
         </p>
         <div class="minor displaynone">
          <p>
           <strong>
            "19세 미만의 미성년자"
           </strong>
           는 출입을 금합니다!
          </p>
          <p class="button">
           [linkx]
           
          </p>
         </div>
         <div class="v_bd_tb ec-base-table typeList">
          <table class="" summary="">
           <caption>
            상품 Q&amp;A
           </caption>
           <thead>
            <tr>
             <th class="th1" scope="col">
              번호
             </th>
             <th class="th2" scope="col">
              제목
             </th>
             <th class="th3" scope="col">
              작성자
             </th>
             <th class="th4" scope="col">
              작성일
             </th>
            </tr>
           </thead>
           <tbody>
            <tr class="xans-record-">
             <td>
              817
             </td>
             <td class="subject left txtBreak">
             </td>
             <td>
              오****
             </td>
             <td class="txtInfo txt11">
              2019-08-13
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              816
             </td>
             <td class="subject left txtBreak">
             </td>
             <td>
              애니휴먼
             </td>
             <td class="txtInfo txt11">
              2019-08-13
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              815
             </td>
             <td class="subject left txtBreak">
             </td>
             <td>
              손****[area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx]
             </td>
             <td class="txtInfo txt11">
              2019-08-13
             </td>
            </tr>
            <tr class="xans-record-">
             <td>
              814
             </td>
             <td class="subject left txtBreak">
             </td>
             <td>
              애니휴먼
             </td>
             <td class="txtInfo txt11">
              2019-08-13
             </td>
            </tr>
            <tr class="xans-record-">
             <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>[area1][keywordx]<li>[linkx]</li>[ahref]
            </tr>
           </tbody>
          </table>
         </div>
        </div>
        <p class="tar">
         [linkx]
         
         [linkx]
         
        </p>
        <div class="xans-element- xans-product xans-product-qnapaging pageNum">
         [ahref]
         
         [linkx]
         
         [linkx]
         
         [ahref]
         
         [linkx]
         
         [linkx]
         
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div id="footer">
    <div class="f_cs_box">
     <div class="container cb">
      <div class="fl">
      </div>
      <div class="fl">
      </div>
      <div class="fl">
       <p class="t1 pb20">
       </p>
       <ul>
        <li class="pb10">
         [linkx]
         
        </li>
        <li class="pb10">
         [linkx]
         
        </li>
        <li class="pb10">
         [linkx]
         
        </li>
       </ul>
      </div>
      <div class="fl">
       <select class="fsite db mb20" id="" name="">
        <option value="">
         Related Sites
        </option>
        <option value="http://www.nanum.org/">
         나눔의집
        </option>
       </select>
       <p class="pb10">
        [ahref]
        
       </p>
       <p>
        [linkx]
        
       </p>
      </div>
     </div>
    </div>
    <div class="f_link">
     <div class="container">
      <ul class="flUl utilMenu">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="f_copy">
     <div class="xans-element- xans-layout xans-layout-footer container">
      <div class="cb">
       <div class="address fl">
        <p class="pb10">
         애니휴먼
        </p>
        <p class="pb30">
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[linkx]</li><li>[ahref]</li>[area1][mkey1]
        </p>
       </div>
       <div class="fr">
        <form action="/Modules/escrow/kcp_pop.jsp" method="post" name="shop_check">
         [area1][mkey1]<li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[pkeyx]</li>
        </form>
       </div>
      </div>
      <p class="copyright">
       Copyright (c) 애니휴먼 All Right Reserved.
      </p>
     </div>
    </div>
   </div>
   <div id="progressPaybar" style="display:none;">
    <div class="layerProgress" id="progressPaybarBackground">
    </div>
    <div id="progressPaybarView">
     <div class="box">
      <p class="graph">
       <span>
       </span>
       <span>
       </span>
      </p>
      <p class="txt">
       본 결제 창은 결제완료 후 자동으로 닫히며,결제 진행 중에 본 결제 창을 닫으시면
       <br/>
       주문이 되지 않으니 결제 완료 될 때 까지 닫지 마시기 바랍니다.
      </p>
     </div>
    </div>
   </div>
  </div>
  <div id="multi_option" style="display:none;">
  </div>
  <form id="frm_image_zoom" style="display:none;">
  </form>
  <div id="etc_common_top_script" style="display:none;">
  </div>
  <div id="etc_product_detail_script" style="display:none;">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0055
  </b>
 </body>
</html>
|<---