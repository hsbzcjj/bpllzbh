--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body>
  <div id="container">
   <noscript>
    <div style="display:inline;">
    </div>
   </noscript>
   <div class="header">
    <header>
     <div style="width:1080px; position:relative; margin:0 auto; height:107px;">
      <a href="e" id="openDeliveryPop" title="새창 팝업">
      </a>
      <div class="h_group">
       <h1>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h1>
      </div>
      <div class="search">
       <button class="btn_search" type="button">
       </button>
       <div id="keywords" style="display:none;">
        <ul class="tab">
         <li class="recent on">
          [ahref]
          
          <div class="flip_wrap">
           <ul class="keywords" id="recentWords" name="recentWords">
           </ul>
          </div>
         </li>
         <li class="recommended">
          [linkx]
          
          <div class="flip_wrap">
           <ul class="keywords" id="recommendedWords">
           </ul>
          </div>
         </li>
        </ul>
        <div class="save_del">
         <div class="autosave">
          <label for="autoCheck">
           <span>
            자동저장 켜기
           </span>
          </label>
         </div>
         <div class="deleteall">
          <a class="btn_del" href="e" onclick="deleteRecentWord('','all');">
           전체삭제
          </a>
         </div>
        </div>
        <ul class="goto_link_lists">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/support/yakultLadySearch.do" title="Fresh 매니저 위치 찾기">
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="snb">
       <ul>
        <li>
         <a href="/member/loginForm.do">
          로그인
         </a>
        </li>
        <li>
         <a href="/member/joinStep01_v2.do">
          회원가입
         </a>
        </li>
        <li>
         <a href="/membership/membershipMain.do">
          멤버십몰
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li class="basket" name="_handyCart" style="display:block">
         <a href=";" id="btn_basket">
          장바구니
          <span class="product_count">
           0
          </span>
         </a>
         <div class="basket_wrap">
          <ul class="tab_active tab_col_type5 basket" name="_handyOrderType">
           <li class="active">
            <a href="e" value="once">
             일반주문
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </li>
       </ul>
      </div>
     </div>
     <div class="gnb_wrap">
      <div class="gnb">
       <div class="all_category">
        <a class="btn_all" href="e" id="btnAllCategory">
         전체 카테고리
        </a>
        <div class="layer_popup_dim">
         <div class="bg">
         </div>
         <div class="pop-layer" id="allCategory">
          <div class="all_category_in">
           <div class="category default_h" id="headerCtgAll">
           </div>
          </div>
         </div>
        </div>
       </div>
       <ul id="gnbAct">
       </ul>
       <ul class="gnbAct2" id="gnbAct2">
       </ul>
      </div>
     </div>
    </header>
   </div>
   <div class="content">
    <nav>
     <div class="locate">
      [linkx]
      
     </div>
     <div class="locate" name="locationLevel_1">
      <a href="e">
       <span class="name">
        기업소개
       </span>
      </a>
      <div class="sub_nav2">
       <div class="locate on">
        [ahref]
        
       </div>
       <div class="locate">
        [ahref]
        
       </div>
       <div class="locate">
        <a href="/sugar/sugar.do">
         <span class="name">
          당 줄이기
         </span>
        </a>
       </div>
      </div>
     </div>
     <div class="locate" name="locationLevel_2">
      [ahref]
      
      <div class="sub_nav2">
       <div class="locate" id="X_01" name="level2_list">
        <a href="e">
         <span class="name">
          한국야쿠르트는
         </span>
        </a>
       </div>
       <div class="locate" id="X_20" name="level2_list">
        <a href="e">
         <span class="name">
          프로바이오틱스
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0001" name="level2_list">
        [linkx]
        
       </div>
       <div class="locate" id="X_40" name="level2_list">
        <a href="e">
         <span class="name">
          Fresh 매니저 소개
         </span>
        </a>
       </div>
       <div class="locate" id="X_02" name="level2_list">
        [ahref]
        
       </div>
       <div class="locate" id="X_03" name="level2_list">
        <a href="e">
         <span class="name">
          사회공헌
         </span>
        </a>
       </div>
       <div class="locate" id="X_04" name="level2_list">
        <a href="e">
         <span class="name">
          인재채용
         </span>
        </a>
       </div>
       <div class="locate" id="X_05" name="level2_list">
        [ahref]
        
       </div>
       <div class="locate" id="X_06" name="level2_list">
        [linkx]
        
       </div>
      </div>
     </div>
     <div class="locate" id="X_001" name="locationLevel_3" style="display:none">
      [ahref]
      
      <div class="sub_nav2">
       <div class="locate" id="L_IN0003" name="level3_list">
        <a href="/info/introduce.do">
         <span class="name">
          회사소개
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0004" name="level3_list">
        [ahref]
        
       </div>
       <div class="locate" id="L_IN0005" name="level3_list">
        [linkx]
        
       </div>
       <div class="locate" id="L_IN0006" name="level3_list">
        [ahref]
        
       </div>
       <div class="locate" id="L_IN0007" name="level3_list">
        <a href="/info/business.do">
         <span class="name">
          사업분야
         </span>
        </a>
       </div>
      </div>
     </div>
     <div class="locate" id="X_200" name="locationLevel_3" style="display:none">
      [ahref]
      
      <div class="sub_nav2">
       <div class="locate" id="L_IN0201" name="level3_list">
        <a href="/info/patentProbiotics.do">
         <span class="name">
          프로바이오틱스란?
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0202" name="level3_list">
        [linkx]
        
       </div>
       <div class="locate" id="L_IN0203" name="level3_list">
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="locate" id="X_400" name="locationLevel_3" style="display:none">
      <li>[linkx]</li>[area1][mkey1]<li>[ahref]</li>[area1][keywordx]
     </div>
     <div class="locate" id="X_002" name="locationLevel_3" style="display:none">
      [ahref]
      
      <div class="sub_nav2">
       <div class="locate" id="L_IN0009" name="level3_list">
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="locate" id="X_003" name="locationLevel_3" style="display:none">
      [linkx]
      
      <div class="sub_nav2">
       <div class="locate" id="L_IN0011" name="level3_list">
        <a href="/info/society.do">
         <span class="name">
          사랑의 손길펴기 운동
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0012" name="level3_list">
        <a href="/info/science.do">
         <span class="name">
          발명품 경진대회
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0013" name="level3_list">
        [linkx]
        
       </div>
       <div class="locate" id="L_IN0014" name="level3_list">
        [linkx]
        
       </div>
       <div class="locate" id="L_IN0015" name="level3_list">
        [linkx]
        
       </div>
      </div>
     </div>
     <div class="locate" id="X_004" name="locationLevel_3" style="display:none">
      <a href="e">
       <span class="name">
        <em name="level3_name">
        </em>
       </span>
      </a>
      <div class="sub_nav2">
       <div class="locate" id="L_IN0016" name="level3_list">
        [linkx]
        
       </div>
       <div class="locate" id="L_IN0017" name="level3_list">
        <a href="/info/hrsystem.do">
         <span class="name">
          인사제도
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0018" name="level3_list">
        <a href="/info/culture.do">
         <span class="name">
          기업문화
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0019" name="level3_list">
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="locate" id="X_005" name="locationLevel_3" style="display:none">
      [area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
     </div>
     <div class="locate" id="X_006" name="locationLevel_3" style="display:none">
      [ahref]
      
      <div class="sub_nav2">
       <div class="locate" id="L_IN0026" name="level3_list">
        [linkx]
        
       </div>
       <div class="locate" id="L_IN0027" name="level3_list">
        [ahref]
        
       </div>
       <div class="locate" id="L_IN0028" name="level3_list">
        <a href="/info/factoryMap.do">
         <span class="name">
          공장
         </span>
        </a>
       </div>
       <div class="locate" id="L_IN0029" name="level3_list">
        [ahref]
        
       </div>
      </div>
     </div>
    </nav>
    <aside class="lnb_wrap">
     <h3>
      [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </h3>
     <div class="lnb_tit industrial">
      <a href="e">
       기업소개
      </a>
     </div>
     <ul class="lnb_list" id="lnbActive">
      <li class="flip">
       <a href="e">
        한국야쿠르트는
       </a>
       <ul class="sub_list">
        <li id="IN0003">
         <a href="/info/introduce.do">
          회사소개
         </a>
        </li>
        <li id="IN0004">
         [ahref]
         
        </li>
        <li id="IN0005">
         [ahref]
         
        </li>
        <li id="IN0006">
         <a href="/info/ceo.do">
          CEO
         </a>
        </li>
        <li id="IN0007">
         사업분야[area1][keywordx]<li>[area1][mkey1]</li><li>[ahref]</li>
        </li>
       </ul>
      </li>
      <li class="flip">
       <a href="e">
        프로바이오틱스
       </a>
       <ul class="sub_list">
        <li id="IN0201">
         [ahref]
         
        </li>
        <li id="IN0202">
         <a href="/info/patent.do">
          특허등록현황
         </a>
        </li>
        <li id="IN0203">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li id="IN0001">
       [linkx]
       
      </li>
      <li class="flip">
       <a href="e">
        Fresh 매니저  소개
       </a>
       <ul class="sub_list">
        <li id="IN0401">
         [ahref]
         
        </li>
        <li id="IN0402">
         [ahref]
         
        </li>
        <li id="IN0403">
         [linkx]
          [pkeyx][linkx][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][area1][mkey1][linkx][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][ahref][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx]
         
        </li>
       </ul>
      </li>
      <li class="flip">
       [linkx]
       
       <ul class="sub_list">
        <li id="IN0009">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="flip">
       [linkx]
       
       <ul class="sub_list">
        <li id="IN0011">
         [linkx]
         
        </li>
        <li id="IN0012">
         <a href="/info/science.do">
          발명품 경진대회
         </a>
        </li>
        <li id="IN0013">
         <a href="/info/share.do">
          사랑의 김장 나누기
         </a>
        </li>
        <li id="IN0014">
         [linkx]
         
        </li>
        <li id="IN0015">
         <a href="/info/seniorHelp.do">
          홀몸노인 돌봄활동
         </a>
        </li>
       </ul>
      </li>
      <li class="flip">
       <a href="e">
        인재채용
       </a>
       <ul class="sub_list">
        <li id="IN0017">
         [ahref]
         
        </li>
        <li id="IN0018">
         <a href="/info/culture.do">
          기업문화
         </a>
        </li>
       </ul>
      </li>
      <li class="flip">
       <a href="e">
        인재개발원[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][mkey1]</li>[area1][mkey1][linkx]
       </a>
       <ul class="sub_list">
        <li id="IN0020">
         <a href="/info/education.do">
          인재개발원 소개
         </a>
        </li>
        <li id="IN0021">
         <a href="/info/invitation.do">
          초대의 글[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref]
         </a>
        </li>
        <li id="IN0022">
         <a href="/info/facility.do">
          시설안내
         </a>
        </li>
        <li id="IN0023">
         [linkx]
         
        </li>
        <li id="IN0024">
         <a href="/info/reservation.do">
          문의 및 예약 안내
         </a>
        </li>
        <li id="IN0025">
         <a href="/info/map.do">
          오시는 길
         </a>
        </li>
       </ul>
      </li>
      <li class="flip">
       <a href="e">
        위치안내
       </a>
       <ul class="sub_list">
        <li id="IN0026">
         [ahref]
         
        </li>
        <li id="IN0027">
         [ahref]
         
        </li>
        <li id="IN0028">
         <a href="/info/factoryMap.do">
          공장
         </a>
        </li>
        <li id="IN0029">
         <a href="/info/educationMap.do">
          인재개발원
         </a>
        </li>
       </ul>
      </li>
     </ul>
    </aside>
    <article class="inner_wrap">
     <h2 class="h2_type2">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h2>
     <section class="industrial">
      <div id="container">
       <div class="customer01">
        <div class="guideMenu">
         <ul>
          <li>
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][ahref]<li>[area1][keywordx]</li>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/info/factoryMap.do">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li class="tab_le_br">
          </li>
         </ul>
        </div>
        <div class="cb fl">
         <ul>
          <li>
          </li>
          <li>
          </li>
         </ul>
        </div>
        <div class="cb">
        </div>
        <div class="guide_box1">
         <ul>
          <li>
           <dl>
            <dt>
            </dt>
            <dd class="mt30">
             <h1>
              <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
             </h1>
            </dd>
            <dd>
             <div class="guide_Table">
              <table summary="주소,충남 논산시 가야곡면 왕암리 282,전화번호, 041) 741-4567,팩스,041) 741-9238">
               <caption>
                논산공장
               </caption>
               <tbody>
                <tr>
                 <th>
                 </th>
                 <td>
                 </td>
                </tr>
                <tr>
                 <th>
                 </th>
                 <td>
                 </td>
                </tr>
                <tr>
                 <th>
                 </th>
                 <td>
                 </td>
                </tr>
               </tbody>
              </table>
             </div>
            </dd>
           </dl>
          </li>
          <li>
          </li>
         </ul>
        </div>
        <div class="cb">
        </div>
        <div class="guide_box1">
         <ul>
          <li>
           <dl>
            <dt>
            </dt>
            <dd class="mt30">
             <h1>
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h1>
            </dd>
            <dd>
             <div class="guide_Table">
              <table summary="주소,충남 천안시 차암동 54-2,전화번호,041) 621-0050,팩스,041) 564-4189">
               <caption>
                천안공장
               </caption>
               <tbody>
                <tr>
                 <th>
                 </th>
                 <td>
                 </td>
                </tr>
                <tr>
                 <th>
                 </th>
                 <td>
                 </td>
                </tr>
                <tr>
                 <th>
                 </th>
                 <td>
                 </td>
                </tr>
               </tbody>
              </table>
             </div>
            </dd>
           </dl>
          </li>
          <li>
          </li>
         </ul>
        </div>
        <div class="cb fl">
         <ul>
          <li>
          </li>
         </ul>
        </div>
       </div>
      </div>
     </section>
    </article>
   </div>
   <div class="footer">
    <footer>
     <div id="allCateWrap">
      <div class="inner_wrap">
       <div class="area">
        <a class="depth1" href="/exhibition/brand.do">
         브랜드
        </a>
        [ahref]
        
        <a class="depth1" href="/member/joinStep01.do">
         회원가입
        </a>
       </div>
       <div class="area">
        <a class="depth1" href="/exhibition/event.do">
         이벤트
        </a>
        <ul class="depth2">
         [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][pkeyx][ahref][linkx][ahref][ahref][ahref][area1][mkey1][linkx][pkeyx][ahref][linkx][area1][mkey1][linkx][linkx][area1][keywordx][area1][keywordx][linkx]
        </ul>
       </div>
       <div class="area">
        <a class="depth1" href="/support/customerCenter.do">
         고객센터
        </a>
        <ul class="depth2">
         <li>
          <a href="/support/faqList.do">
           자주찾는 질문
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/mypage/intCounIns.do">
           이메일 상담
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/support/newsNoticeList.do">
           뉴스 &amp; 공지사항
          </a>
         </li>
        </ul>
       </div>
       <div class="area">
        [area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][pkeyx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][pkeyx][area1][mkey1][pkeyx][pkeyx][linkx][pkeyx][pkeyx][area1][mkey1][pkeyx]
       </div>
       <div class="area">
        [ahref]
        
        <ul class="depth2">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/exhibition/lifeYRecipe.do">
           hyFresh 레시피
          </a>
         </li>
         <li>
          <a href="/exhibition/lifeColumn.do">
           전문가 컬럼
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/probio/probiotics.do">
           프로바이오틱스
          </a>
         </li>
         <li>
          당줄이기 캠페인[area1][keywordx][area1][mkey1]<li>[area1][keywordx]</li>
         </li>
        </ul>
       </div>
       <div class="btn_close">
        [ahref]
        
       </div>
      </div>
     </div>
     <section class="footer-menu">
      <div class="inner_wrap">
       <ul class="services">
        <li>
         <a href="/info/introduce.do">
          회사소개
         </a>
        </li>
        <li>
         <a href="/resources/ko/pc/html/popup_ccm.html" onclick="window.open(this.href, 'CCM', 'width=780, height=750, scrollbars=1'); return false" target="_blank">
          CCM
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [area1][keywordx][pkeyx][area1][mkey1]
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
       <div class="footer_func_link">
        <div class="family_site">
         <a class="btn_fam" href="e">
          Family Site
         </a>
         <div id="famSiteWrap">
          <ul>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="r" target="_blank" title="새창">
             비락
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="all_category">
         <a class="btn_cate" href="e">
          메뉴 전체보기
         </a>
        </div>
       </div>
      </div>
     </section>
     <div class="inner_wrap mgT30">
      <div class="logo">
       <a href="/">
       </a>
      </div>
      <address>
       <div class="address">
        <ul class="indent95">
         <li>
          <span>
           상호명
          </span>
          (주)한국야쿠르트
         </li>
         <li>
          <span>
           대표이사
          </span>
          김병진
         </li>
         <li>
          <span>
           주소
          </span>
          서울특별시 서초구 강남대로 577
         </li>
         <li>
          <span>
           고객센터
          </span>
          1577-3651
         </li>
         <li>
          <span>
           이메일
          </span>
          counsel@yakult.co.kr
         </li>
        </ul>
        <ul class="indent110">
         <li>
          <span>
           사업자 등록번호
          </span>
          114-81-70065
         </li>
         <li>
          <span>
           통신판매업신고번호
          </span>
          제2004-서울서초-04175
          [linkx]
           <li>[ahref]</li>[linkx][pkeyx][linkx]
          
         </li>
         <li>
          <span>
           방문판매업신고번호
          </span>
          제2010-서울서초-0140호
         </li>
         <li>
          <span>
           부가통신사업신고
          </span>
          02201
         </li>
         <li class="indent185">
          <span>
           개인정보관리 및 청소년보호 책임자
          </span>
          최동일
         </li>
        </ul>
       </div>
       <div class="consumer">
        <p class="tit">
         소비자피해보상보험
        </p>
        <p class="cnt floatL">
         고객님은 안전거래를 위해 현금 등으로 결제 시 저희 쇼핑몰에서 가입한 구매안전 서비스를 이용하실 수 있습니다.
         <br/>
         (보상대상 : 미배송, 반품/환불거부, 쇼핑몰 부도)
         <a class="btn_link" href="e" onclick="usafe('1148170065'); return false;" title="새창열림">
          가입사실 확인
         </a>
        </p>
       </div>
      </address>
      <div class="copyrights">
       <div class="cr_wrap">
        <p>
         Copyright (c) 2017 KOREA YAKULT CO.,LTD
        </p>
        <p class="mgT5">
         All Rights Reserved.
        </p>
       </div>
       <ul class="am_wrap">
        <li>
         <p>
          <li>[ahref]</li>[pkeyx]<li>[pkeyx]</li>
         </p>
        </li>
        <li>
         <p>
          소비자중심경영
          <br/>
          (CCM) 인증획득
         </p>
        </li>
       </ul>
       <ul class="sns_wrap">
        [ahref]
        
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <li>[area1][keywordx]</li>[ahref][linkx][area1][keywordx]<li>[area1][mkey1]</li>
        </li>
       </ul>
      </div>
     </div>
    </footer>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0400
  </b>
 </body>
</html>
|<---