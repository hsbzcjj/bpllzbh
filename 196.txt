--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="#4f4f4f" name="theme-color">
   <meta content="#4f4f4f" name="msapplication-navbutton-color"/>
   <meta content="black-translucent" name="apple-mobile-web-app-status-bar-style"/>
   <title>
    [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="릴리펏 음식-샐러드" name="application-name">
    <meta content="릴리펏 음식-샐러드" name="msapplication-tooltip">
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" id="meta_og_title" property="og:title"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="https://cdn.imweb.me/upload/S201905175cde1033706a5/c3ec2f8a1f104.png" id="meta_og_image" property="og:image"/>
     <meta content="1200" property="og:image:width"/>
     <meta content="627" property="og:image:height"/>
     <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
      [area1][keywordx]<li>[pkeyx]</li><li>[area1][keywordx]</li>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="page_ready doz_sys _body_menu_m20190723c13f748304445 mobile-nav-on mobile_nav_dep2 page new_header_site" id="doz_body" style=";">
  <div class="notification-canvas-container" id="site_alarm_slidemenu_container">
   <div class="notification-canvas-backdrop" id="site_alarm_slidemenu_backdrop" style="display: none">
   </div>
   <div class="notification-canvas alarm-pane alarm_slide" id="site_alarm_slidemenu" style="">
    <div class="tse-scrollable _scroll_wrap" id="site_alarm_menu_tap_wrap">
     <div class="tse-content tab-content _is_tse_content" style="padding-top: 60px;">
      <div class="site-alarm-head _alarm_header">
       <header id="site_alarm_title">
        알림
       </header>
       [linkx]
       
      </div>
      <div class="site-alarm-head _setting_header" style="display: none">
       <header id="site_alarm_title">
        알림 설정
       </header>
       [linkx]
       
      </div>
      <div class="site_alarm_list_wrap" id="site_alarm_list_wrap">
       <div class="notify-body" id="site_alarm_tab">
       </div>
       <div class="notify-body" id="site_alarm_more_btn" style="display: none;">
        [linkx]
        
       </div>
      </div>
      <div class="site_alarm_setting_wrap" id="site_alarm_setting_wrap" style="display: none;">
       <div class="offcanvas-block alarm-setting">
        <div class="_scroll_wrap" id="site_alarm_menu_tap_wrap">
         <div class="tab-content">
          <div class="tab-pane active">
           <div class="notify-body">
            [linkx]
            
            [ahref]
            
            <a class="tile" href=";" onclick="ALARM_MENU.changeAlarmSetting($(this),'','notice')">
             <div class="tile-content">
              <div class="tile-text">
               공지사항
               <div class="text-sm text-gray-bright">
                사이트에서 보내는 중요한 공지를 실시간으로 알려줍니다.
               </div>
               <div class="check">
                <div class="checkbox checkbox-styled">
                 <label>
                  <span>
                  </span>
                 </label>
                </div>
               </div>
              </div>
             </div>
            </a>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="site-alarm-body">
    </div>
   </div>
  </div>
  <div class="pc_slide_menu_container" id="pc_slide_menu_wrap" style="width: 0; visibility: hidden; display: none">
   <div class="pc_slide_menu slide_menu _slide_menu" id="pc_slide_menu">
    <button class="pc-navbar-toggle" onclick="PC_SLIDE_MENU.slideNavToggle();" type="button">
     <i class="btm bt-times">
     </i>
    </button>
    <div class="pc_slide_menu_logo">
     [linkx]
     
    </div>
    <ul class="nav navbar-nav">
     <li>[pkeyx]</li>[linkx][ahref][linkx][ahref]
    </ul>
   </div>
  </div>
  <div class="mobile_slide_menu_container" id="mobile_slide_menu_wrap">
   <div class="mobile_slide_menu slide_menu _slide_menu" id="mobile_slide_menu">
    <ul class="nav navbar-nav navbar-right">
     <div class="viewport-nav mobile _menu_wrap" style="position:relative">
     </div>
    </ul>
   </div>
   <button class="navbar-toggle close slide-close" onclick="MOBILE_SLIDE_MENU.slideNavToggle();" type="button">
    <i class="btm bt-times">
    </i>
   </button>
  </div>
  <ul class="dropdown-menu animation-dock member_profile" id="member_profile">
   <li class="dropdown-profile text-center">
    [linkx]
    
    <span class="profile-info">
     <div onclick="SITE_MEMBER.editProfile()">
     </div>
     <div class="sm-padding no-padding-bottom">
     </div>
    </span>
   </li>
   <li class="profile-footer btn-group-justified">
    [ahref]
    
    <a class="btn btn-flat right" href="/logout.cm?back_url=L2Zvb2Qtc2FsYWQ%3D">
     로그아웃
    </a>
   </li>
  </ul>
  <header id="doz_header_wrap">
   <div data-newheader="Y" id="doz_header">
    <div class="new_org_header _new_org_header">
     <div class="first_scroll_fixed" id="inline_header_normal" style="min-height: 30px;">
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s20190613c5b49768115e3">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:#fff;  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s20190613c5b49768115e3">
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:575px;">
         </div>
         <div class="inline-col-group inline-col-group-center" data-col-group="center" data-type="col-group">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2019061389d329bf349f2">
            <div class="_widget_data" data-widget-type="inline_logo">
             <div class="widget inline_widget logo" id="logo_w2019061389d329bf349f2">
              <div class="img_box _img_box" style="position: relative;">
               [linkx]
               
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:573px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-row" data-type="row">
            <div class="inline-col" data-type="grid">
             <div class="inline-widget" data-type="widget" id="w20190615695a23edd086a">
              <div class="_widget_data" data-widget-type="inline_padding">
               <li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]<li>[area1][keywordx]</li><li>[pkeyx]</li>
              </div>
             </div>
            </div>
           </div>
           <div class="inline-row" data-type="row">
            <div class="inline-col" data-type="grid">
             <div class="inline-widget" data-type="widget" id="w201906152ec248648d458">
              <div class="_widget_data" data-widget-type="inline_button">
               <div class="widget inline_widget login_btn button txt_l text-xx-small">
                <div>
                 <div class="inline-blocked">
                  [ahref]
                  
                 </div>
                 <div class="inline-blocked">
                  <h1>
                   [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                  </h1>
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s20190613e28fb7d147503">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:#fff;  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s20190613e28fb7d147503">
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:124px;">
         </div>
         <div class="inline-col-group inline-col-group-center" data-col-group="center" data-type="col-group">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w201906136730b92a1c850">
            <div class="_widget_data" data-widget-type="inline_menu">
             <ul class="nav navbar-nav _inline_menu_container sub_mega_drop" style="visibility: hidden">
              <div class="viewport-nav desktop _main_menu">
               <li class="dropdown _show_m201905175cde10338934a" data-code="m201905175cde10338934a" id="dropdown_m201905175cde10338934a" style="">
                [linkx]
                
               </li>
               <li class="dropdown _show_m2019060842c078a8a0455" data-code="m2019060842c078a8a0455" id="dropdown_m2019060842c078a8a0455" style="">
                [ahref]
                
               </li>
               <li class="dropdown _show_m201905215ce39ad585ae5" data-code="m201905215ce39ad585ae5" id="dropdown_m201905215ce39ad585ae5" style="">
                [ahref]
                
               </li>
               <li class="dropdown _show_m20190723ad5a633dae578" data-code="m20190723ad5a633dae578" id="dropdown_m20190723ad5a633dae578" style="">
                [linkx]
                
               </li>
               <li class="dropdown _show_m201905275ceb799cc4720" data-code="m201905275ceb799cc4720" id="dropdown_m201905275ceb799cc4720" style="">
                [ahref]
                
               </li>
               <li class="dropdown _show_m201905275ceb7d9f4c60d" data-code="m201905275ceb7d9f4c60d" id="dropdown_m201905275ceb7d9f4c60d" style="">
                [ahref]
                
               </li>
               <li class="dropdown _show_m201905275ceb87bf92d25" data-code="m201905275ceb87bf92d25" id="dropdown_m201905275ceb87bf92d25" style="">
                [ahref]
                
               </li>
               <li class="dropdown _show_m20190618115d409f1b72b" data-code="m20190618115d409f1b72b" id="dropdown_m20190618115d409f1b72b" style="">
                [ahref]
                
               </li>
              </div>
             </ul>
             <div class="text-center _mega_dropdown_container_w201906136730b92a1c850" data-widget-type="inline_menu" id="dropdown_w201906136730b92a1c850" style="display: none">
              <div class="clearfix mega_dropdown_wrap _mega_dropdown_wrap">
               <div class="tse-scrollable _tse_scrollable">
                <div class="tse-content">
                 <div class="" style="max-width: 1920px;">
                  <div class="mega_dropdown clearfix _mega_dropdown_sync" style="visibility: hidden">
                   <div class="title_menu _item" data-code="m201905175cde10338934a" style="">
                    [ahref]
                    
                   </div>
                   <div class="title_menu _item" data-code="m2019060842c078a8a0455" style="">
                    [linkx]
                    
                    <ul class="sub_menu">
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                     <li class="" style="">
                      [linkx]
                      
                     </li>
                    </ul>
                   </div>
                   <div class="title_menu _item" data-code="m201905215ce39ad585ae5" style="">
                    [linkx]
                    
                   </div>
                   <div class="title_menu _item" data-code="m20190723ad5a633dae578" style="">
                    [linkx]
                    
                    <ul class="sub_menu">
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                     <li class="" style="">
                      [linkx]
                      
                     </li>
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                     <li class="" style="">
                      [linkx]
                      
                     </li>
                     <li class="" style="">
                      [linkx]
                      
                     </li>
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                     <li class="" style="">
                      [ahref]
                       [ahref][area1][keywordx][pkeyx][ahref][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][ahref][ahref][ahref][ahref][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][ahref][area1][keywordx]
                      
                     </li>
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                    </ul>
                   </div>
                   <div class="title_menu _item" data-code="m201905275ceb799cc4720" style="">
                    [ahref]
                    
                    <ul class="sub_menu">
                     <li class="" style="">
                      [linkx]
                      
                     </li>
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                    </ul>
                   </div>
                   <div class="title_menu _item" data-code="m201905275ceb7d9f4c60d" style="">
                    [linkx]
                    
                   </div>
                   <div class="title_menu _item" data-code="m201905275ceb87bf92d25" style="">
                    [linkx]
                    
                   </div>
                   <div class="title_menu _item" data-code="m20190618115d409f1b72b" style="">
                    [ahref]
                    
                    <ul class="sub_menu">
                     <li class="" style="">
                      [ahref]
                      
                     </li>
                     <li class="" style="">
                      <a class="_fade_link _txt_m20190618a0e4e326cc8cf" data-url="event" href="/event" tabindex="-1">
                       이벤트[area1][keywordx][area1][keywordx][ahref][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1]
                      </a>
                     </li>
                     <li class="" style="">
                      [linkx]
                       [pkeyx][linkx][area1][mkey1][area1][mkey1][ahref][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][linkx]
                      
                     </li>
                    </ul>
                   </div>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:124px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w20190613c75cdcfb73f93">
            <div class="_widget_data" data-widget-type="inline_login_btn">
             <div class="widget inline_widget login_btn button button_text txt_l text-xx-small">
              <div>
               <div class="inline-blocked login_btn_item">
                [ahref][pkeyx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx][ahref][area1][mkey1][linkx][area1][keywordx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][pkeyx][pkeyx][ahref][area1][mkey1][linkx][area1][keywordx][ahref][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </div>
               <div class="inline-blocked login_btn_item">
                [ahref]
                
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="first_scroll_fixed" id="inline_header_mobile" style="min-height: 30px;">
      <div class="inline-section-wrap fixed_transform" data-type="section-wrap" id="s20190613001180494604b">
       <div class="section_bg _section_bg fixed_transform _interactive_bg">
       </div>
       <div class="section_bg_color _section_bg_color fixed_transform" style="background-color:#ffffff;  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
       </div>
       <div class="inline-inside _inline-inside" data-type="inside">
        <div class="inline-section" data-type="section" section-code="s20190613001180494604b">
         <div class="inline-col-group inline-col-group-left" data-col-group="left" data-type="col-group" style="width:74px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2019061358284bf1b99e7">
            <div class="_widget_data" data-widget-type="inline_menu_btn">
             <div class="widget inline_widget icon_type_menu st00" id="w2019061358284bf1b99e7">
              [linkx]
              
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-center" data-col-group="center" data-type="col-group">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w2019061330e2020d60174">
            <div class="_widget_data" data-widget-type="inline_logo">
             <div class="widget inline_widget logo text_inline" id="logo_w2019061330e2020d60174">
              <div class="img_box _img_box" style="position: relative;">
               [linkx]
               
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="inline-col-group inline-col-group-right" data-col-group="right" data-type="col-group" style="width:74px;">
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w20190613454da145bc333">
            <div class="_widget_data" data-widget-type="inline_login_btn">
             <div class="widget inline_widget login_btn button txt_l text-xx-small">
              <div>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="inline-col" data-type="grid">
           <div class="inline-widget" data-type="widget" id="w201906132ba33ee29c36d">
            <div class="_widget_data" data-widget-type="inline_search_btn">
             <div class="widget inline_widget search_btn" id="w201906132ba33ee29c36d">
              <div class="search_type fixed_transform search_btn_type01">
               <div class="inline-blocked holder">
                <form action="/search" class="icon_on" id="inline_s_form_w201906132ba33ee29c36d" method="get">
                 [linkx]
                 
                </form>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="inline-section-wrap" data-type="carousel_menu" id="mobile_carousel_menu">
       <div class="inline-inside _inline-inside">
        <div class="mobile_carousel_nav fixed_transform _mobile_nav" id="mobile_carousel_nav">
         <div class="mobile_nav_depth depth_0 depth_first st06 _mobile_navigation_menu" id="mobile_carousel_menu_0">
          <div class="nav-item _item" data-url="index">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="AboutUs">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="play-space">
           [linkx]
           
          </div>
          <div class="nav-item _item active" data-url="fnb-1">
           [linkx]
           
          </div>
          <div class="nav-item _item" data-url="Franchise">
           [linkx]
           
          </div>
          <div class="nav-item _item" data-url="patent">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="franchise-in">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="Service-center">
           [ahref]
           
          </div>
         </div>
         <div class="mobile_nav_depth depth_1 depth_first st06 _mobile_navigation_menu" id="mobile_carousel_menu_1">
          <div class="nav-item _item" data-url="fnb">
           [linkx]
           
          </div>
          <div class="nav-item _item" data-url="food-pizza">
           [linkx]
           
          </div>
          <div class="nav-item _item" data-url="food-pasta">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="food-rice">
           <a class="_fade_link" href="/food-rice" style="">
            <span class="plain_name" data-hover="">
             라이스
            </span>
           </a>
          </div>
          <div class="nav-item _item" data-url="food-snack">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="food-steaknmit">
           [linkx]
           
          </div>
          <div class="nav-item _item active" data-url="food-salad">
           [ahref]
           
          </div>
          <div class="nav-item _item" data-url="drink">
           [ahref]
           
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </header>
  <div class="section_wrap pc_section section_first _section_first mobile_section_first side_basic" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201907237d01316e61ba0" style="padding-top:15px;padding-bottom:15px; ; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="background-image:url('https://cdn.imweb.me/thumbnail/20190723/c30043712039b.jpg'); background-position:50% 50%;  background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="background-color:rgba(0, 0, 0, 0.55); -ms-filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#8c000000,endColorstr=#8c000000);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#8c000000,endColorstr=#8c000000);	zoom: 1; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201907236b2e45fe4ca98">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="30" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w201907236b2e45fe4ca98" style="width:100%; min-height:1px; height:30px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20190723962f489fcd318">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="-80" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w20190723962f489fcd318" style="width:100%; min-height:1px; height:-80px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20190723f79b701d9f347">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="0" data-widget-anim-duration="0.7" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w20190723f79b701d9f347">
          <div class="text-table">
           <div>
            <p style="text-align: center;">
             <strong>
              <span style="color: rgb(255, 255, 255); font-size: 30px;">
               음식 / 음료
              </span>
             </strong>
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2019072399e586418e326">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="0" data-widget-anim-duration="0.7" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w2019072399e586418e326">
          <div class="text-table">
           <div>
            <p style="text-align: center;">
             <span style="color: rgb(255, 255, 255); font-size: 12px;">
              # 메뉴는 매장별로 상이할 수 있습니다.
             </span>
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20190723c655962ab6681">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="-85" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w20190723c655962ab6681" style="width:100%; min-height:1px; height:-85px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20190723ad2b37e25f0bd">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="30" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w20190723ad2b37e25f0bd" style="width:100%; min-height:1px; height:30px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_basic" doz_aside="N" doz_category="default" doz_change_mobile="Y" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s2019072324ef4c06f1ffd" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg fixed_bg" style=" background-position:50% 50%;  background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="background-color:rgba(245, 245, 245, 0.9); -ms-filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#e5f5f5f5,endColorstr=#e5f5f5f5);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#e5f5f5f5,endColorstr=#e5f5f5f5);	zoom: 1; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row hidden-xs" doz_flexible="N" doz_grid="12" doz_type="row" hidden_xs="Y">
      <div class="col-dz col-dz-12" doz_flexible="N" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20190723b7c19480e79fd">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="메뉴/카테고리" data-widget-parent-is-mobile="N" data-widget-type="sub_menu">
         <div class="widget">
          <div class="nav sub-menu sub_menu_hide h-menu-type2 menu-horizontal row-cnt-3 row-cnt-mobile-3">
           <ul class="">
            <li class="depth-01" style="">
             <a class="_fade_link" data-has_child="N" data-is_folder_menu="N" data-url="fnb" href="/fnb">
              <span class="plain_name" data-hover="">
               음식/음료 소개
              </span>
             </a>
            </li>
            <li class="depth-01" style="">
             [ahref]
             
            </li>
            <li class="depth-01" style="">
             [ahref]
             
            </li>
            <li class="depth-01" style="">
             [linkx]
             
            </li>
            <li class="depth-01" style="">
             <a class="_fade_link" data-has_child="N" data-is_folder_menu="N" data-url="food-snack" href="/food-snack">
              <span class="plain_name" data-hover="">
               스낵
              </span>
             </a>
            </li>
            <li class="depth-01" style="">
             [linkx]
             
            </li>
            <li class="depth-01 active active-real" style="">
             [ahref]
             
            </li>
            <li class="depth-01" style="">
             [linkx][area1][mkey1]<li>[pkeyx]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[pkeyx]</li>[area1][mkey1][area1][mkey1]
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_basic" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="N" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s20190723bca5ea1e8a07d" style="padding-top:10px;padding-bottom:10px; ; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201907231a89ab8671bb1">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="0" data-widget-anim-duration="0.7" data-widget-name="갤러리" data-widget-parent-is-mobile="N" data-widget-type="gallery2">
         <div class="widget _gallery_wrap">
          <div class="img_rendering grid_03 type_grid container_border gallery2" id="container_w201907231a89ab8671bb1" style="padding-bottom: 0">
           <div class="_item item_gallary" data-org="S201905175cde1033706a5/cb8bed105285f.jpg" style="display: ; position: relative;">
            <div id="caption_2369884" style="display:none">
             <h4>
              채끝등심과 버섯 샐러드
             </h4>
             <p>
             </p>
            </div>
            <div class="item_container _item_container">
             <div class="img_wrap _img_wrap _lightbox_item cursor_pointer" data-bg="url(https://cdn.imweb.me/thumbnail/20190723/e0c1c78ded8b4.jpg)" data-src="https://cdn.imweb.me/thumbnail/20190723/7d6d317928a30.jpg" data-sub-html="#caption_2369884" id="gal_item_2369884" style="background-image: url(https://cdn.imweb.me/thumbnail/20190723/e0c1c78ded8b4.jpg);; ">
             </div>
             <div class="text_wrap _text_wrap hide_text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190723/7d6d317928a30.jpg" data-sub-html="#caption_2369884" id="gal_item_" style="display: 1">
              <p class="title">
               채끝등심과 버섯 샐러드
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </div>
           </div>
           <div class="_item item_gallary" data-org="S201905175cde1033706a5/12c1532ce788f.jpg" style="display: ; position: relative;">
            <div id="caption_2369883" style="display:none">
             <h4>
              치킨 콥 샐러드
             </h4>
             <p>
             </p>
            </div>
            <div class="item_container _item_container">
             <div class="img_wrap _img_wrap _lightbox_item cursor_pointer" data-bg="url(https://cdn.imweb.me/thumbnail/20190723/a369629a9f89d.jpg)" data-src="https://cdn.imweb.me/thumbnail/20190723/b3a85f6451e10.jpg" data-sub-html="#caption_2369883" id="gal_item_2369883" style="background-image: url(https://cdn.imweb.me/thumbnail/20190723/a369629a9f89d.jpg);; ">
             </div>
             <div class="text_wrap _text_wrap hide_text_wrap" data-src="https://cdn.imweb.me/thumbnail/20190723/b3a85f6451e10.jpg" data-sub-html="#caption_2369883" id="gal_item_" style="display: 1">
              <p class="title">
               치킨 콥 샐러드
              </p>
             </div>
             <div class="slide_overlay">
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2019072325cb7588c2bd9">
        <div class="_widget_data" data-widget-anim="none" data-widget-anim-delay="0" data-widget-anim-duration="0.7" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="30" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w2019072325cb7588c2bd9" style="width:100%; min-height:1px; height:30px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_basic" doz_aside="N" doz_category="default" doz_change_mobile="N" doz_extend="N" doz_footer_repeat="Y" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s20190619fa80d48072c8b" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="background-color:rgba(228, 228, 228, 0.2); -ms-filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#33e4e4e4,endColorstr=#33e4e4e4);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#33e4e4e4,endColorstr=#33e4e4e4);	zoom: 1; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w201906198d08dd9958c0f">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="코드" data-widget-parent-is-mobile="N" data-widget-type="code">
         <div class="main-footer-menu">
          <ul>
           <li>
            <li>[ahref]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>
           </li>
           <li class="visible-md visible-lg">
            [linkx]
            
            <span class="bar">
            </span>
           </li>
           <li class="visible-md visible-lg">
            [linkx]
            
            <span class="bar">
            </span>
           </li>
           <li class="visible-md visible-lg">
            [ahref]
            
            <span class="bar">
            </span>
           </li>
           <li class="visible-md visible-lg">
            [ahref]
            
            <span class="bar">
            </span>
           </li>
           <li class="visible-md visible-lg">
            [ahref]
            
            <span class="bar">
            </span>
           </li>
           <li class="visible-md visible-lg">
            <li>[area1][mkey1]</li>[area1][mkey1]<li>[area1][mkey1]</li><li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </li>
           <li class="visible-md visible-lg" style="float:right">
            <span class="bar">
            </span>
            <a href="/?mode=policy">
             이용약관
            </a>
           </li>
           <li class="visible-md visible-lg" style="float:right">
            [ahref]
            
           </li>
           <li class="hidden-md hidden-lg">
            <span class="bar">
            </span>
            [ahref]
            
           </li>
           <li class="hidden-md hidden-lg">
            [pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][area1][mkey1][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][linkx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <div class="section_wrap pc_section side_basic grid_gutter_15 grid_v_gutter_5" doz_aside="N" doz_category="default" doz_change_mobile="Y" doz_extend="N" doz_footer_repeat="Y" doz_header_repeat="N" doz_mobile_hide="N" doz_mobile_section="N" doz_side_margin="0" doz_side_width="230" doz_type="section" id="s201905275cebb294a6d1b" style="; ; ">
   <div class="section_bg _section_bg _interactive_bg" style="   background-size:cover; position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <div class="section_bg_color _section_bg_color" style="  position: absolute;left: 0;top: 0;right: 0; bottom: 0;">
   </div>
   <main>
    <div class="inside" doz_type="inside">
     <div class="doz_row" doz_flexible="N" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_flexible="N" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w2019061070cbaed90cd5d">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="13" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w2019061070cbaed90cd5d" style="width:100%; min-height:1px; height:13px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_flexible="Y" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-2" doz_flexible="Y" doz_grid="2" doz_order="1" doz_type="grid">
       <div class="doz_row" doz_flexible="N" doz_grid="2" doz_order="1" doz_type="row">
        <div class="col-dz col-dz-2" doz_flexible="N" doz_grid="2" doz_type="grid">
         <div doz_type="widget" id="w2019060852b3ca05dad9c">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
           <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w2019060852b3ca05dad9c">
            <div class="text-table">
             <div>
              [area1][keywordx][ahref]<li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="2" doz_order="2" doz_type="row">
        <div class="col-dz col-dz-2" doz_flexible="N" doz_grid="2" doz_type="grid">
         <div doz_type="widget" id="w201906197b2f39c6ecdd8">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
           <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201906197b2f39c6ecdd8">
            <div class="text-table">
             <div>
              <p>
               릴리펏은 과학적인 놀이시설과 최고급 이탈리안레스토랑이 결합된 프리미엄 키즈카페입니다.
              </p>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="col-dz col-dz-4" doz_flexible="Y" doz_grid="4" doz_order="2" doz_type="grid">
       <div class="doz_row" doz_flexible="N" doz_grid="4" doz_order="1" doz_type="row">
        <div class="col-dz col-dz-4" doz_flexible="N" doz_grid="4" doz_type="grid">
         <div doz_type="widget" id="w20190619aa41f086aee7d">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
           <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w20190619aa41f086aee7d">
            <div class="text-table">
             <div>
              <p>
               <strong>
                <span style="font-size: 18px;">
                 (주)릴리펏
                </span>
               </strong>
              </p>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="4" doz_order="2" doz_type="row">
        <div class="col-dz col-dz-4" doz_flexible="N" doz_grid="4" doz_type="grid">
         <div doz_type="widget" id="w201906199d8a00f52da81">
          <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[pkeyx]</li>[ahref]<li>[area1][mkey1]</li>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="4" doz_order="3" doz_type="row">
        <div class="col-dz col-dz-4" doz_flexible="N" doz_grid="4" doz_type="grid">
         <div doz_type="widget" id="w20190608d0c0e781f73bc">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
           <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w20190608d0c0e781f73bc">
            <div class="text-table">
             <div>
              <p>
               <span style="font-size: 13px;">
                서울시 동작구 흑석동 336 한강흑석푸르지오,
               </span>
               <br/>
               <span style="font-size: 13px;">
                아파트 상가 D동 (110동) 지하 302호 릴리펏 가맹사업본부
               </span>
              </p>
              <p>
               사업자등록번호 : 675-86-00278
              </p>
              <p>
               FAX :
               [linkx]
               
               <br/>
               Email:
               [linkx]
               
              </p>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="col-dz col-dz-3" doz_flexible="Y" doz_grid="3" doz_order="3" doz_type="grid">
       <div class="doz_row hidden-xs" doz_flexible="N" doz_grid="3" doz_type="row" hidden_xs="Y">
        <div class="col-dz col-dz-3" doz_flexible="N" doz_grid="3" doz_type="grid">
         <div doz_type="widget" id="w201906196fa208b4c5a0c">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
           <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w201906196fa208b4c5a0c">
            <div class="text-table">
             고객센터[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li>[ahref][area1][mkey1]<li>[area1][keywordx]</li>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="3" doz_order="2" doz_type="row">
        <div class="col-dz col-dz-3" doz_flexible="N" doz_grid="3" doz_type="grid">
         <div doz_type="widget" id="w20190619c5a62f7b78962">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="가로선" data-widget-parent-is-mobile="N" data-widget-type="hr">
           <div class="widget line type01 _hide" id="hr_w20190619c5a62f7b78962">
            <div class="line_box holder" style="width:100%; ">
             <hr style="border-top-width:1px; border-color:rgba(0, 0, 0, 0.15);"/>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="3" doz_order="3" doz_type="row">
        <div class="col-dz col-dz-3" doz_flexible="N" doz_grid="3" doz_type="grid">
         <div doz_type="widget" id="w20190619951465a2071ca">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
           <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w20190619951465a2071ca">
            <div class="text-table">
             <div>
              <p>
               <strong>
                <span style="font-size: 16px;">
                 대표전화:
                </span>
               </strong>
               <span style="font-size: 16px;">
                02-813-2823
               </span>
              </p>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="3" doz_order="4" doz_type="row">
        <div class="col-dz col-dz-3" doz_flexible="N" doz_grid="3" doz_type="grid">
         <div doz_type="widget" id="w2019061904b4776895c0e">
          <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="가로선" data-widget-parent-is-mobile="N" data-widget-type="hr">
           <div class="widget line type01 _hide" id="hr_w2019061904b4776895c0e">
            <div class="line_box holder" style="width:100%; ">
             <hr style="border-top-width:1px; border-color:rgba(0, 0, 0, 0.25);"/>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="doz_row" doz_flexible="N" doz_grid="3" doz_order="5" doz_type="row">
        <[keywordx]>
        </[keywordx]>
       </div>
      </div>
      <div class="col-dz col-dz-3" doz_flexible="N" doz_grid="3" doz_order="4" doz_type="grid">
       <div doz_type="widget" id="w20190619fab3659bf43d5">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="텍스트" data-widget-parent-is-mobile="N" data-widget-type="text">
         <div class="widget _text_wrap widget_text_wrap fr-view default_padding" doz_type="text" id="text_w20190619fab3659bf43d5">
          <div class="text-table">
           <div>
            <table id="myshop-info" style="width: 100%;">
             <tbody>
              <tr>
               <td data-href="/consulting" style="width: 33.3333%; text-align: center;">
                <br/>
                가맹상담신청
               </td>
               <td data-href="/foundationGuide" style="width: 33.3333%; text-align: center;">
                <br/>
                창업안내
               </td>
               <td data-href="/franchise-in" style="width: 33.3333%; text-align: center;">
                <br/>
                가맹점 보기
               </td>
              </tr>
              <tr>
               <td data-href="/Notice" style="width: 33.3333%; text-align: center;">
                <br/>
                공지사항
               </td>
               <td data-href="/play-space" style="width: 33.3333%; text-align: center;">
                <br/>
                놀이시설
               </td>
               <td data-href="/
patent" style="width: 33.3333%; text-align: center;">
                <h2>
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h2>
                <br/>
                특허소개
               </td>
              </tr>
             </tbody>
            </table>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="doz_row" doz_flexible="N" doz_grid="12" doz_type="row">
      <div class="col-dz col-dz-12" doz_flexible="N" doz_grid="12" doz_type="grid">
       <div doz_type="widget" id="w20190610a67ff3e6b2dd5">
        <div class="_widget_data" data-widget-anim="" data-widget-anim-delay="" data-widget-anim-duration="" data-widget-name="여백" data-widget-parent-is-mobile="N" data-widget-type="padding">
         <div class="widget padding" data-height="17" style="margin-top:px; margin-bottom:px;">
          <div id="padding_w20190610a67ff3e6b2dd5" style="width:100%; min-height:1px; height:17px; ">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </main>
  </div>
  <footer id="doz_footer_wrap">
   <div id="doz_footer">
    <div class="footer-section footer-type05 _footer_font_preview footer_align_center footer_align_right">
     <div class="inside">
      <div class="doz_row">
       <div class="col-dz-12 col-xdz-12 col-dz">
        <div class="foot-custom">
         <div class="custom-text _footer_text">
          <div class="custom-text-info _text_editor fr-view">
           <p style="text-align: center;">
            <span style="font-size: 14px;">
             © 2013 릴리펏. All Rights Reserved.
            </span>
           </p>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </footer>
  <iframe id="hidden_frame" name="hidden_frame" style="position: absolute; left: -9999px; width: 1px; height: 1px; top:-9999px;">
  </iframe>
  <div aria-hidden="true" class="modal" id="cocoaModal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal submodal" id="cocoaSubModal" role="dialog" style="z-index: 17001">
   <div class="modal-dialog">
    <div class="modal-content">
    </div>
   </div>
  </div>
  <div class="Qmenu hidden-xs hidden-sm">
   [ahref]
   
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0216
  </b>
 </body>
</html>
|<---