--->|<!DOCTYPE html>
<html lang="ko">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="always" name="referrer"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="thema_orange" id="tt-body-page">
  <div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0">
  </div>
  <div class="thema_orange" id="wrap">
   <div class="area_menu">
    <nav class="menu_navigation">
     <ul>
      <li class="t_menu_home first">
       [ahref]
       
      </li>
      <li class="t_menu_guestbook">
       <a href="/guestbook">
        방명록
       </a>
      </li>
      <li class="t_menu_category">
       [linkx]
       
      </li>
      <li class="t_menu_link_1">
       [ahref]
       
      </li>
      <li class="t_menu_link_2 last">
       [ahref]
       
      </li>
     </ul>
     <ul class="tt_category">
      <li class="">
       <a class="link_tit" href="/category">
        분류 전체보기
        <span class="c_cnt">
         (54)
        </span>
       </a>
       <ul class="category_list">
        <li class="">
         <a class="link_item" href="/category/%EB%B9%84%EA%B1%B4%20%EC%8B%9D%EB%8B%B9%20%EB%A6%AC%EB%B7%B0%20">
          비건 식당 리뷰
          <span class="c_cnt">
           (27)
          </span>
         </a>
        </li>
        <li class="">
         [linkx]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
        <li class="">
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </nav>
    <div class="m_sidebar pc_blind">
     <div class="related_posts_mobile">
      <div class="related_type related_type_view" style="display:block;">
       <ul class="list_related">
       </ul>
      </div>
     </div>
     <div class="about_me_mobile">
      <div class="box_sidebar about_me">
       <h3 class="title_sidebar">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <p class="text_about">
        -
       </p>
      </div>
     </div>
    </div>
    <ul class="list_sns">
     <li>
      <a class="link_sns link_fb" href="/%EB%B9%84%EA%B1%B4%ED%94%BC%EB%93%9C-VeganFeed-276864512757760/" target="_blank">
       <span class="blind">
        페이스북
       </span>
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a class="link_sns link_insta" href="/veganfeed_/" target="_blank">
       <span class="blind">
        인스타그램
       </span>
      </a>
     </li>
    </ul>
    <div class="box_visit">
     <dl class="data_today">
      <dt class="title_visit">
       Today
      </dt>
      <dd class="item_visit">
       -
      </dd>
     </dl>
     <dl class="data_yesterday">
      <dt class="title_visit">
       Yesterday
      </dt>
      <dd class="item_visit">
       -
      </dd>
     </dl>
     <dl class="data_total">
      <dt class="title_visit">
       Total
      </dt>
      <dd class="item_visit">
       -
      </dd>
     </dl>
    </div>
   </div>
   <div id="container">
    <header id="header">
     <div class="inner_header">
      <h1 class="logo">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][linkx]<li>[ahref]</li>[pkeyx][linkx][area1][mkey1]
      </h1>
      <button class="btn_menu" type="button">
       <span class="icon-Menu">
       </span>
       <span class="icon-Close">
       </span>
       <span class="blind">
        메뉴<li>[pkeyx]</li><li>[ahref]</li>[area1][mkey1]<li>[area1][keywordx]</li>[linkx]
       </span>
      </button>
      <button class="btn_search">
       <span class="icon-Search">
       </span>
       <span class="blind">
        검색[linkx][ahref][linkx][area1][mkey1][linkx][area1][keywordx][area1][keywordx][pkeyx][pkeyx][pkeyx][area1][keywordx][pkeyx][pkeyx][pkeyx][ahref]
       </span>
      </button>
      <div class="area_search thema_apply" style="display: none;">
       <form action="" method="get">
        <legend>
         <span class="blind">
          컨텐츠 검색
         </span>
        </legend>
        <button class="btn_search_del" title="검색어 삭제" type="button">
        </button>
       </form>
      </div>
     </div>
    </header>
    <main id="main">
     <div class="inner_index">
      <div class="category_list index_type_common index_type_gallery">
       <ul class="list_gallery">
        <li class="category_content_area">
         <div class="area_view_content">
          <div class="article_content">
           <div class="info_post">
            <a class="link_title" href="/68">
             <div class="title_view">
              요즘 핫한 영화 '알라딘'의 주인공은 채식주의자다.(메나 마수드 / 비건)
             </div>
            </a>
            <div class="view_info_post">
             [ahref]
             
             <span class="date">
              2019.06.18 19:43
             </span>
            </div>
           </div>
           <div class="article_view">
            <div class="tt_adsense_top" style="margin-bottom:30px">
             <ins class="adsbygoogle" data-ad-client="ca-pub-6259087798061556" data-ad-format="auto" data-ad-slot="4826033341" data-full-width-responsive="true" style="display:block">
             </ins>
            </div>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:562px;;height:auto;max-width:100%">
             </span>
             <br/>
             최근 힙
             <span style="letter-spacing: 0pt;">
              &amp;
             </span>
             핫 디즈니 라이브 액션으로 대중의 큰 관심을 이끈 영화
             <span style="letter-spacing: 0pt;">
              ‘
             </span>
             알라딘
             <span style="letter-spacing: 0pt;">
              ’!!
             </span>
             여러분도 보셨나요
             <span style="letter-spacing: 0pt;">
              ?[ahref][ahref][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][ahref][area1][mkey1][area1][keywordx][area1][mkey1][ahref][linkx][area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style='font-family: "맑은 고딕", sans-serif;'>
              저는 생각지도 못한 힙한 모습을 보여준 지니와 알라딘의 케미가 너무 웃겨서 또 보고 싶을 정도였는데요
             </span>
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              .
             </span>
             <span style='font-family: "맑은 고딕", sans-serif;'>
              무엇보다 영화 중간중간에 나오는 노래들이 너무 감미로워서 집 가는 내내 흥얼거리게 되더라구요
             </span>
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              ~
             </span>
            </p>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:596px;;height:auto;max-width:100%">
             </span>
             <br/>
             이 노래보다 더 놀라운 사실은 알라딘 역을 맡은 배우
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             메나 마수드
             <span style="letter-spacing: 0pt;">
              (Mena Massoud)
             </span>
             가 육류
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             해산물
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             그리고 유제품도 먹지 않는 채식주의자
             <span style="letter-spacing: 0pt;">
              ’
             </span>
             비건
             <span style="letter-spacing: 0pt;">
              ‘
             </span>
             이라는 사실
             <span style="font-family: 함초롬바탕; letter-spacing: 0pt;">
              ! <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li><li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              여러분도 알고 계셨나요?
              <ins class="adsbygoogle" data-ad-client="ca-pub-6259087798061556" data-ad-format="auto" data-ad-slot="1384238512" data-full-width-responsive="true" style="display:block">
              </ins>
             </span>
            </p>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:595px;;height:auto;max-width:100%">
             </span>
             <br/>
             메나 마수드(Mena Massoud)는 비건이 된지
             <span style="letter-spacing: 0pt;">
              3
             </span>
             년 차에 접어들었다고 하는데요
             <span style="letter-spacing: 0pt;">
              .
             </span>
            </p>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:599px;;height:auto;max-width:100%">
             </span>
             <br/>
             우연히 친구들과 공장식 축산에 대해 조사하면서 자연스럽게 동물성 제품들이 인간의 건강
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             환경 그리고 동물에게 미치는 끔찍한 해악들에 대해서 알게 되었다고합니다
             <span style="letter-spacing: 0pt;">
              .
             </span>
             이후
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             그는 천천히 동물성 식품을 줄이다가 마침내 완전히 동물성 식품을 끊는 비건
             <span style="letter-spacing: 0pt;">
              (Vegan)
             </span>
             이 되었죠.
            </p>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:760px;;height:auto;max-width:100%">
             </span>
             <br/>
             <span style="font-size: 10pt;">
              최근 그는 비건
             </span>
             <span style="letter-spacing: 0pt; font-size: 10pt;">
              (
             </span>
             <span style="font-size: 10pt;">
              완전채식
             </span>
             <span style="letter-spacing: 0pt; font-size: 10pt;">
              )
             </span>
             <span style="font-size: 10pt;">
              문화를 널리 알리기 위해
             </span>
             <span style="letter-spacing: 0pt; font-size: 10pt;">
              <Evolving Vegan>
             </span>
             <span style="font-size: 10pt;">
              이라는 프로젝트를 시작하기도 했는데요
             </span>
             <span style="letter-spacing: 0pt; font-size: 10pt;">
              . ‘Evolving Vegan‘
             </span>
             <span style="font-size: 10pt;">
              인스타그램 채널을 통해 수만명의 사람들에게 다양한 비건 음식을 소개하고 있죠
             </span>
             <span style="font-family: 함초롬바탕; letter-spacing: 0pt;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               <span style="font-size: 10pt;">
                .
               </span>
               <br/>
               <br/>
               <span style="font-size: 10pt;">
                저도 조사할겸 인스타그램을 쭈욱~ 둘러봤는데 어마무시한 녀석들이 정말 많더라구요! 한국에는 도대체 언제쯤 이렇게 다양해질지...
               </span>
               <br/>
               <br/>
               <span style="font-size: 10pt;">
                게다가 계정 개
               </span>
              </span>
             </span>
             <span style="font-size: 10pt;">
              설한지
             </span>
             <span style="letter-spacing: 0pt; font-size: 10pt;">
              1
             </span>
             <span style="font-size: 10pt;">
              년도 안됐는데 벌써 팔로워
             </span>
             <span style="letter-spacing: 0pt; font-size: 10pt;">
              5
             </span>
             <span style="font-size: 10pt;">
              만명이 훌쩍~! 와우...대단합니다.
             </span>
            </p>
            <ins class="adsbygoogle" data-ad-client="ca-pub-6259087798061556" data-ad-format="auto" data-ad-slot="1384238512" data-full-width-responsive="true" style="display:block">
            </ins>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:747px;;height:auto;max-width:100%">
             </span>
             <br/>
             그는 한 인터뷰에서 다음과 같이 말했습니다
             <span style="letter-spacing: 0pt;">
              . “
             </span>
             저는 사람들이 비건에 도전할 수 있도록 커뮤니티
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             라이프스타일 브랜드를 만들고 싶어요
             <span style="letter-spacing: 0pt;">
              .
             </span>
             삶의 방향성을 갖도록
             <span style="letter-spacing: 0pt;">
              .
             </span>
             최선을 다하도록
             <span style="letter-spacing: 0pt;">
              .
             </span>
             그리고 스스로의 삶에서 동물이 들어간 제품을 멀리하도록
             <span style="letter-spacing: 0pt;">
              .
             </span>
             그런 일을 시작하도록 돕는 것이죠
             <span style="letter-spacing: 0pt;">
              .
             </span>
             비록 당장은 어렵더라도 조금씩 동물성 섭취를 줄이고 환경을 덜 해치려 노력한다면
             <span style="letter-spacing: 0pt;">
              ,
             </span>
             당신도 보람을 느낄 수 있을 겁니다
             <span style="letter-spacing: 0pt;">
              .”
             </span>
            </p>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:596px;;height:auto;max-width:100%">
             </span>
             <br/>
             그는 비건 맛집 투어를 하면서 비건 음식이 다양하다는 것을 알고 놀라기도 했죠.
             <br/>
             <br/>
             (해맑은 채식주의자 '메나 마수드'... 헤헤)
            </p>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:703px;;height:auto;max-width:100%">
             </span>
             <br/>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              그는 많은 비건 맛집을 다니며 다양한 음식에 놀랐지만 동료 배우들은 마수드의 생활 방식을 보고 놀랍니다
             </span>
             <span style='letter-spacing: 0pt; text-align: start; font-family: "맑은 고딕", sans-serif;'>
              . ‘
             </span>
             <span style="text-align: start;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               어떻게 매일
              </span>
              <span style='font-family: "맑은 고딕", sans-serif;'>
              </span>
             </span>
             <[keywordx]>
             </[keywordx]>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              시간 일을 하고 빠짐없이 운동을 하는지
             </span>
             <span style='letter-spacing: 0pt; text-align: start; font-family: "맑은 고딕", sans-serif;'>
              ’, ‘
             </span>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              어떻게 계속 비건으로만 살아가는지
             </span>
             <span style="letter-spacing: 0pt; text-align: start; font-family: 함초롬바탕;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               .’
              </span>
              <span style='font-family: "맑은 고딕", sans-serif;'>
              </span>
             </span>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              물으면서 말이죠
             </span>
             <span style="letter-spacing: 0pt; text-align: start; font-family: 함초롬바탕;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               .
              </span>
              <span style='font-family: "맑은 고딕", sans-serif;'>
               <br/>
              </span>
             </span>
             <span style="text-align: start;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               [ahref]<li>[area1][mkey1]</li>[area1][keywordx]
              </span>
              <span style='font-family: "맑은 고딕", sans-serif;'>
               '[area1][keywordx][ahref][pkeyx][area1][keywordx][area1][keywordx][area1][mkey1][area1][mkey1][ahref][pkeyx][area1][keywordx][linkx][ahref][area1][keywordx]
              </span>
             </span>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              채식을 하는 것이 건강에 좋지 않다고 생각하는 사람들이 많은 것 같아요
             </span>
             <span style="letter-spacing: 0pt; text-align: start; font-family: 함초롬바탕;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               ,
              </span>
              <span style='font-family: "맑은 고딕", sans-serif;'>
              </span>
             </span>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              이런 편견들을 뒤엎어 주는 것이 우리 비건들의 숙제라고 생각해요
             </span>
             <span style='letter-spacing: 0pt; text-align: start; font-family: "맑은 고딕", sans-serif;'>
              .”
             </span>
             <span style='text-align: start; font-family: "맑은 고딕", sans-serif;'>
              라고 말했습니다
             </span>
             <span style='letter-spacing: 0pt; text-align: start; font-family: "맑은 고딕", sans-serif;'>
              .
             </span>
            </p>
            <ins class="adsbygoogle" data-ad-client="ca-pub-6259087798061556" data-ad-format="auto" data-ad-slot="1384238512" data-full-width-responsive="true" style="display:block">
            </ins>
            <p style="text-align: left; clear: none; float: none;">
             <span class="imageblock" style="display:inline-block;width:644px;;height:auto;max-width:100%">
             </span>
             <br/>
             <span style='font-family: "맑은 고딕", sans-serif;'>
              이번 여름까지 비건에 도전하고 싶은 사람들을 위한 커뮤니티도 추가로 만들거라는 지구의 영웅 '메나 마수드'!!
             </span>
             <span style='font-family: "맑은 고딕", sans-serif;'>
              앞으로의 활약이 더욱 기대됩니다.
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style='font-family: "맑은 고딕", sans-serif;'>
              주변에 미국에 살면서 채식에 관심있는 친구가 있다면
             </span>
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              'Evolving Vegan'을
             </span>
             <span style='font-family: "맑은 고딕", sans-serif;'>
              추천해주시는건 어떨까요
             </span>
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              ?
              <br/>
             </span>
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              <br/>
              (
             </span>
             <span style='font-family: "맑은 고딕", sans-serif;'>
              한국에는 비건피드가 있으니까요
             </span>
             <span style='font-family: "맑은 고딕", sans-serif; letter-spacing: 0pt;'>
              ~홍홍홍^^^..
             </span>
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <span style='font-family: "맑은 고딕", sans-serif;'>
               )
              </span>
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <br>
               [ahref][area1][keywordx][ahref][area1][mkey1][pkeyx][area1][mkey1][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][linkx][area1][keywordx][ahref][ahref][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][pkeyx][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              </br>
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <br/>
             </span>
            </p>
            <div class="txc-textbox" style="border-style: solid; border-width: 1px; border-color: rgb(121, 165, 228); background-color: rgb(219, 232, 251); padding: 10px;">
             <h3 style="text-align: center;">
              [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
             </h3>
             <p class="0" style="text-align: center;">
              [ahref]
              
             </p>
             <p class="0" style="text-align: center;">
              <a href="/37" target="_blank">
               <span style="background-color: rgb(47, 157, 39); color: rgb(255, 255, 255);">
                아놀드 슈왈제네거를 포함해, 이 10명의 세계 챔피언은 모두 채식주의자다.
               </span>
              </a>
             </p>
             <p class="0" style="text-align: center;">
              [ahref]
              
             </p>
             <p class="0" style="text-align: center;">
              [linkx]
              
             </p>
            </div>
            <p class="0" style="text-align: left;">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <br/>
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <br/>
             </span>
            </p>
            <p class="0" style="text-align: left;">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <br/>
             </span>
            </p>
            <p class="0">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <Evolving Vegan
             </span>
             인스타그램
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              >
              <br/>
             </span>
             <u>
              <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;color:#800080;">
               [linkx]
               
              </span>
             </u>
            </p>
            <p class="0">
             <span style="font-family: 함초롬바탕; letter-spacing: 0pt;">
              <
             </span>
             참고 기사
             <span style="font-family: 함초롬바탕; letter-spacing: 0pt;">
              >_
             </span>
             <u>
              <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;color:#0000ff;">
               [linkx]
               
              </span>
             </u>
            </p>
            <p class="0">
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              <
             </span>
             사진
             <span style="font-family:함초롬바탕;mso-font-width:100%;letter-spacing:0.0pt;mso-text-raise:0.0pt;">
              >_
             </span>
             <span style="font-family: 함초롬바탕; letter-spacing: 0pt;">
              menamassoud instagram
              <br/>
              <br/>
             </span>
            </p>
            <p>
             <br/>
            </p>
            <div class="txc-textbox" style="border-style: solid; border-width: 1px; border-color: rgb(219, 232, 251); background-color: rgb(219, 232, 251); padding: 10px;">
             <p style="text-align: center;">
              로그인 없이 댓글과 공감 가능하니 딱 1개만 부탁드립니다!
             </p>
            </div>
            <p>
             <br/>
            </p>
            <p>
             <br/>
            </p>
            <p>
             insta: 'veganfeed_'
             <br/>
             facebook: '비건피드(VeganFeed)'
             <br/>
             <br/>
            </p>
            <br/>
            <p>
            </p>
            <div class="tt_adsense_bottom" style="margin-top:30px">
             <ins class="adsbygoogle" data-ad-client="ca-pub-6259087798061556" data-ad-format="auto" data-ad-slot="6514519534" data-full-width-responsive="true" style="display:block">
              <li>[linkx]</li>[linkx]<li>[pkeyx]</li>
             </ins>
            </div>
            <div class="container_postbtn #post_button_group">
             <div class="postbtn_like">
              <div class="wrap_btn">
               <button class="btn_post like_btn uoc-icon" data-uoc-fetchurl="http://api.kakao.tistory.com/like/fetch?uid=3005184_68" data-uoc-pcurl="https://veganfeed.co.kr/68" data-uoc-sc="204" data-uoc-svc="tistory" data-uoc-uid="3005184_68" type="button">
                <div class="uoc-icon">
                 <span class="ico_postbtn ico_like">
                  좋아요
                 </span>
                 <span class="txt_like uoc-text screen_out">
                  공감
                 </span>
                 <span class="txt_like uoc-count">
                 </span>
                </div>
               </button>
              </div>
              <div class="wrap_btn wrap_btn_share">
               <button class="btn_post sns_btn btn_share" data-blog-title="비건피드 VeganFeed " data-description="최근 힙&amp;핫 디즈니 라이브 액션으로 대중의 큰 관심을 이끈 영화 ‘알라딘’!! 여러분도 보셨나요? 저는 생각지도 못한 힙한 모습을 보여준 지니와 알라딘의 케미가 너무 웃겨서 또 보고 싶을 정도였는데요. 무엇.." data-pc-url="https://veganfeed.co.kr/68" data-profile-image="https://tistory3.daumcdn.net/tistory/3005184/attach/fa4830b5293c4484ad6549930fa720db" data-profile-name="ila2014" data-thumbnail-url="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F994967375D08BDFF2C" data-title="요즘 핫한 영화 '알라딘'의 주인공은 채식주의자다.(메나 마수드 / 비건)" type="button">
                <span class="ico_postbtn ico_share">
                 공유하기
                </span>
               </button>
              </div>
              <div class="wrap_btn wrap_btn_etc" data-category-visibility="public" data-entry-id="68" data-entry-visibility="public">
               <button class="btn_post btn_etc2" type="button">
                <span class="ico_postbtn ico_etc">
                 글 요소
                </span>
               </button>
              </div>
             </div>
             <button class="btn_menu_toolbar btn_subscription #subscribe" data-blog-id="3005184" data-device="web_pc" data-url="https://ila2014.tistory.com/68" type="button">
              <em class="txt_state">
               구독하기
              </em>
              <strong class="txt_tool_id">
               비건피드 VeganFeed
              </strong>
              <span class="img_common_tistory ico_check_type1">
               <li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>
              </span>
             </button>
             <div class="postbtn_ccl" data-ccl-type="1">
              [linkx]
              
             </div>
            </div>
            <div class="tt-plugin tt-share-entry-with-sns tt-sns-icon-alignment-center tt-sns-icon-size-big">
             <div class="tt-sns-wrap" id="ttSnsWrap-68">
              <ul class="tt-sns-service-default">
               <li class="tt-sns-service-kakaostory">
                [linkx]
                
               </li>
               <li class="tt-sns-service-twitter">
                [linkx]
                
               </li>
               <li class="tt-sns-service-facebook">
                <a href=";" onclick="ShareEntryWithSNS.share('facebook', '68', '%EC%9A%94%EC%A6%98%20%ED%95%AB%ED%95%9C%20%EC%98%81%ED%99%94%20%27%EC%95%8C%EB%9D%BC%EB%94%98%27%EC%9D%98%20%EC%A3%BC%EC%9D%B8%EA%B3%B5%EC%9D%80%20%EC%B1%84%EC%8B%9D%EC%A3%BC%EC%9D%98%EC%9E%90%EB%8B%A4.%28%EB%A9%94%EB%82%98%20%EB%A7%88%EC%88%98%EB%93%9C%20%2F%20%EB%B9%84%EA%B1%B4%29');">
                 페이스북
                </a>
               </li>
              </ul>
             </div>
             <div class="tt-sns-clear">
             </div>
            </div>
            <div style="text-align:left; padding-top:10px;clear:both">
             <iframe allowtransparency="true" frameborder="0" scrolling="no" src="//www.facebook.com/plugins/like.php?href=https://veganfeed.co.kr/68&amp;layout=button_count&amp;show_faces=true&amp;width=106&amp;action=like&amp;font=tahoma&amp;colorscheme=light&amp;height=65" style="border:none; overflow:hidden; width:106px; height:30px;">
             </iframe>
            </div>
            <div class="another_category another_category_color_gray">
             <h4>
              '
              [ahref]
              
              ' 카테고리의 다른 글
             </h4>
             <table>
              <tr>
               <th>
                <a class="current" href="/68?category=710057">
                 요즘 핫한 영화 '알라딘'의 주인공은 채식주의자다.(메나 마수드 / 비건)[ahref][area1][mkey1][area1][mkey1][linkx][linkx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                </a>
                <span>
                 (2)
                </span>
               </th>
               <td>
                2019.06.18[pkeyx]<li>[ahref]</li><li>[area1][mkey1]</li>
               </td>
              </tr>
              <tr>
               <th>
                [ahref]
                
                <span>
                 (0)
                </span>
               </th>
               <td>
                2019.06.13
               </td>
              </tr>
              <tr>
               <th>
                [linkx]
                
                <span>
                 (11)
                </span>
               </th>
               <td>
                2019.06.07
               </td>
              </tr>
              <tr>
               <th>
                [pkeyx]<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
               </th>
               <td>
                2019.05.26
               </td>
              </tr>
              <tr>
               <th>
                [ahref]
                
                <span>
                 (0)
                </span>
               </th>
               <td>
                2019.05.16
               </td>
              </tr>
              <tr>
               <th>
                <a href="/25?category=710057">
                 결혼식장 뷔페에서 비건으로 살아남기 / 일라의 일상
                </a>
                <span>
                 (0)
                </span>
               </th>
               <td>
                2019.05.12
               </td>
              </tr>
              <tr>
               <th>
                [ahref]
                
                <span>
                 (6)
                </span>
               </th>
               <td>
                2019.05.10
               </td>
              </tr>
             </table>
            </div>
           </div>
           <div class="area_tag">
            <h2 class="title_tag">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h2>
            <div class="tag_content">
             [ahref]
             
             ,
             <a href="/tag/%EB%A9%94%EB%82%98%EB%A7%88%EC%88%98%EB%93%9C%20%EC%B1%84%EC%8B%9D%EC%A3%BC%EC%9D%98%EC%9E%90" rel="tag">
              메나마수드 채식주의자
             </a>
             ,
             [linkx]
             
             ,
             [ahref]
             
             ,
             [ahref]
             
             ,
             <a href="/tag/%EC%98%81%ED%99%94%20%EB%B0%B0%EC%9A%B0%20%EC%B1%84%EC%8B%9D" rel="tag">
              영화 배우 채식
             </a>
            </div>
           </div>
           <div class="related_type related_type_view">
            <h2 class="title_related">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h2>
            <ul class="list_related">
             <li>
              <li>[pkeyx]</li><li>[pkeyx]</li><li>[pkeyx]</li><li>[ahref]</li>[pkeyx]
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
           <div class="area_reply">
            <div class="box_reply_info">
             [linkx]
             
             <button class="btn_fold" type="button">
              <span class="blind">
               댓글
                                                                    접기
              </span>
             </button>
             <button class="btn_spread" style="display: none;" type="button">
              <span class="blind">
               댓글 펼치기
              </span>
             </button>
            </div>
            <div id="entry68Comment" style="display:block">
             <div class="reply_content">
              <button class="btn_more btn_replymore" style="display: none;" type="button">
               이전 댓글 더보기
              </button>
              <div class="box_comment_list">
               <div class="comment-list">
                <ul>
                 <li id="comment7666232">
                  <div class="author-meta">
                   <span class="nickname">
                   </span>
                   <span class="date">
                    2019.06.19 01:01
                    [ahref]
                    
                   </span>
                  </div>
                  <p>
                   알라딘 주연이 3년 전부터 비건이었다니 놀랍네요.
                   <br/>
                   운동도 꾸준히 하고 식이요법에 자기 관리가 철저한 배우인 거 같네요.
                   <br/>
                   알라딘 영화 너무 재밌게 잘 봤어요. 주인공들이 불렀던 노래들도 참 좋았고요.
                  </p>
                  <div class="control">
                   <a href="/68#comment7666232">
                    댓글주소
                   </a>
                   [linkx]
                   
                   [ahref]
                   
                  </div>
                  <ul>
                   <li id="comment7666246">
                    <div class="author-meta">
                     <span class="nickname">
                     </span>
                     <span class="date">
                      2019.06.19 02:21
                      [ahref]
                      
                     </span>
                    </div>
                    <p>
                     저도 무척 놀랐어요 ㅎㅎ.. 노래도 너무 좋죠^^
                    </p>
                    <div class="control">
                     [ahref]
                     
                     [linkx]
                     
                    </div>
                   </li>
                  </ul>
                 </li>
                </ul>
               </div>
              </div>
              <form action="/comment/add/68" method="post" onsubmit="return false" style="margin: 0">
               <form method="post">
                <div class="reply_write">
                 <div class="form_content thema_apply">
                 </div>
                 <div class="form_guest">
                  <div class="box_inp">
                   <div class="inner_inp">
                   </div>
                  </div>
                  <div class="box_inp">
                   <div class="inner_inp">
                   </div>
                  </div>
                 </div>
                 <div class="form_reg">
                  <label>
                   비밀글
                  </label>
                 </div>
                 <div class="form_reg">
                  <button class="btn_register thema_apply" onclick="addComment(this, 68); return false;" type="button">
                   등록
                  </button>
                 </div>
                </div>
               </form>
              </form>
             </div>
            </div>
           </div>
          </div>
         </div>
        </li>
       </ul>
      </div>
      <div class="area_paging">
       <div class="inner_paging thema_apply">
        [ahref]
        
        <div class="paging_num">
         [linkx]
         
         [linkx]
         
         [ahref]
         
         [ahref]
         
         [linkx]
         
         [ahref]
         
         [ahref]
         
         [linkx]
         
         [linkx]
          <li>[area1][keywordx]</li><li>[linkx]</li>[pkeyx]<li>[pkeyx]</li><li>[area1][mkey1]</li>
         
         [ahref]
         
         [ahref]
         
         [ahref]
         
         [linkx]
         
        </div>
        [ahref]
        
       </div>
      </div>
     </div>
    </main>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0310
  </b>
 </body>
</html>
<span class="blind">
 다음
</span>
<span class="icon-Keyboard-Arrow---Right">
</span>
<aside class="sidebar mobile_blind">
 <div class="inner_sidebar thema_apply">
  <div class="related_posts">
   <div class="related_type related_type_view">
    <h2 class="title_related">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h2>
    <ul class="list_related">
     <li>
      <a class="link_related" href="/21" style="background-image:url('https://k.kakaocdn.net/dn/dpIiNX/btqu88hEO4n/IfTUHpWUdR6KqFkEq11lV0/img.png')">
       <span class="bg">
       </span>
       <span class="txt">
        <strong>
         어벤져스에 나오는 배우 10명..
        </strong>
       </span>
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
  </div>
  <div class="about_me_pc">
   <div class="box_sidebar about_me">
    <div class="inbox">
     <h3 class="title_sidebar">
      <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
     </h3>
     <p class="text_about">
      비건 식당 리뷰, 제품,  페스티벌, 펀딩 등  비건에 관련된 모든 내용을 소개해드립니다.

문의_lky0922@naver.com
     </p>
    </div>
   </div>
  </div>
  <div class="box_sidebar">
   <div class="inbox">
    <h3 class="title_sidebar">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h3>
    [linkx]
    
   </div>
  </div>
  <div class="box_sidebar sidebar_admin">
   <div class="inbox">
    <h3 class="title_sidebar">
     <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
    </h3>
    [ahref]
    
    [linkx]
    
   </div>
  </div>
  <div class="box_sidebar visit_counter">
   <div class="inbox">
    <span class="total">
     60,809
    </span>
    <span class="today">
     242
    </span>
    <span class="yesterday">
     279
    </span>
   </div>
  </div>
 </div>
</aside>
<footer id="footer">
 Designed by Tistory.
</footer>
<iframe id="editEntry" src="//ila2014.tistory.com/api" style="position:absolute;width:1px;height:1px;left:-100px;top:-100px">
</iframe>
<div class="#menubar menu_toolbar toolbar_lb">
 <h2 class="screen_out">
  [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
 </h2>
 <div class="btn_tool btn_tool_type1" id="menubar_wrapper">
 </div>
 <div class="btn_tool">
  <button class="btn_menu_toolbar btn_subscription #subscribe" data-blog-id="3005184" data-device="web_pc" data-url="https://ila2014.tistory.com">
   <strong class="txt_tool_id">
    비건피드 VeganFeed
   </strong>
   <em class="txt_state">
    구독하기
   </em>
   <span class="img_common_tistory ico_check_type1">
   </span>
  </button>
 </div>
</div>
<div class="layer_tooltip">
 <div class="inner_layer_tooltip">
  <p class="desc_g">
  </p>
 </div>
</div>
<div class="layer_post" id="tistoryEtcLayer">
</div>
<div class="layer_post" id="tistorySnsLayer">
</div>
|<---