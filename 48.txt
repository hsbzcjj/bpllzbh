--->|<!DOCTYPE HTML>
<html lang="ko">
 <head itemscope="">
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, target-densitydpi=medium-dpi" name="viewport">
  </meta>
 </head>
 <body class="renewal2015 view2016">
  <div class="sub-wrap gnb-news-00" id="wrap">
   <span class="skip-link">
    [ahref]
    
    [linkx]
    
    [ahref]
    
   </span>
   <div class="header hdr2015" id="header">
    <div class="link-wrap">
     <strong class="logo-yna">
      [ahref]
      
     </strong>
     <div class="lang-wrap">
      <span class="hidden-obj">
       연합뉴스 다국어사이트 바로가기
      </span>
      <ul class="lang-site">
       <li class="en">
        [ahref]
        
       </li>
       <li class="zh">
        [ahref]
        
       </li>
       <li class="jp">
        [linkx]
        
       </li>
       <li class="ar">
        [linkx]
        
       </li>
       <li class="sp">
        [linkx]
        
       </li>
       <li class="fr">
        [linkx]
        
       </li>
      </ul>
      <span class="bar">
       [ahref]
       
      </span>
      <span class="bar">
       [ahref]
       
      </span>
     </div>
     <div class="agency-svc agency-svc02">
      <dl class="svc-zone">
       <dt class="hidden-obj">
        연합뉴스 자회사 서비스 바로가기
       </dt>
       <dd>
        [ahref]
        
       </dd>
       <dd class="bar">
        [ahref]
        
       </dd>
       <dd>
        [linkx]
        
       </dd>
       <dd>
        [ahref]
        
       </dd>
      </dl>
      <div class="account-zone">
       <div class="acc-active">
        [ahref]
        
       </div>
       <div class="acc-disable">
        [linkx]
        
        <a href="/member/update" rel="nofollow">
         정보수정
        </a>
       </div>
      </div>
      <dl class="sns-zone">
       <dt class="hidden-obj">
        연합뉴스 SNS 계정 바로가기
       </dt>
       <dd class="fb">
        <a data-stat-code="header_sns_fb" data-stat-section="" href="/yonhap" rel="nofollow" target="_blank" title="새창">
         페이스북
        </a>
       </dd>
       <dd class="tw">
        [ahref]
        
       </dd>
       <dd class="insta">
        [linkx]
        
       </dd>
       <dd class="kks">
        [linkx]
        
       </dd>
      </dl>
     </div>
     <div class="top-banner">
      <span class="blind">
       배너
      </span>
      <ul>
       <li class="top-banner1 ads-top01">
       </li>
       <li class="top-banner2 ads-top02">
       </li>
      </ul>
     </div>
     [ahref]
     
    </div>
    <div class="navi-wrap">
     <div class="nav-zone" id="nav">
      <span class="hidden-obj">
       메뉴
      </span>
      <p class="home">
       [linkx]
       
      </p>
      <p class="d-news">
       [linkx]
       
      </p>
      <p class="hng-news">
       <a href="r" rel="nofollow">
        <span>
         #흥
        </span>
       </a>
      </p>
      <ul class="nav">
       <li class="m01" name="m01">
        <span class="nochild">
         [ahref]
         
        </span>
       </li>
       <li class="m02 gnb-wrap" name="m02">
        <a data-stat-code="navi_politics" data-stat-section="" href="/politics/index">
         <span>
          정치
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
            [area1][mkey1][linkx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][linkx][area1][keywordx][pkeyx][linkx][area1][keywordx][area1][keywordx][area1][keywordx][ahref][ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m03 gnb-wrap" name="m03">
        <a data-stat-code="navi_nk" data-stat-section="" href="/nk/index">
         <span>
          북한
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_nk_dep02" data-stat-section="" href="/nk/video/index">
            영상
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m04 gnb-wrap" name="m04">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_economy_dep02" data-stat-section="" href="/economy/job">
            취업
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m05 gnb-wrap" name="m05">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m06 gnb-wrap" name="m06">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_it_dep02" data-stat-section="" href="/it/health">
            건강
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m07 gnb-wrap" name="m07">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m08 gnb-wrap" name="m08">
        <a data-stat-code="navi_local" data-stat-section="" href="/local/index">
         <span>
          전국
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_local_dep02" data-stat-section="" href="/local/daegu-gyeongbuk/index">
            대구/경북
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m09 gnb-wrap" name="m09">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][keywordx][area1][mkey1][area1][keywordx][pkeyx][pkeyx][area1][mkey1][area1][keywordx]
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_entertainment_dep02" data-stat-section="" href="/entertainment/pop-song">
            가요
           </a>
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m10 gnb-wrap" name="m10">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m11 gnb-wrap" name="m11">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_sports_dep02" data-stat-section="" href="/sports/baseball">
            야구
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m12 gnb-wrap" name="m12">
        <a data-stat-code="navi_international" data-stat-section="" href="/international/index">
         <span>
          세계
         </span>
        </a>
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/all">
            전체기사
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/asia-australia">
            아시아/호주
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/centralsouth-america">
            중남미
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a data-stat-code="navi_international_dep02" data-stat-section="" href="/international/international-org">
            국제기구
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m13" name="m13">
        <span class="nochild">
         [ahref]
         
        </span>
       </li>
       <li class="m14 gnb-wrap" name="m14">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           <a data-stat-code="navi_people_dep02" data-stat-section="" href="/people/obituary-notice">
            부고
           </a>
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li class="m15 gnb-wrap" name="m15">
        [linkx]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
         </ul>
         <div class="story-zone">
         </div>
        </div>
       </li>
       <li class="m16" name="m16">
        <span class="nochild">
         [linkx]
         
        </span>
       </li>
       <li class="m17 visual" name="m17">
        [ahref]
        
        <div class="section-story">
         <ul class="nav-dep02">
          <li>
           [linkx]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li>
           [linkx]
           
          </li>
          <li class="video">
           [ahref]
           
           <span>
            [linkx]
            
            [ahref]
            
           </span>
          </li>
          <li class="vrroom">
           [linkx]
           
          </li>
         </ul>
         <ul class="visual-list">
          <li>
          </li>
         </ul>
        </div>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="fixed-bnr02">
    <span class="blind">
     배너
    </span>
    <div>
     <div class="ads-fixed01">
     </div>
    </div>
   </div>
   <div class="fixed-bnr03">
    <span class="blind">
     배너
    </span>
    <div>
    </div>
   </div>
   <div id="content">
    <div class="header-content contents-box">
     <div class="newsflash-wrap">
      <div class="emergency" id="emergency">
      </div>
      <div class="newsflash" id="newsFlash">
       <p class="blind">
        [실시간뉴스]
       </p>
       <div class="update">
        <strong>
         최종업데이트
        </strong>
        <span>
         YYYY-mm-dd hh:mm:ss
        </span>
       </div>
       <ul>
        <li>
        </li>
       </ul>
       <span class="newsflash-btn1">
       </span>
       <span class="newsflash-btn2">
       </span>
      </div>
     </div>
     <form action="e" class="search-wrap" data-stat-code="search" data-stat-section="">
      <fieldset>
       <span class="blind">
        검색[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li><li>[area1][mkey1]</li>
       </span>
       <label class="blind" for="search">
        검색어 입력
       </label>
       <span class="srchbar">
       </span>
      </fieldset>
     </form>
    </div>
    <div class="today-news-wrap" id="todayJuyo">
     <div class="today-news">
      <span class="today-sl-btn">
       <button class="today-prev">
        이전 슬라이드
       </button>
       <button class="today-next">
        다음 슬라이드
       </button>
      </span>
      <ul class="list">
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [linkx]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="in">
     </div>
    </div>
    <div class="contents">
     <div class="contents01 scroll-article-zone01">
      <div class="scroll-start01">
       <div class="scroll-in01">
        <div class="contents-box view-wrap">
         <div class="sta-wrap02" data-stat-code="lnb_news" data-stat-section="">
          <span class="tit">
           [linkx]
           
          </span>
         </div>
         <div class="article-wrap" id="articleWrap">
          <h1 class="tit-article">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h1>
          <div class="article-sns-md sns-md04">
           <div class="share-info">
            <span class="tt">
             송고시간 |
             <em>
              2019-03-15 07:00
             </em>
            </span>
            <div class="sns-share01">
             <button class="fb" data-stat-code="share_fb" data-stat-section="" onclick="javascript:SNS.fbShare();" type="button">
              <span>
               페이스북
              </span>
             </button>
             <button class="tw" data-stat-code="share_tw" data-stat-section="" onclick="javascript:SNS.twit();" type="button">
              <span>
               트위터
              </span>
             </button>
             <button class="kks" data-stat-code="share_kks" data-stat-section="" onclick="javascript:SNS.kakaostory();" type="button">
              <span>
               카카오스토리
              </span>
             </button>
             <div class="more-wrap">
              <button class="more" type="button">
               <span>
                더보기
               </span>
              </button>
              <div class="more-list">
               <button class="fbm" data-stat-code="share_fbm" data-stat-section="" onclick="javascript:SNS.fmShare();" type="button">
                <span>
                 페이스북메신저
                </span>
               </button>
               <button class="band" data-stat-code="share_band" data-stat-section="" onclick="javascript:SNS.band();" type="button">
                <span>
                 밴드
                </span>
               </button>
               <button class="blog" data-stat-code="share_blog" data-stat-section="" onclick="javascript:SNS.blog();" type="button">
                <span>
                 블로그
                </span>
               </button>
               <button class="pin" data-stat-code="share_pin" data-stat-section="" onclick="javascript:SNS.pinShare();" type="button">
                <span>
                 핀터레스트
                </span>
               </button>
              </div>
             </div>
            </div>
            <ul class="link-btn-md">
             <li class="btn_print">
              [linkx]
              
             </li>
             <li class="btn_zoom_in">
              [linkx]
              
             </li>
             <li class="btn_zoom_out">
              [linkx]
              
             </li>
            </ul>
           </div>
           <div class="link-info">
            <ul class="link-site">
            </ul>
           </div>
          </div>
          <div class="article">
           <div class="link-video-zone links-zone video-youtube1">
            <div class="vid-zone" data-stat-code="mplay" data-stat-section="">
             <iframe allowtransparency="true" class="ifm-youtube" height="328" src="https://www.youtube.com/embed/Z7Uc-C_9mUQ" title=" 유튜브 영상" width="588">
             </iframe>
            </div>
            <div class="desc-zone">
             <span class="txt">
             </span>
             [ahref]
             
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <div class="article-img">
            <div class="img-info">
             <strong>
             </strong>
            </div>
           </div>
           <p>
            <<시각장애인 음성정보 지원을 위한 텍스트입니다>>
            <br/>
           </p>
           <p>
            얼룩말은 사람들에게 사랑받는 동물 중 하나입니다. 흰색과 검은색이 어우러진 줄무늬가 얼룩말의 매력인데요. 우리 주변에서도 얼룩말의 독특한 무늬를 본뜬 옷이나 카펫 등을 볼 수 있습니다.
           </p>
           <p>
            얼룩말 무늬에 대한 흥미로운 논쟁도 있었습니다. 검은색과 흰색 중에 어떤 것이 바탕색이냐는 것이었죠. 얼룩말의 *배아를 확인한 결과, 얼룩말의 바탕색은 검은색이었던 것으로 밝혀졌습니다. 후기 배아 단계에서 흰 줄무늬가 형성되는 것이죠.
           </p>
           <div class="banner-0-wrap">
            <div class="ads-article01">
            </div>
           </div>
           <p>
            *한 달 정도 자란 어린 개체
           </p>
           <p>
            하지만 얼룩말 무늬가 왜 있는지에 대한 미스터리는 지난 150년간 해결되지 않았습니다. 무늬가 특별한 기능을 위해 발달했다는 5가지 가설이 진화론자 사이에서 일반적으로 다루어지는데요.
           </p>
           <p>
            *포식자를 혼란스럽게 하려고?
           </p>
           <p>
            *긴 풀 속에 숨으려고?
           </p>
           <p>
            *더운 지방에서 체온 조절?
           </p>
           <p>
            *얼룩말끼리의 친교?
           </p>
           <p>
            *흡혈 곤충으로부터 자기 보호?
           </p>
           <p>
            가장 주목받던 가설이었던 '포식자 혼란' 가설은 근래 힘을 잃고 있습니다. 실제로 얼룩말은 사자의 주된 사냥감인데요, 제 역할을 못 하는 무늬가 계속 유전된다는 것은 진화론에 어긋나죠. 늑대와 호랑이가 사는 아시아의 말에는 무늬가 없는 것도 설명이 어렵습니다.
           </p>
           <p>
            최근에는 얼룩말 무늬가 흡혈 곤충으로부터 자신을 보호하기 위한 것이라는 가설에 힘이 실리고 있습니다. 이를 뒷받침하는 연구결과가 있는데요, 영국 브리스톨대학 연구팀이 말에 다양한 색의 옷을 입히고 흡혈 곤충인 말파리가 얼마나 다가오는지를 관찰했는데, 말파리가 얼룩무늬 옷에 접촉한 수는 다른 옷의 11분의 1 수준이었습니다.
           </p>
           <p>
            *말파리 평균 접촉 횟수(10분 기준)
           </p>
           <p>
            검은 옷 16.1회
           </p>
           <p>
            하얀 옷 16.2회
           </p>
           <p>
            얼룩무늬 옷 1.8회
           </p>
           <p>
            자료/Benefits of zebra stripes: Behaviour of tabanid flies around zebras and horses
           </p>
           <p>
            얼룩무늬가 어떻게 말파리를 막아낼까요?
           </p>
           <p>
            말파리는 먼 거리에서 줄무늬를 알아채지 못합니다. 얼룩말에 접근하면서 보이지 않던 줄무늬가 나타나 놀라 방향을 바꾸는 것이죠. 혹은 줄무늬 때문에 주변 사물이 움직이는 속도를 인식하지 못해 착륙에 어려움을 겪는다고 연구진은 설명합니다.
           </p>
           <p>
            우리도 해충을 피하는데 얼룩말 무늬를 활용할 수 있을 것으로 기대되는데요. 실제로 아프리카와 호주 원주민들은 얼룩말 무늬와 유사한 보디페인팅을 해왔습니다. 영국 왕립학회에 게재된 *한 연구에 따르면, 갈색 피부에 얼룩말과 같은 하얀 줄무늬를 그리니 흡혈 파리의 접근이 10분의 1로 줄었습니다.
           </p>
           <p>
            **흡혈 파리가 들러붙은 횟수(55일)
           </p>
           <p>
            갈색 피부 2천55마리
           </p>
           <p>
            베이지색 피부 405마리
           </p>
           <p>
            갈색 피부에 흰색 줄무늬 205마리
           </p>
           <p>
            *Striped bodypainting protects against horseflies
           </p>
           <p>
            "야외 활동을 즐기는 사람들은 얼룩말 줄무늬를 보고 영감을 얻을 수도 있을 것이다." - 브리스톨대 연구팀
           </p>
           <p>
            아직 무늬 미스터리가 완벽하게 해결된 것은 아닙니다. 하지만 우리가 벌레의 괴롭힘으로부터 벗어날 수 있는 방법을 얼룩말에게서 찾을 수 있을지 기대됩니다.
            <br/>
           </p>
           <p>
            (서울=연합뉴스) 송광호 기자 황영주 이한나 인턴기자(디자인)
           </p>
           <p>
            buff27@yna.co.kr
            <br/>
           </p>
           <p class="adrs">
            <span class="cprgt">
             <저작권자(c) 연합뉴스, 무단 전재-재배포 금지>
            </span>
            <span class="pblsh">
             2019/03/15 07:00 송고
            </span>
           </p>
          </div>
         </div>
         <div class="view-ad-wrap">
          <span class="blind">
           광고
          </span>
          <ul id="ad2235_1548979385783">
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text01" scrolling="no" src="https://www.kodcad.kr/ad/43/d27b94fe14563f6097725a5dce7e632c.html" title="엠엔에이치마케팅 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text04" scrolling="no" src="https://adv.imadrep.co.kr/3588_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="24" name="ifm-ad-mnh-text05" scrolling="no" src="https://adv.imadrep.co.kr/3554_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4136_01.html" title="아이엠애드 광고 1" width="100%">
            </iframe>
           </li>
           <li>
            <iframe allowtransparency="true" frameborder="0" height="28" scrolling="no" src="https://adv.imadrep.co.kr/4137_01.html" title="아이엠애드 광고 2" width="100%">
            </iframe>
           </li>
          </ul>
         </div>
         <div class="ad-ifm01">
          <iframe frameborder="0" height="180" name="ifm-ad-joyninfo01" scrolling="no" src="//m.joyninfo.com/yna/yna_w1.asp" title="조인&amp;amp;인포 텍스트 광고" width="586">
          </iframe>
         </div>
         <div class="comment-wrap">
          <span class="blind">
           댓글쓰기
          </span>
          <div data-id="yonhapnews" data-uid="NTYvNzAxLzYz" id="lv-container">
          </div>
         </div>
         <div class="banner-box09">
          <div class="con">
           <div id="div-gpt-ad-1564047709377-0" style="width: 300px; height: 250px;">
           </div>
           <div id="div-gpt-ad-1564047859628-0" style="width: 300px; height: 250px;">
           </div>
          </div>
         </div>
         <div class="floating-banner01">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
        <div class="contents-box view-wrap03">
         <iframe frameborder="0" height="168" name="ifm-ad-joyninfo02" scrolling="no" src="//m.joyninfo.com/yna/yna_w2.asp" title="조인&amp;amp인포 썸네일형 광고" width="586">
         </iframe>
         <div id="_popIn_recommend">
         </div>
        </div>
        <div class="contents-box view-wrap02">
         <div class="list-style05">
          <h6 class="tit-category" data-stat-code="box_view_visual_tit" data-stat-section="">
           비주얼뉴스
          </h6>
          <ul class="photomovie2">
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [ahref]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [ahref]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [linkx]
             
            </div>
           </li>
           <li class="sector">
            <span class="ico">
            </span>
            <div class="box-flex">
             [ahref]
             
            </div>
           </li>
          </ul>
         </div>
         <div class="floating-banner02">
          <span class="blind">
           배너
          </span>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="contents02 scroll-article-zone02">
      <div class="scroll-start02">
       <div class="scroll-in02">
        <div class="contents-box aside-top-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-topright01">
          </li>
         </ul>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe allowtransparency="yes" border="0" frameborder="no" height="26" id="popin_iframe_ad" marginheight="0" marginwidth="0" scrolling="no" src="https://api.popin.cc/iframe/code.html?id=yna_right_text&amp;w=290px&amp;h=26px&amp;containerId=_popIn_recommend_text_iframe&amp;media=www.yna.co.kr_text" width="290">
         </iframe>
         <iframe allowtransparency="true" frameborder="0" height="235" marginheight="0" marginwidth="0" name="ifm-ad-imad-text01" scrolling="no" src="//adv.imadrep.co.kr/2161_01.html" title="아이엠애드 광고(텍스트8)" width="290">
         </iframe>
        </div>
        <iframe class="ifm-hot-news" frameborder="0" height="370" name="ifm-hot-news" scrolling="no" src="//www.yna.co.kr/program/hot-news" title="핫뉴스 프레임" width="340">
        </iframe>
        <iframe class="ifm-ad-bithumb" frameborder="0" height="253" name="ifm-ad-bithumb" scrolling="no" src="/program/bithumb" title="빗썸배너광고" width="340">
        </iframe>
        <div class="contents-box aside-banner">
         <span class="blind">
          광고
         </span>
         <ul>
          <li class="ads-right01">
          </li>
          <li class="ads-right02">
           [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]<li>[linkx]</li><li>[ahref]</li>
          </li>
          <li class="ads-right03">
          </li>
          <li class="ads-right04">
          </li>
          <li class="ads-right05">
          </li>
          <li class="ads-right06">
          </li>
          <li class="ads-right07">
          </li>
          <li class="ads-right08">
          </li>
          <li class="ads-right09">
          </li>
         </ul>
        </div>
        <div class="contents-box list-style01 popularnews-zone">
         <h5 class="tit-type01" data-stat-code="box_popularnews_tit" data-stat-section="">
          [linkx]
          
         </h5>
         <h5 class="tit-type03" data-stat-code="box_popularnews_tit" data-stat-section="">
          [linkx]
          
         </h5>
         <div class="tab-wrap01 tab-setting" data-stat-code="box_popularnews_tab" data-stat-section="">
          <ul>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
         <div class="list-wrap" id="popularTotal">
          <h6 class="hidden-obj">
           종합
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularPolitics">
          <h6 class="hidden-obj">
           정치
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEconomy">
          <h6 class="hidden-obj">
           산업/경제
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSociety">
          <h6 class="hidden-obj">
           사회
          </h6>
          <ul>
           <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li><li>[linkx]</li>
          </ul>
         </div>
         <div class="list-wrap" id="popularLocal">
          <h6 class="hidden-obj">
           전국
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularSports">
          <h6 class="hidden-obj">
           스포츠
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularEntertainment">
          <h6 class="hidden-obj">
           연예ㆍ문화
          </h6>
          <ul>
          </ul>
         </div>
         <div class="list-wrap" id="popularWorld">
          <h6 class="hidden-obj">
           세계
          </h6>
          <ul>
          </ul>
         </div>
         [linkx]
         
        </div>
        <div class="contents-box ad-wrap02">
         <iframe allowtransparency="true" frameborder="0" height="96" name="ifm-ad-imad-text02" scrolling="no" src="//adv.imadrep.co.kr/2162_01.html" title="아이엠애드 광고(텍스트4)" width="290">
         </iframe>
        </div>
        <div class="contents-box ad-wrap01">
        </div>
        <iframe class="iframe-todaynews" frameborder="0" name="ifm-todaynews" scrolling="no" src="//www.yna.co.kr/program/major-news" title="오늘의 주요 뉴스">
        </iframe>
        <div class="contents-box list-style01 yspecial-wrap">
         <div class="iframe-yspecial" name="ifm-yspecial">
          <div class="y-special-zone">
           <h5 class="tit-category">
           </h5>
           <h5 class="tit-type01" data-stat-code="y_special_tit" data-stat-section="">
            [ahref]
            
           </h5>
           <div class="bnr-y-special">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe border="0" frameborder="0" height="156" leftmargin="0" name="ifm-ad-sw-text02" scrolling="no" src="//ad.sunnyworks.co.kr/data/SW125152.html" title="써니웍스 광고(텍스트 6줄)" topmargin="0" width="290">
         </iframe>
        </div>
        <div class="contents-box goolge-banner">
         <span class="blind">
          광고
         </span>
         <div id="ad_visual" title="인라이플 광고">
         </div>
        </div>
        <div class="contents-box ad-wrap01">
         <span class="ad-tag">
         </span>
         <iframe frameborder="0" height="192" name="ifm-ad-imad-text03" scrolling="no" src="//adv.imadrep.co.kr/2837_01.html" title="아이엠애드 광고(텍스트7)" width="100%">
         </iframe>
        </div>
        <div class="contents-box list-style02 journey-zone">
         <h5 class="tit-type03">
          <span class="arr">
           여행/축제
          </span>
         </h5>
         <ul class="area">
          <li>
           <div class="box-flex">
            [linkx]
            
           </div>
          </li>
          <li>
           <div class="box-flex">
            [linkx]
            
           </div>
          </li>
         </ul>
         [linkx]
         
        </div>
        <div class="contents-box list-style02 banner-box06">
         <span class="ad-tag">
         </span>
         <div class="con">
          <iframe allowtransparency="false" frameborder="0" height="224" marginheight="0" marginwidth="0" name="ifm-ad-imad-text04" scrolling="no" src="//adv.imadrep.co.kr/1247_01.html" title="아이엠애드 광고" width="290">
          </iframe>
         </div>
        </div>
        <div class="hng-zone" id="hngZone">
         <h5 class="tit02">
          [ahref]
          
         </h5>
         <ul class="list">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         [linkx]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <span class="btn-top" id="btnScrollTop">
    <button type="button">
     맨위로
    </button>
   </span>
   <div id="footer">
    <div class="footer-wrap01 service-wrap">
     <span class="blind">
      전체메뉴
     </span>
     <div class="footer-menu01">
      <div class="menu-zone01">
       <div class="link-con">
        <dl class="list01">
         <dt class="tit">
          [ahref]
          
         </dt>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
           [pkeyx]<li>[area1][mkey1]</li>[area1][keywordx][ahref]<li>[ahref]</li>
          
         </dd>
         <dd>
          <a href="/economy/index">
           산업/경제
          </a>
         </dd>
         <dd>
          <a href="/stock/index">
           금융/증권
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <a href="/entertainment/index">
           연예
          </a>
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          [ahref]
          
         </dd>
         <dd>
          [linkx]
          
         </dd>
         <dd>
          <a href="/travel-festival/index">
           여행/축제
          </a>
         </dd>
         <dd>
          [ahref]
          
         </dd>
        </dl>
       </div>
      </div>
      <div class="menu-zone02">
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <a href="/video/index">
            영상
           </a>
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit space01">
           이슈돋보기<li>[pkeyx]</li>[ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
          </dt>
          <dd class="br">
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
         <div class="list01">
          <p class="tit">
           [area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
          </p>
         </div>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           테마별뉴스
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [ahref][linkx][linkx][linkx][area1][mkey1][linkx][ahref][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][area1][mkey1][ahref][pkeyx][area1][mkey1][pkeyx][ahref][area1][mkey1][linkx][area1][mkey1][linkx][ahref]
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][ahref][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][pkeyx][pkeyx][ahref][ahref][pkeyx]
         </dl>
         <dl class="list01">
          <dt class="hidden-obj">
           비주얼뉴스
          </dt>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           외국어
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
       </div>
       <div class="box">
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [area1][keywordx][linkx][linkx][pkeyx][pkeyx][area1][keywordx][area1][keywordx][pkeyx][linkx][pkeyx][area1][keywordx][area1][mkey1][ahref][pkeyx][area1][mkey1]
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           출판물
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           [ahref]
           
          </dt>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           <li>[linkx]</li>[pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           <h2>
            <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]<li>[pkeyx]</li>[area1][mkey1]
           </h2>
           [linkx]
            [area1][mkey1][area1][keywordx][linkx]
           
          </dt>
          <dd>
           <a href="/" rel="nofollow" target="_blank" title="새창">
            사진구매(헬로포토)
           </a>
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list01">
          <dt class="tit">
           관련사이트
          </dt>
          <dd>
           [linkx]
           
          </dd>
          <dd>
           [ahref]
           
          </dd>
          <dd>
           [linkx]
           
          </dd>
         </dl>
        </div>
        <div class="link-con">
         <dl class="list02">
          <dt class="tit">
           유튜브
          </dt>
          <dd class="yna">
           [linkx]
           
          </dd>
          <dd class="tong">
           [ahref]
           
          </dd>
          <dd class="kn">
           [ahref]
           
          </dd>
          <dd class="yttv">
           [ahref]
           
          </dd>
         </dl>
        </div>
       </div>
      </div>
     </div>
     <div class="footer-menu02">
      [ahref]
      
     </div>
    </div>
    <ul class="footer-link" data-stat-code="footer" data-stat-section="">
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
       <li>[pkeyx]</li><li>[area1][keywordx]</li>[linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/policy/complaint">
       고충처리
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
    <div class="addr-info">
     <address>
      연합뉴스 서울시 종로구 율곡로2길 25 | 등록번호 문화, 나00009 | 등록일자 1980.12.29 | 발행일자 1980.12.29 | Tel. 02-398-3114
     </address>
    </div>
    <ul class="copy">
     <li>
      <strong>
       (C) Yonhapnews
      </strong>
     </li>
     <li class="copy-in">
      [대표이사] 조성부
     </li>
     <li class="copy-in">
      [편집인] 김경석
     </li>
    </ul>
   </div>
  </div>
  <div class="article-ad-box">
   <div id="div-gpt-ad-1564047529956-0" style="width: 300px; height: 250px;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0054
  </b>
 </body>
</html>|<---