--->|<!DOCTYPE html>
<html class="no-js" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="title"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
   <li>[area1][mkey1]</li><li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[pkeyx]
  </meta>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="186951328047493" property="fb:pages"/>
  <meta content="3286EE554B6F672A6F2E608C02343C0E" name="msvalidate.01"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="apple-mobile-web-app-title"/>
  <meta content="black" name="apple-mobile-web-app-status-bar-style"/>
  <meta content="app-id=632618796, app-argument=//4918415.ltr" name="apple-itunes-app"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="article" property="og:type"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="https://www.facebook.com/voakorea" property="article:publisher"/>
  <meta content="https://gdb.voanews.com/05A209FD-903F-42DC-BFAA-E52E203976CB_cx0_cy3_cw0_w1200_s.jpg" property="og:image"/>
  <meta content="1200" property="og:image:width"/>
  <meta content="675" property="og:image:height"/>
  <meta content="540339945982256" property="fb:app_id"/>
  <meta content="박영서" name="Author"/>
  <meta content="김현숙" name="Author"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="@VOA_Korean" name="twitter:site"/>
  <meta content="https://gdb.voanews.com/05A209FD-903F-42DC-BFAA-E52E203976CB_cx0_cy3_cw0_w1200_s.jpg" name="twitter:image"/>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="news_keywords"/>
  <meta content="#ffffff" name="msapplication-TileColor"/>
  <meta content="/Content/responsive/VOA/img/webApp/ico-144x144.png" name="msapplication-TileImage"/>
 </head>
 <body class="nav-no-loaded pg-article print-lay-article">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-N8MP7P" style="display:none;visibility:hidden" width="0">
    [pkeyx][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][pkeyx][pkeyx][ahref][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][pkeyx][area1][keywordx][pkeyx]
   </iframe>
  </noscript>
  <noscript>
  </noscript>
  <section>
   <div class="sr-only">
    <h2>
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h2>
    <ul>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
    </ul>
   </div>
  </section>
  <div dir="ltr">
   <div id="page">
    <aside>
     <div class="c-lightbox overlay-modal">
      <div class="c-lightbox__intro">
       <h2 class="c-lightbox__intro-title">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h2>
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__intro-next" title="다음">
        <span class="ico ico--rounded ico-chevron-forward">
        </span>
        <span class="sr-only">
         다음
        </span>
       </button>
      </div>
      <div class="c-lightbox__nav">
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__btn--close" title="Close">
        <span class="ico ico--rounded ico-close">
        </span>
        <span class="sr-only">
         Close
        </span>
       </button>
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__btn--prev" title="이전">
        <span class="ico ico--rounded ico-chevron-backward">
        </span>
        <span class="sr-only">
         이전
        </span>
       </button>
       <button class="btn btn--rounded c-lightbox__btn c-lightbox__btn--next" title="다음">
        <span class="ico ico--rounded ico-chevron-forward">
        </span>
        <span class="sr-only">
         다음
        </span>
       </button>
      </div>
      <div class="c-lightbox__content-wrap">
       <figure class="c-lightbox__content">
        <span class="c-spinner c-spinner--lightbox">
        </span>
        <div class="c-lightbox__img">
         <div class="thumb">
         </div>
        </div>
        <figcaption>
         <div class="c-lightbox__info c-lightbox__info--foot">
          <span class="c-lightbox__counter">
          </span>
          <span class="caption caption--inverted">
          </span>
         </div>
        </figcaption>
       </figure>
      </div>
     </div>
     <div class="print-dialogue">
      <div class="container">
       [linkx]<li>[area1][mkey1]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
      </div>
     </div>
    </aside>
    <div class="hdr">
     <div class="hdr-nav-frag">
      <div class="container">
       [linkx]
       
       <ul class="compact-actions">
        <li class="action action-entity-sites">
         [linkx]
         
        </li>
        <li class="action action-srch">
         [ahref]
         
        </li>
        <li class="action action-menu">
         [ahref]
         
        </li>
       </ul>
       <div class="actions">
        <div class="actions__safe-wrap">
         <div class="action action-entity-sites">
          [linkx]
          
         </div>
         <div class="action action--editions">
          [ahref]
          
         </div>
         <div class="action action-socials socials">
          <ul class="follow">
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="action pnl-srch-top collapsed">
         <form action="/s" id="form-headerSearch" method="get" role="search">
          <div class="srch-elem">
           <ul class="form__list">
            <li class="form__group m-tb-0">
             <span class="input-wrap">
              <li>[pkeyx]</li><li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]<li>[linkx]</li>
             </span>
             <button class="btn btn-srch analyticstag-event" onclick="FireAnalyticsTagEventOnSearch('search', $dom.get('txtHeaderSearch')[0].value) " title="검색" type="submit">
              <span class="ico ico-search">
              </span>
              <span class="text">
               검색
              </span>
             </button>
            </li>
           </ul>
          </div>
         </form>
        </div>
       </div>
      </div>
     </div>
     <div class="sticky-nav-wrap container">
      <div class="sticked-nav-actions">
       [ahref]
       
      </div>
     </div>
     <div class="nav-hdr-outer-container">
      <div class="container" id="nav-hdr-container">
       <div class="navigation collapsed" id="navigation">
        <div class="media">
         <ul class="items">
          <li class="collapsible item collapsed has-box" id="menu-item-listen">
           [linkx]
           
           <div class="inner">
           </div>
          </li>
         </ul>
        </div>
        <div class="menu">
         <ul class="items">
          <li class="collapsible item">
           <span class="handler">
            한반도
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="collapsible item">
           <span class="handler">
            세계
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="collapsible item">
           <span class="handler">
            라디오
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="collapsible item">
           <span class="handler">
            TV
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              <a class="handler" href="/p/6740.html">
               최신 영상
              </a>
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="collapsible item">
           <span class="handler">
            영어교실
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
             <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx]<li>[ahref]</li>
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="last-menu-item item">
           [ahref]
           
          </li>
          <li class="service item collapsible collapsed show-more">
           <span class="handler" id="service-handler">
            <span class="more">
             더 보기
            </span>
            <span class="ico ico-menu">
            </span>
           </span>
           <div class="inner">
            <ul class="stored-items subitems">
            </ul>
            <ul class="options subitems">
             <li class="edition subitem">
              [pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][mkey1][area1][mkey1][ahref][area1][keywordx][area1][keywordx][pkeyx][area1][keywordx][pkeyx][area1][mkey1][linkx][pkeyx][area1][mkey1][pkeyx][ahref][area1][mkey1][area1][mkey1][pkeyx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
             </li>
            </ul>
           </div>
          </li>
         </ul>
        </div>
        <div class="menu-box media-nav" id="menu-item-listen-box">
         <div class="container">
          <ul class="items">
           <li class="item" id="tube-52">
            <div class="inner">
             <ul>
              <li class="media-block-wrap hlight">
               [linkx]
               
               <h3 class="section-head">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h3>
               <div>
                <ul>
                 <li>
                  <div class="media-block horizontal has-img size-3">
                   <li>[area1][mkey1]</li><li>[ahref]</li>[linkx]<li>[area1][keywordx]</li>[ahref]
                  </div>
                 </li>
                </ul>
               </div>
              </li>
              <li class="media-block-wrap upcoming indent-time">
               <h3 class="section-head">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h3>
               <div class="">
                <ul class="">
                 <li>
                  <div class="media-block horizontal with-date date--time size-4">
                   <div class="content">
                    <span class="date date--time">
                     20:00 - 20:59
                    </span>
                    <h4 class="media-block__title">
                     <span class="ico ico-audio">
                     </span>
                     <span class="title">
                      VOA 뉴스 투데이 1부
                     </span>
                    </h4>
                   </div>
                  </div>
                 </li>
                 <li>
                  <div class="media-block horizontal with-date date--time size-4">
                   <div class="content">
                    <span class="date date--time">
                     21:00 - 21:59
                    </span>
                    <h4 class="media-block__title">
                     <span class="ico ico-audio">
                     </span>
                     <span class="title">
                      VOA 뉴스 투데이 2부
                     </span>
                    </h4>
                   </div>
                  </div>
                 </li>
                 <li>
                  <div class="media-block horizontal with-date date--time size-4">
                   <div class="content">
                    <span class="date date--time">
                     22:00 - 22:59
                    </span>
                    <h4 class="media-block__title">
                     <span class="ico ico-audio">
                     </span>
                     <span class="title">
                      생방송 여기는 워싱턴입니다
                     </span>
                    </h4>
                   </div>
                  </div>
                 </li>
                </ul>
               </div>
              </li>
             </ul>
            </div>
           </li>
           <li class="media-block-wrap custom-links">
            <h3 class="section-head">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subitems">
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="sticked-nav-popup popup-srch" data-trigger="btn-open-srch">
      <div class="container">
       <div class="stick-srch-form">
        <form action="/s" id="form-stickyNavSearch" method="get" role="search">
         <div class="srch-elem">
          <ul class="form__list">
           <li class="form__group m-tb-0">
            <span class="input-wrap">
             <label class="form__label sr-only" for="txtStickyNavSearch">
              검색
             </label>
            </span>
            <button class="btn btn-srch analyticstag-event" onclick="FireAnalyticsTagEventOnSearch('search', $dom.get('txtStickyNavSearch')[0].value) " title="검색" type="submit">
             <span class="ico ico-search">
             </span>
             <span class="text">
              검색
             </span>
            </button>
           </li>
          </ul>
         </div>
        </form>
        <button class="btn btn-close">
         <span class="ico ico-close">
         </span>
        </button>
       </div>
      </div>
     </div>
     <div class="sticked-nav-popup popup-share" data-trigger="btn-open-sharing-more">
      <div class="container">
       [linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][ahref][area1][mkey1][linkx][area1][mkey1][linkx][area1][keywordx][linkx][pkeyx][ahref][ahref][area1][mkey1][area1][keywordx][linkx][pkeyx]
      </div>
     </div>
    </div>
    <div class="c-hlights c-hlights--breaking c-hlights--no-item js-hidden" data-hlight-display="mobile,desktop">
     <div class="c-hlights__wrap container p-0">
      <div class="c-hlights__nav">
       [ahref]
       
       [ahref]
       
      </div>
      <span class="c-hlights__label">
       <span class="">
        속보
       </span>
       <span class="switcher-trigger">
        <label class="switcher-trigger__label switcher-trigger__label--more p-b-0" for="more-less-1" title="본문 보기">
         <span class="ico ico-chevron-down">
         </span>
        </label>
        <label class="switcher-trigger__label switcher-trigger__label--less p-b-0" for="more-less-1" title="본문 닫기">
         <span class="ico ico-chevron-up">
         </span>
        </label>
       </span>
      </span>
      <ul class="c-hlights__items switcher-target">
      </ul>
     </div>
    </div>
    <div class="c-hlights c-hlights--live hidden-sm hidden-md hidden-lg c-hlights--no-item js-hidden" data-hlight-display="mobile">
     <div class="c-hlights__wrap container p-0">
      <div class="c-hlights__nav">
       [linkx]
       
       [ahref]
       
      </div>
      <span class="c-hlights__label">
       <span class="badge badge--live">
        Live
       </span>
       <span class="switcher-trigger">
        <label class="switcher-trigger__label switcher-trigger__label--more p-b-0" for="more-less-2" title="본문 보기">
         <span class="ico ico-chevron-down">
         </span>
        </label>
        <label class="switcher-trigger__label switcher-trigger__label--less p-b-0" for="more-less-2" title="본문 닫기">
         <span class="ico ico-chevron-up">
         </span>
        </label>
       </span>
      </span>
      <ul class="c-hlights__items switcher-target">
      </ul>
     </div>
    </div>
    <div id="content">
     <div class="container">
      <div class="hdr-container">
       <div class="row">
        <div class="col-category col-xs-12 col-md-2 pull-left">
        </div>
        <div class="col-title col-xs-12 col-md-10 pull-right">
         <h1 class="pg-title">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h1>
        </div>
        <div class="col-publishing-details col-xs-12 col-sm-12 col-md-2 pull-left">
         <div class="publishing-details">
          <div class="published">
           <span class="date">
            <time datetime="2019-05-16T03:01:48+09:00">
             2019.5.16
            </time>
           </span>
          </div>
          <div class="links">
           <ul class="links__list links__list--column">
            <li class="links__item">
             [ahref]
             
            </li>
            <li class="links__item">
             [linkx]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="col-lg-12 separator">
         <div class="separator">
          <hr class="title-line"/>
         </div>
        </div>
        <div class="col-multimedia col-xs-12 col-md-10 pull-right">
         <div class="cover-media">
          <figure class="media-image js-media-expand">
           <div class="img-wrap">
            <div class="thumb thumb16_9">
            </div>
            <span class="ico ico-fullscreen ico--media-expand ico--rounded">
            </span>
           </div>
           <figcaption>
            <span class="caption" itemprop="caption">
             도널드 트럼프 미국 대통령과 이란 최고지도자 아야톨라 알리 하메네이.
            </span>
           </figcaption>
          </figure>
         </div>
        </div>
        <div class="col-xs-12 col-md-2 pull-left article-share">
         <aside class="share flex-column js-share--apply-sticky js-share--expandable js-share--horizontal">
          <span class="label label--share">
           공유
          </span>
          <ul class="share__list">
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_facebook' })">
            [linkx]
            
            <span class="share__count share__count--facebook share__count--empty">
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_twitter' })">
            [linkx]
            
            <span class="share__count shares__twitter share__count--empty">
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp' })">
            <span class="visible-xs-inline-block visible-sm-inline-block">
             [linkx]
             
             <span class="share__count share__count--whatsapp share__count--empty">
             </span>
            </span>
           </li>
           <li class="share__item">
            <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]<li>[linkx]</li>[area1][mkey1]
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp_desktop' })">
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>[pkeyx]
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line' })">
            <span class="visible-xs-inline-block visible-sm-inline-block">
             [linkx]
             
            </span>
           </li>
           <li class="share__item" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line_desktop' })">
            <span class="visible-md-inline-block visible-lg-inline-block">
             [linkx]
             
            </span>
           </li>
           <li class="share__item share__item--sharing-more">
            [linkx]
            
           </li>
          </ul>
         </aside>
         <div class="sticky-share-container" style="display:none">
          <div class="container">
           [ahref]
           
           <div class="pg-title">
            미국·이란 "전쟁 원치 않아"...폼페오·푸틴, 미-러 관계 개선 의지 확인
           </div>
           <div class="sticked-nav-actions">
            <aside class="share share--sticky js-share--expandable">
             <span class="label label--share">
              share
             </span>
             <ul class="share__list">
              <li class="share__item share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_facebook' })">
               [ahref]
               
              </li>
              <li class="share__item share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_twitter' })">
               [ahref]
               
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp' })">
               <span class="visible-xs-inline-block visible-sm-inline-block">
                [linkx]
                
               </span>
              </li>
              <li class="share__item share__item--additional share__item--horizontal">
               [linkx]
               
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_whatsapp_desktop' })">
               <span class="visible-md-inline-block visible-lg-inline-block">
                <a class="btn btn--rounded btn-whatsapp" href="/send?text=https%3a%2f%2fwww.voakorea.com%2fa%2f4918415.html" target="_blank" title="왓츠앱으로 공유하기">
                 <span class="ico ico--rounded ico-whatsapp ico--s">
                 </span>
                </a>
               </span>
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line' })">
               <span class="visible-xs-inline-block visible-sm-inline-block">
                [linkx]
                
               </span>
              </li>
              <li class="share__item share__item--additional share__item--horizontal" onclick="FireAnalyticsTagEvent({ on_page_event: 'share_on_line_desktop' })">
               <span class="visible-md-inline-block visible-lg-inline-block">
                [ahref]
                
               </span>
              </li>
              <li class="share__item share__item--sharing-more">
               [linkx]
               
              </li>
             </ul>
            </aside>
           </div>
          </div>
         </div>
         <div class="links">
          <p class="link-print visible-md visible-lg">
           <button class="btn btn--link btn-print" onclick="if (typeof FireAnalyticsTagEvent === 'function') {FireAnalyticsTagEvent({ on_page_event: 'print_story' });}return false" title="(CTRL+P)">
            <span class="ico ico-print">
            </span>
            <span class="btn__text">
             기사 본문 인쇄
            </span>
           </button>
          </p>
         </div>
        </div>
       </div>
      </div>
      <div class="body-container">
       <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-10 col-lg-10 pull-right">
         <li>[linkx]</li>[area1][mkey1][area1][mkey1]
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="back-to-top-nav disabled visible-xs">
     <div class="container">
      <div class="row">
       <div class="col-xs-12">
        [ahref]
        
       </div>
      </div>
     </div>
    </div>
    <footer role="contentinfo">
     <div class="foot" id="foot">
      <div class="container">
       <div class="foot-nav collapsed" id="foot-nav">
        <div class="menu">
         <ul class="items">
          <li class="socials block-socials">
           <span class="handler" id="socials-handler">
            Follow Us
           </span>
           <div class="inner">
            <ul class="subitems follow">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="block-primary collapsed collapsible item">
           <span class="handler">
            앱/뉴스레터
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
            </ul>
           </div>
          </li>
          <li class="block-primary collapsed collapsible item">
           <span class="handler">
            방송국 소개
            <span class="ico ico-chevron-up" title="close tab">
            </span>
            <span class="ico ico-chevron-down" title="open tab">
            </span>
            <span class="ico ico-plus" title="add">
            </span>
            <span class="ico ico-minus" title="remove">
            </span>
           </span>
           <div class="inner">
            <ul class="subitems">
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [linkx]
               [linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
              
             </li>
             <li class="subitem">
              [linkx]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
             <li class="subitem">
              [ahref]
              
             </li>
            </ul>
           </div>
          </li>
         </ul>
        </div>
       </div>
       <div class="foot__item foot__item--copyrights">
        <p class="copyright">
         VOA 한국어 © 2019
        </p>
       </div>
      </div>
     </div>
    </footer>
   </div>
  </div>
  <div class="responsive-indicator">
   <div class="visible-xs-block">
    XS
   </div>
   <div class="visible-sm-block">
    SM
   </div>
   <div class="visible-md-block">
    MD
   </div>
   <div class="visible-lg-block">
    LG
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0065
  </b>
 </body>
</html>|<---