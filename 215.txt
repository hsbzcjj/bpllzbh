--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html prefix="og: http://ogp.me/ns#" xmlns="http://www.w3.org/1999/xhtml">
 <head href="//money.cnn.com/2017/04/20/technology/future/sally-salad-robot/index.html" itemid="" itemscope="" itemtype="//schema.org/SpeakableSpecification" rel="article">
  <meta content="width=1140" name="viewport">
   <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref][ahref][linkx]<li>[area1][mkey1]</li>
  </meta>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="2017-04-20 10:02:38" name="date">
   <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="title"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
   <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="news_keywords"/>
   <meta content="Heather Kelly" name="author"/>
   <meta content="technology" name="section"/>
   <meta content="future" name="subsection"/>
   <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
   <meta content="article" property="og:type"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
   <meta content="https://i2.cdn.turner.com/money/dam/assets/170420005625-sally-the-salad-robot-780x439.jpg" property="og:image"/>
   <meta content="780" property="og:image:width"/>
   <meta content="439" property="og:image:height"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
   <meta content="521848191196480" property="fb:app_id"/>
   <meta content="summary_large_image" name="twitter:card"/>
   <meta content="@CNNMoney" name="twitter:site"/>
   <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
   <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
   <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
   <meta content="https://i2.cdn.turner.com/money/dam/assets/170420005625-sally-the-salad-robot-540x304.jpg" name="twitter:image"/>
   <meta content="2017-04-20T10:02:38" name="DC.date.issued">
    <meta content=".speakable" itemprop="cssSelector">
     <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
      <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="cnn-story">
  <div id="ad_bnr_atf_02" style="text-align:center!important">
  </div>
  <div class="navAdBannerWrapper" id="js-sticky-NavAdAnchor">
   <div class="navAdBanner" id="js-sticky-NavAd">
    <div id="adBanner">
     <div id="ad_bnr_atf_01">
     </div>
    </div>
    <div class="techFutureNav moneyTechNav">
     <div class="js-sticky-header-anchor">
      <header class="main-banner cnn-business js-sticky-header moneyTechNav">
       <div class="container">
        <div>
         [area1][keywordx][ahref][area1][keywordx]<li>[pkeyx]</li>[linkx]
        </div>
        <div class="main-banner--controls">
         <div class="main-banner--search">
          <div class="js-toggle-search search-icon">
          </div>
          <form action="/search/" class="search__form active" id="search-form" method="get" name="headerSearch">
          </form>
         </div>
         <div class="main-banner--menu js-toggle-subnav">
          <div class="menu-icon">
          </div>
         </div>
        </div>
       </div>
       <div class="subnav js-header-subnav">
        <div class="container">
         <div class="subnav-business--subsections">
          <ul>
           <li class="section-column" style="width:15%;">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
             <li>
              Premarkets[ahref][ahref][ahref]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a href="/data/fear-and-greed">
               Fear &amp; Greed
              </a>
             </li>
             <li>
              <a href="/data/world_markets/americas">
               World Markets
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/business/economy">
               Economy
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
             <li>
              <a class="js-link" href="/specials/tech/innovate">
               Innovate
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a class="js-link" href="/specials/tech/upstarts">
               Upstarts
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="js-link" href="/specials/tech/innovative-cities">
               Innovative Cities
              </a>
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
             <li>
              <a class="js-link" href="/shows/reliable-sources">
               Reliable Sources
              </a>
             </li>
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              <a class="js-link" href="/business/homes">
               Homes
              </a>
             </li>
             <li>
              <a class="js-link" href="/specials/success/wealth-coach">
               Wealth Coach
              </a>
             </li>
             <li>
              [linkx]
               [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][area1][mkey1][linkx][linkx][area1][keywordx][pkeyx][area1][mkey1][area1][keywordx][area1][keywordx][area1][mkey1][pkeyx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][linkx][area1][keywordx][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx]
              
             </li>
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <ul class="subsection-column">
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>[area1][mkey1][linkx][area1][mkey1][area1][keywordx][pkeyx][linkx][linkx][area1][keywordx][area1][keywordx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
             <li>
              <a class="js-link" href="h">
               Switzerland
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </li>
           <li class="section-column">
            <h3 class="column-header">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <ul class="subsection-column">
             <li>
              [linkx]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="js-link" href="/accessibility">
               Accessibility and CC
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </div>
         <div class="subnav-cnn--sections">
          <ul>
           <li class="section-column">
            <h4 class="column-header">
             <a class="js-link" href="/us">
              U.S.
             </a>
            </h4>
           </li>
           <li class="section-column">
            [ahref]<li>[area1][keywordx]</li>[pkeyx]
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [ahref]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             Business[pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref]
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [linkx]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [ahref]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [linkx]
             
            </h4>
           </li>
          </ul>
          <ul>
           <li class="section-column">
            <h4 class="column-header">
             [ahref]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [ahref]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             <a class="js-link" href="/travel">
              Travel
             </a>
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [ahref]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             <a class="js-link" href="/video">
              Video
             </a>
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             [linkx]
             
            </h4>
           </li>
           <li class="section-column">
            <h4 class="column-header">
             <a class="js-link" href="/vr">
              VR
             </a>
            </h4>
           </li>
          </ul>
          <ul>
           <li class="section-column">
            <h4 class="column-header">
             <a class="js-link" href="/more">
              More...
             </a>
            </h4>
           </li>
           <li class="section-column">
           </li>
           <li class="section-column">
           </li>
          </ul>
         </div>
         <div class="subnav-business--social desktop">
          <span>
           Follow CNN Business
          </span>
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a aria-label="Instagram" data-icon="instagram" href="/cnnbusiness/" name="Instagram" rel="noopener" target="_blank noreferrer">
             <div class="cnn-icon icon--social-instagram">
             </div>
            </a>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </header>
     </div>
    </div>
   </div>
  </div>
  <main class="container js-social-anchor-start" role="main">
   <header>
    <div class="row">
     <div class="column">
      <div class="breadcrumb">
       [ahref]
       
      </div>
      <h1 class="article-title speakable">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h1>
      <div id="ad_ns_atf_02">
      </div>
     </div>
    </div>
    <div class="row">
     <div class="column share-byline-timestamp">
      <span class="byline-timestamp">
       <span id="js-byline-icon">
       </span>
       <span class="cnnbyline">
        <span class="byline">
         by Heather Kelly
        </span>
        [linkx]
        
       </span>
       <span class="cnnDateStamp">
        April 20, 2017: 10:02 AM ET
       </span>
      </span>
      <div class="share-tools share-tools--main" id="js-sharebar-main">
      </div>
     </div>
    </div>
   </header>
   <div class="row two-columns-fixed-rr">
    <section class="column">
     <article class="module">
      <div id="storycontent">
       <div id="storytext">
        <div class="ie--storytop" id="js-ie-storytop">
         <div class="cnnplayer" id="cnnplayer0">
          <div class="cnnVidplayer">
           <div class="summaryImg" href="/video/technology/2017/04/19/salad-robot-chowbotics.cnnmoney" id="vid0">
           </div>
          </div>
          <div class="cnnVidFooter">
           <div class="js-vid-hed-vid0 cnnHeadline">
            Is this salad robot worth $30K?
           </div>
           <div class="js-vid-countdown-vid0 countdown">
           </div>
          </div>
         </div>
        </div>
        <div class="share-tools share-tools--floater" id="js-sharebar-floater">
        </div>
        <h2 class="speakable">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h2>
        <p class="speakable">
         But Sally the Salad Robot could be the latest step in automating some of the more repetitive parts of food preparation. Its creators hope food robots can help with one of Silicon Valley's biggest restaurant problems: a shortage of kitchen workers.
        </p>
        <div id="ie_column">
        </div>
        <p class="speakable">
         Sally is the first product from
         <a href="/" target="_blank">
          Chowbotics
         </a>
         , a Redwood City startup developing robots for the food-service industry. CEO and Founder Deepak Sekar spent two years creating Sally with help from
         <span>
          Apple
         </span>
         <span>
          (
          <span class="inlink_chart">
           [linkx]
           
          </span>
          )
         </span>
         Fellow Rich Page.
        </p>
        <p>
         "I've always thought cooking was 20% creative work and 80% formulaic work like chopping," said Sekar.
        </p>
        <p>
         He also worked with ex-
         <span>
          Google
         </span>
         <span>
          (
          <span class="inlink_chart">
           [ahref]
           
          </span>
          )
         </span>
         chef Charlie Ayers, an early Google employee who has gone on to open his own restaurant in Palo Alto, Calafia Café, and work on food startups.
        </p>
        <div id="ad_nat_btf_03">
        </div>
        <p>
         Sally is a bit larger than an ATM, with a rounded window so you can peer inside at the food. You can choose a suggested salad recipe or customize your own on the touchscreen. Inside there are 21 canisters chilled to around 34 degrees and filled with items like kale, romaine lettuce, tomatoes, kalamata olives, crispy wontons and dressings.
        </p>
        <p>
         [ahref]
         
        </p>
        <p>
         Sekar imagines Sallys popping up in shared spaces like cafeterias, airports and schools -- that is, places where a healthy meal would be a welcome change from the usual pre-packaged food. Eventually different versions of Sally could make meals like poke bowls or ramen, or find their way into busy restaurant kitchens.
        </p>
        <p>
         At first blush, $30,000 is a lot money for a salad robot (there's also an option to lease Sally for $500 a month). But in the Bay Area, a full-time kitchen employee like a line cook can cost $40,000 a year.
        </p>
        <p>
         "Sally is the best employee. She doesn't sleep, she doesn't take vacation and she's hardly ever sick," said Kelly Olazar, another former Google chef who works at Chowbotics.
        </p>
        <p>
         It's a constant struggle to hire and retain restaurant staff, Ayers added. That's largely due to the inflated housing prices caused by the same tech employees they're trying to feed. Real estate is so expensive in Silicon Valley that many kitchen employees have to commute long distances for low-paying jobs.
        </p>
        <p>
         Restaurant workers making the average
         [ahref]
         
         would be unable to afford any currently listed homes in San Francisco and San Jose, according to a report from
         [linkx]
         
         . The cities are two of the least affordable housing markets in the U.S.
        </p>
        <p>
         Restaurant workers are not the only ones being priced out. Teachers, first responders and even doctors are struggling to afford homes in the area.
        </p>
        <p>
         Turning to robots to try and solve labor problems is a classic Silicon Valley approach. Sally is not even the first attempt to automate restaurant work in the area: Eatsa, a quinoa restaurant, replaces waiters and hosts with iPads and a wall of cubbyholes that dispense food.
        </p>
        <p>
         <a href="/2015/08/31/technology/quinoa-eatsa-sf/">
          <span class="inStoryHeading">
           Related: iPads replace cashiers at SF's quinoa restaurant
          </span>
         </a>
        </p>
        <p>
         Sally is part of a larger trend of automation that could hit the food industry especially hard. Food preparation and service jobs are especially vulnerable because of the large amounts of predictable physical work involved, according to a recent study by the
         [linkx]
         
         .
        </p>
        <p>
         Sally still needs humans. There are numerous workers in each salad's farm-to-robot journey. Someone has to clean and restock the device at least twice a day. People grow and prepare the ingredients, which Chowbotics buys pre-chopped. Chefs developed the salad recipes and dressings.
        </p>
        <p>
         And Sally is not replacing any jobs at its early locations. Sally's first customers will be diners at Calafia and tech workers at the Galvanize co-working space in San Francisco. For Galvanize's engineers and future startup founders, the only thing a salad robot might replace is a bottle of Soylent.
        </p>
        <div id="storyFooter">
        </div>
        <div class="clearfix">
        </div>
        <div class="storytimestamp">
         <span class="cnnStorySource">
          CNNMoney (San Francisco)
         </span>
         <span class="cnnDateStamp">
          First published April 20, 2017: 10:02 AM ET
         </span>
        </div>
       </div>
       <div class="foot">
        <div id="postedin">
        </div>
        <div class="clearFloat">
        </div>
       </div>
      </div>
     </article>
     <div class="cnnoutbrain outbrain-recommended" id="js-outbrain-recommended">
     </div>
     <div class="cnnoutbrain outbrain-relateds" id="js-outbrain-relateds">
     </div>
     <div id="medianet" style="width: 780px; height: 218px; margin: 20px auto;">
      <div id="461374455">
      </div>
     </div>
    </section>
    <section class="column">
     <div id="adsquare">
      <div id="ad_rect_atf_01">
      </div>
     </div>
     <div class="cnnoutbrain outbrain-module" id="js-outbrain-rightrail-ads-module">
     </div>
     <div class="cnnoutbrain outbrain-hotlist" id="js-outbrain-hotlist">
     </div>
     <div class="cnnoutbrain outbrain-module" id="js-outbrain-module">
     </div>
     <div class="module" id="moneySponsors">
      <h3 class="boxHeading module-header">
       [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
      </h3>
      <div class="module-body partner-center-module">
       <ul class="summary-list">
        <li>
         <div id="ad_mod_9c94a2ce2">
         </div>
        </li>
        <li>
         <div id="ad_mod_02267452d">
         </div>
        </li>
        <li>
         <div id="ad_mod_44ae0424e">
         </div>
        </li>
       </ul>
      </div>
     </div>
     <div class="module">
      <h3 class="module-header">
       <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
      </h3>
      <div class="module-body">
       <ul class="summary-list">
        <li>
         <li>[linkx]</li><li>[ahref]</li>[ahref][ahref][pkeyx]
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="module">
      <a class="full-width-header" href="/credit_cards/index.php?kw=cnnmoneybp_int_nabrand-121015" target="_other">
       <h3 class="module-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
      </a>
      <a href="/credit_cards/index.php?kw=cnnmoneybp_int_nabrand-121015" target="_other">
      </a>
      <div class="module-body">
       <ul class="summary-list">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx][pkeyx][ahref][ahref][linkx][area1][mkey1][ahref][area1][mkey1][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][linkx][linkx][linkx][area1][keywordx][area1][mkey1]
        </li>
       </ul>
      </div>
     </div>
     <div id="adsquare">
      <div id="ad_rect_btf_01">
      </div>
     </div>
    </section>
   </div>
  </main>
  <div id="csiIframe">
  </div>
  <footer class="cnn-business">
   <div class="container">
    <div class="footer--search">
     <form action="/search/" class="search__form" id="search-form" method="get" name="headerSearch">
     </form>
    </div>
    <div class="footer--cnn-sections">
     <ul>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="js-link" href="/specials/space-science">
          Space + Science
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="subsection-column">
        <li>
         <a class="js-link" href="/africa">
          Africa
         </a>
        </li>
        <li>
         <a class="js-link" href="/americas">
          Americas
         </a>
        </li>
        <li>
         <a class="js-link" href="/asia">
          Asia
         </a>
        </li>
        <li>
         <a class="js-link" href="/australia">
          Australia
         </a>
        </li>
        <li>
         <a class="js-link" href="/europe">
          Europe
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="js-link" href="/uk">
          UK
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         <a class="js-link" href="/specials/politics/president-donald-trump-45">
          45
         </a>
        </li>
        <li>
         <a class="js-link" href="/specials/politics/congress-capitol-hill">
          Congress[area1][mkey1][ahref][area1][mkey1]
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a class="js-link" href="/election/2018/key-races">
          Key Races
         </a>
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="subsection-column">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="js-link" href="/business/media">
          Media
         </a>
        </li>
        <li>
         <a href="/business/success">
          Success
         </a>
        </li>
        <li>
         <a class="js-link" href="/business/videos">
          Video
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="section-column">
       <li>[area1][keywordx]</li><li>[area1][mkey1]</li>[ahref]<li>[area1][keywordx]</li>[pkeyx]
      </li>
      <li class="section-column">
       <h3 class="column-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="subsection-column">
        <li>
         [linkx][linkx][ahref][pkeyx][area1][mkey1][area1][keywordx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][ahref][ahref][area1][mkey1][pkeyx][pkeyx][pkeyx][linkx][linkx][pkeyx][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
        </li>
        <li>
         <a class="js-link" href="/entertainment/movies">
          Screen
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a class="js-link" href="/specials/tech/mission-ahead">
          Mission: Ahead
         </a>
        </li>
        <li>
         <a class="js-link" href="/specials/tech/upstarts">
          Upstarts
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        [linkx]
        
        <li>
         <a class="js-link" href="/style/design">
          Design
         </a>
        </li>
        <li>
         Fashion<li>[ahref]</li><li>[ahref]</li><li>[linkx]</li><li>[area1][mkey1]</li>
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="js-link" href="/style/luxury">
          Luxury
         </a>
        </li>
        <li>
         <a class="js-link" href="/style/autos">
          Autos
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="js-link" href="/travel/stay">
          Stay
         </a>
        </li>
        <li>
         <a class="js-link" href="/travel/videos">
          Videos
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [linkx]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/nba">
          Basketball
         </a>
        </li>
        <li>
         <a href="/mlb">
          Baseball
         </a>
        </li>
        <li>
         <a href="/world-football">
          Soccer
         </a>
        </li>
        <li>
         <a href="/specials/sport/winter-olympics-2018">
          Olympics
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="/specials/digital-studios">
          Digital Studios
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
          [area1][mkey1][ahref]<li>[area1][mkey1]</li>
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a href="/vr">
          CNNVR
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
       </h3>
       <ul class="subsection-column">
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/specials/cnn-underscored/gadgets/">
          -Gadgets
         </a>
        </li>
        <li>
         <li>[ahref]</li>[ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>
        </li>
        <li>
         <a href="/?utm_source=cnn.com&amp;utm_medium=referral&amp;utm_campaign=navbar">
          CNN Store
         </a>
        </li>
       </ul>
      </li>
      <li class="section-column">
       <h3 class="column-header">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ul class="subsection-column">
        <li>
         [ahref]
         
        </li>
        <li>
         [linkx]
         
        </li>
        <li>
         <a class="js-link" href="/specials/cnn-investigations">
          Investigations
         </a>
        </li>
        <li>
         <a class="js-link" href="/specials/profiles">
          CNN Profiles
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </div>
    <div class="footer--logo-social">
     <div class="logo">
      [linkx]
      
      [linkx]
      
     </div>
    </div>
    <div class="footer--legal-copy">
     <div class="copy" style="text-align;left">
      <p>
       Most stock quote data provided by BATS. Market indices are shown in real time, except for the DJIA, which is delayed by two minutes. All times are ET. Disclaimer. Morningstar: © 2019 Morningstar, Inc. All Rights Reserved. Factset: FactSet Research Systems Inc.2019. All rights reserved. Chicago Mercantile Association: Certain market data is the property of Chicago Mercantile Exchange Inc. and its licensors. All rights reserved. Dow Jones: The Dow Jones branded indices are proprietary to and are calculated, distributed and marketed by DJI Opco, a subsidiary of S&amp;P Dow Jones Indices LLC and have been licensed for use to S&amp;P Opco, LLC and CNN. Standard &amp; Poor's and S&amp;P are registered trademarks of Standard &amp; Poor's Financial Services LLC and Dow Jones is a registered trademark of Dow Jones Trademark Holdings LLC. All content of the Dow Jones branded indices © S&amp;P Dow Jones Indices LLC 2019 and/or its affiliates.
      </p>
      <p>
       ©
       <span class="footer-year">
        2019
       </span>
       Cable News Network. Turner Broadcasting System, Inc. All Rights Reserved.
       <br/>
       CNN Sans™ &amp; © 2016 Cable News Network.
      </p>
     </div>
     <div class="legal-links">
      [ahref]
      
      <a href="/feedback">
       Contact Us
      </a>
      <a href="/terms">
       Terms of Use
      </a>
      <a href="/privacy">
       Privacy Policy
      </a>
      <a class="gdpr-cookiesetting-link" href=";" id="js-gdpr-cookiesetting">
       Cookie Settings
      </a>
      <a href="/accessibility">
       Accessibiliy &amp; CC
      </a>
      [linkx]
      
     </div>
    </div>
   </div>
  </footer>
  <noscript>
  </noscript>
  <div id="ad_oop_skin_01">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0237
  </b>
 </body>
</html>|<---