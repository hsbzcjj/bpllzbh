--->|<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="en_US" property="og:locale"/>
  <meta content="article" property="og:type"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="https://www.facebook.com/VeganRicha" property="article:publisher"/>
  <meta content="vegan" property="article:tag"/>
  <meta content="video" property="article:tag"/>
  <meta content="salad" property="article:section"/>
  <meta content="2019-08-11T11:08:17+00:00" property="article:published_time"/>
  <meta content="2019-08-11T05:20:01+00:00" property="article:modified_time"/>
  <meta content="2019-08-11T05:20:01+00:00" property="og:updated_time"/>
  <meta content="https://www.veganricha.com/wp-content/uploads/2019/08/roasted-cauliflower-broccoli-veggie-salad-with-sundried-tomato-dressing-veganricha-5623.jpg" property="og:image"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="1000" property="og:image:width"/>
  <meta content="1500" property="og:image:height"/>
  <meta content="Roasted Broccoli Cauliflower Salad with Sun dried Tomato Dressing on white serving platter" property="og:image:alt"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
  <meta content="@veganricha" name="twitter:site"/>
  <meta content="https://www.veganricha.com/wp-content/uploads/2019/08/roasted-cauliflower-broccoli-veggie-salad-with-sundried-tomato-dressing-veganricha-5623.jpg" name="twitter:image"/>
  <meta content="@veganricha" name="twitter:creator"/>
  <meta content="upgrade-insecure-requests;block-all-mixed-content" http-equiv="Content-Security-Policy"/>
  <noscript>
  </noscript>
 </head>
 <body class="post-template-default single single-post postid-31422 single-format-standard custom-header header-image header-full-width content-sidebar foodie" itemscope="" itemtype="https://schema.org/WebPage">
  <div class="site-container">
   <header class="site-header" itemscope="" itemtype="https://schema.org/WPHeader">
    <div class="wrap">
     <div class="title-area">
      <p class="site-title" itemprop="headline">
       <a href="/">
        Vegan Richa
       </a>
      </p>
      <p class="site-description" itemprop="description">
       Vegan Food Blog with Healthy and Flavorful Vegan Recipes
      </p>
     </div>
    </div>
   </header>
   <nav aria-label="Main" class="nav-primary" itemscope="" itemtype="https://schema.org/SiteNavigationElement">
    <div class="wrap">
     <ul class="menu genesis-nav-menu menu-primary" id="menu-top-menu">
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-5008" id="menu-item-5008">
       [linkx]
       
      </li>
      <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-12013" id="menu-item-12013">
       <a href="/recipes" itemprop="url">
        Recipes<li>[ahref]</li><li>[ahref]</li>[area1][mkey1][pkeyx][linkx][linkx]<li>[pkeyx]</li><li>[ahref]</li>[ahref]
       </a>
       <ul class="sub-menu">
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11994" id="menu-item-11994">
         [ahref]
          <li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[linkx]</li>
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11996" id="menu-item-11996">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11998" id="menu-item-11998">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11999" id="menu-item-11999">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12000" id="menu-item-12000">
         <a href="/category/indian-vegan-recipes" itemprop="url">
          <span itemprop="name">
           Indian
          </span>
         </a>
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-30464" id="menu-item-30464">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11997" id="menu-item-11997">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12001" id="menu-item-12001">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-12002" id="menu-item-12002">
         <a href="/recipes" itemprop="url">
          <span itemprop="name">
           Recipe Index
          </span>
         </a>
        </li>
       </ul>
      </li>
      <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-30151" id="menu-item-30151">
       [ahref]
       
       <ul class="sub-menu">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30165" id="menu-item-30165">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30162" id="menu-item-30162">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30163" id="menu-item-30163">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30164" id="menu-item-30164">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-30167" id="menu-item-30167">
         [linkx]
         
        </li>
       </ul>
      </li>
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-5009" id="menu-item-5009">
       [ahref]
       
       <ul class="sub-menu">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15992" id="menu-item-15992">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6534" id="menu-item-6534">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-5018" id="menu-item-5018">
       [ahref]
       
       <ul class="sub-menu">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11117" id="menu-item-11117">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-11116" id="menu-item-11116">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5022" id="menu-item-5022">
         <a href="/2012/01/vegan-resources.html" itemprop="url">
          <span itemprop="name">
           Vegan Subs &amp; Resources
          </span>
         </a>
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5023" id="menu-item-5023">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5020" id="menu-item-5020">
         [linkx]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-11988" id="menu-item-11988">
         [ahref]
          [pkeyx][linkx][pkeyx][ahref][area1][keywordx][area1][keywordx][linkx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][ahref][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
         
        </li>
       </ul>
      </li>
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5025" id="menu-item-5025">
       <a class="external" href="/shop/veganricha" itemprop="url" rel="noopener noreferrer nofollow" target="_blank">
        <span itemprop="name">
         Shop
        </span>
       </a>
      </li>
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-5016" id="menu-item-5016">
       [ahref]
       
      </li>
     </ul>
    </div>
   </nav>
   <div class="header-search">
    <form action="/" class="search-form" itemprop="potentialAction" itemscope="" itemtype="https://schema.org/SearchAction" method="get" role="search">
     <meta content="https://www.veganricha.com/?s={s}" itemprop="target"/>
    </form>
   </div>
   <div class="site-inner">
    <div class="content-sidebar-wrap">
     <main class="content">
      <article class="post-31422 post type-post status-publish format-standard has-post-thumbnail category-gluten-free category-main-course category-salad category-soy-free category-summer tag-vegan tag-video entry" itemscope="" itemtype="https://schema.org/CreativeWork">
       <header class="entry-header">
        <h1 class="entry-title" itemprop="headline">
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
        <p class="entry-meta">
         <time class="entry-time" datetime="2019-08-11T04:08:17-07:00" itemprop="datePublished">
          August 11, 2019
         </time>
         By
         <span class="entry-author" itemprop="author" itemscope="" itemtype="https://schema.org/Person">
          [ahref]
          
         </span>
         <span class="entry-comments-link">
          [ahref]
          
         </span>
        </p>
       </header>
       <div class="entry-content" itemprop="text">
        <div>
         Roasted Broccoli Cauliflower Salad with Sun dried Tomato Dressing. Creamy Sun-dried tomato dressing with roasted veggies, spring greens, apples and pepitas. Vegan, gluten-free, soy-free Recipe. Easily made nut-free
         <strong>
          [linkx]
          
         </strong>
        </div>
        <div>
         <noscript>
         </noscript>
        </div>
        <div>
        </div>
        <div>
         Its time for roasting some abundant veggies and piling them over seasonal greens with seasonal fruits and dressing with a creamy sun dried tomato dressing!
        </div>
        <div>
        </div>
        <div>
         The sun dried tomato dressing is just a few ingredients and works amazingly over roasted cauliflower and broccoli. It also works great in sandwiches, wraps and bowls. The veggies are roasted with fresh herbs, salt and pepper and served over a bed of greens, apples and pepitas. Change up the veggies, hrebs, toppings and fruit for variation! Lets make this Easy Salad.
        </div>
        <p>
         <span id="more-31422">
         </span>
        </p>
        <div>
         <noscript>
         </noscript>
        </div>
        <h2>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <ul>
         <li>
          The sun dried tomato dressing has sun dried tomatoes, cashews, water, lemon juice, garlic, basil and salt. It is a creamy delicious dressing that works over any salad.
         </li>
         <li>
          Nut-free: Use silken tofu or pepitas to make the dressing nut-free.
         </li>
         <li>
          The Salad has mixed greens, apples, pepitas and cauliflower and broccoli that get roasted with herbs, salt and pepper. You can use other seasonal fruits such as pear or berries, and other roasted veggies or root veggies for variation.
         </li>
         <li>
          Garnish with fresh herbs, dressing and salt and pepper as needed.
         </li>
        </ul>
        <h2>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h2>
        <div>
         Soak the sun dried tomato for 15 mins. Transfer to a blender along with the soaking water and the rest of the ingredients. Blend. Add more water if needed.
        </div>
        <div>
         <noscript>
         </noscript>
        </div>
        <div>
         <noscript>
         </noscript>
        </div>
        <div>
         <div>
          Add the veggies to a bowl. Drizzle oil and mix and toss. Rub in if needed. Add salt, pepper and herbs and toss well. (You can add other herbs and spice blends for variation, such as cajun, curry, taco spice etc). Transfer to parchment lined baking dish. Cover with parchment and bake at 400 deg F (205 C) for 12 mins, then remove parchment and continue to bake for 20 mins.
         </div>
         <div>
         </div>
        </div>
        <div>
         <noscript>
          [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][linkx][area1][keywordx][area1][keywordx][linkx][area1][mkey1][area1][mkey1][linkx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref]
         </noscript>
        </div>
        <div>
         <noscript>
         </noscript>
        </div>
        <div>
         Assemble greens of choice, Add sliced apple, roasted veggies, and pepitas. Drizzle generous dressing and serve.
        </div>
        <div>
        </div>
        <div>
         <noscript>
         </noscript>
        </div>
        <div>
         <div class="wprm-recipe-container" data-recipe-id="31536" id="wprm-recipe-container-31536">
          <div class="wprm-recipe wprm-recipe-template-compact-blog">
           <div class="wprm-container-float-right">
            <div class="wprm-recipe-image wprm-block-image-normal">
             <noscript>
             </noscript>
            </div>
            <div class="wprm-spacer" style="height: 5px">
            </div>
            [ahref]
            
            <div class="wprm-recipe-rating">
             <span class="wprm-rating-star wprm-rating-star-1 wprm-rating-star-full" data-color="#343434" data-rating="1">
              <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
               <g transform="translate(0, 0)">
                <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
                </polygon>
               </g>
              </svg>
             </span>
             <span class="wprm-rating-star wprm-rating-star-2 wprm-rating-star-full" data-color="#343434" data-rating="2">
              <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
               <g transform="translate(0, 0)">
                <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
                </polygon>
               </g>
              </svg>
             </span>
             <span class="wprm-rating-star wprm-rating-star-3 wprm-rating-star-full" data-color="#343434" data-rating="3">
              <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
               <g transform="translate(0, 0)">
                <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
                </polygon>
               </g>
              </svg>
             </span>
             <span class="wprm-rating-star wprm-rating-star-4 wprm-rating-star-full" data-color="#343434" data-rating="4">
              <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
               <g transform="translate(0, 0)">
                <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
                </polygon>
               </g>
              </svg>
             </span>
             <span class="wprm-rating-star wprm-rating-star-5 wprm-rating-star-full" data-color="#343434" data-rating="5">
              <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
               <g transform="translate(0, 0)">
                <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
                </polygon>
               </g>
              </svg>
             </span>
             <div class="wprm-recipe-rating-details wprm-block-text-normal">
              <span class="wprm-recipe-rating-average">
               5
              </span>
              from
              <span class="wprm-recipe-rating-count">
               1
              </span>
              vote
             </div>
            </div>
           </div>
           <h2 class="wprm-recipe-name wprm-block-text-bold">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h2>
           <div class="wprm-spacer" style="height: 5px">
           </div>
           <div class="wprm-recipe-summary wprm-block-text-normal">
            Roasted Broccoli Cauliflower Salad with Sun dried Tomato Dressing. Creamy Sun-dried tomato dressing with roasted veggies, spring greens, apples and pepitas. Vegan, gluten-free, soy-free Recipe. Easily made nut-free
            <br/>
            <br/>
           </div>
           <div class="wprm-spacer">
           </div>
           <div class="wprm-recipe-times-container wprm-recipe-details-container wprm-recipe-details-container-table wprm-block-text-normal" style="border-width: 1px;border-style: solid;border-color: #777777;">
            <div class="wprm-recipe-time-container wprm-recipe-prep-time-container wprm-recipe-block-container wprm-recipe-block-container-table wprm-block-text-normal" style="border-width: 1px;border-style: solid;border-color: #777777;">
             <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-time-label wprm-recipe-prep-time-label">
              Prep Time
             </span>
             <span class="wprm-recipe-time wprm-block-text-normal">
              <span class="wprm-recipe-details wprm-recipe-details-minutes wprm-recipe-prep_time wprm-recipe-prep_time-minutes">
               15
              </span>
              <span class="wprm-recipe-details-unit wprm-recipe-details-minutes wprm-recipe-prep_time-unit wprm-recipe-prep_timeunit-minutes">
               mins
              </span>
             </span>
            </div>
            <div class="wprm-recipe-time-container wprm-recipe-cook-time-container wprm-recipe-block-container wprm-recipe-block-container-table wprm-block-text-normal" style="border-width: 1px;border-style: solid;border-color: #777777;">
             <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-time-label wprm-recipe-cook-time-label">
              Cook Time
             </span>
             <span class="wprm-recipe-time wprm-block-text-normal">
              <span class="wprm-recipe-details wprm-recipe-details-minutes wprm-recipe-cook_time wprm-recipe-cook_time-minutes">
               35
              </span>
              <span class="wprm-recipe-details-unit wprm-recipe-details-minutes wprm-recipe-cook_time-unit wprm-recipe-cook_timeunit-minutes">
               mins
              </span>
             </span>
            </div>
            <div class="wprm-recipe-time-container wprm-recipe-total-time-container wprm-recipe-block-container wprm-recipe-block-container-table wprm-block-text-normal" style="border-width: 1px;border-style: solid;border-color: #777777;">
             <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-time-label wprm-recipe-total-time-label">
              Total Time
             </span>
             <span class="wprm-recipe-time wprm-block-text-normal">
              <span class="wprm-recipe-details wprm-recipe-details-minutes wprm-recipe-total_time wprm-recipe-total_time-minutes">
               50
              </span>
              <span class="wprm-recipe-details-unit wprm-recipe-details-minutes wprm-recipe-total_time-unit wprm-recipe-total_timeunit-minutes">
               mins
              </span>
             </span>
            </div>
           </div>
           <div class="wprm-spacer" style="height: 5px">
           </div>
           <div class="wprm-recipe-tags-container wprm-recipe-details-container wprm-recipe-details-container-inline wprm-block-text-normal" style="">
            <div class="wprm-recipe-tag-container wprm-recipe-course-container wprm-recipe-block-container wprm-recipe-block-container-inline wprm-block-text-normal" style="">
             <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-tag-label wprm-recipe-course-label">
              Course:
             </span>
             <span class="wprm-recipe-course wprm-block-text-normal">
              Salad
             </span>
            </div>
            <div class="wprm-recipe-tag-container wprm-recipe-cuisine-container wprm-recipe-block-container wprm-recipe-block-container-inline wprm-block-text-normal" style="">
             <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-tag-label wprm-recipe-cuisine-label">
              Cuisine:
             </span>
             <span class="wprm-recipe-cuisine wprm-block-text-normal">
              American, Gluten-free, Vegan
             </span>
            </div>
           </div>
           <div class="wprm-recipe-servings-container wprm-recipe-block-container wprm-recipe-block-container-inline wprm-block-text-bold">
            <span class="wprm-recipe-details-label wprm-block-text-bold wprm-recipe-servings-label">
             Servings:
            </span>
            <span class="wprm-recipe-servings wprm-recipe-details wprm-recipe-servings-31536 wprm-recipe-servings-adjustable-text wprm-block-text-bold" data-recipe="31536">
             4
            </span>
           </div>
           <div class="wprm-recipe-nutrition-container wprm-recipe-calories-container wprm-recipe-block-container wprm-recipe-block-container-inline wprm-block-text-normal">
            <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-nutrition-label wprm-recipe-calories-label">
             Calories:
            </span>
            <span class="wprm-recipe-details wprm-recipe-nutrition wprm-recipe-calories wprm-block-text-normal">
             199
            </span>
            <span class="wprm-recipe-details-unit wprm-recipe-nutrition-unit wprm-recipe-calories-unit wprm-block-text-normal">
             kcal
            </span>
           </div>
           <div class="wprm-recipe-author-container wprm-recipe-block-container wprm-recipe-block-container-inline wprm-block-text-normal">
            <span class="wprm-recipe-details-label wprm-block-text-faded wprm-recipe-author-label">
             Author:
            </span>
            <span class="wprm-recipe-details wprm-recipe-author wprm-block-text-normal">
             Vegan Richa
            </span>
           </div>
           <div class="wprm-recipe-ingredients-container wprm-block-text-normal">
            <h3 class="wprm-recipe-header wprm-recipe-ingredients-header wprm-block-text-bold">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <div class="wprm-recipe-ingredient-group">
             <h4 class="wprm-recipe-group-name wprm-recipe-ingredient-group-name wprm-block-text-bold">
              Sun dried tomato dressing:
             </h4>
             <ul class="wprm-recipe-ingredients">
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1/2
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 cup
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                (
                <span class="wprm-recipe-ingredient-amount">
                 55
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 g
                </span>
                )
               </span>
               <span class="wprm-recipe-ingredient-name">
                sun dried tomato
               </span>
               <span class="wprm-recipe-ingredient-notes wprm-recipe-ingredient-notes-faded">
                (dry version)
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1/4<li>[area1][mkey1]</li>[ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 cup
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                (
                <span class="wprm-recipe-ingredient-amount">
                 32.25
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 g
                </span>
                )
               </span>
               <span class="wprm-recipe-ingredient-name">
                cashews
               </span>
               <span class="wprm-recipe-ingredient-notes wprm-recipe-ingredient-notes-faded">
                (use tofu or pepitas for nut-free)
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 cup
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                (
                <span class="wprm-recipe-ingredient-amount">
                 236.59
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 ml
                </span>
                )
               </span>
               <span class="wprm-recipe-ingredient-name">
                water
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tbsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                lemon juice
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 clove
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                garlic
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tbsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                evoo optional
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li>
               </span>
               <span class="wprm-recipe-ingredient-name">
                basil
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1/4
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                salt
               </span>
              </li>
             </ul>
            </div>
            <div class="wprm-recipe-ingredient-group">
             <h4 class="wprm-recipe-group-name wprm-recipe-ingredient-group-name wprm-block-text-bold">
              Veggies:
             </h4>
             <ul class="wprm-recipe-ingredients">
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 2
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 cups
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                (
                <span class="wprm-recipe-ingredient-amount">
                 200
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 g
                </span>
                )
               </span>
               <span class="wprm-recipe-ingredient-name">
                cauliflower florets
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 2
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 cups
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                (
                <span class="wprm-recipe-ingredient-amount">
                 182
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 g
                </span>
                )
               </span>
               <span class="wprm-recipe-ingredient-name">
                broccoli florets
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 2
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                oil
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1/2
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                salt
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1/2
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                black pepper
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                thyme
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tbsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                fresh or 1/2 tsp dried rosemary
               </span>
              </li>
             </ul>
            </div>
            <div class="wprm-recipe-ingredient-group">
             <h4 class="wprm-recipe-group-name wprm-recipe-ingredient-group-name wprm-block-text-bold">
              Other
             </h4>
             <ul class="wprm-recipe-ingredients">
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 4
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 cups
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
                (
                <span class="wprm-recipe-ingredient-amount">
                 160
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 g
                </span>
                )
               </span>
               <span class="wprm-recipe-ingredient-name">
                mixed baby Greens
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 1
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                apple,
               </span>
               <span class="wprm-recipe-ingredient-notes wprm-recipe-ingredient-notes-faded">
                thinly sliced
               </span>
              </li>
              <li class="wprm-recipe-ingredient" style="list-style-type: disc;">
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-1">
                <span class="wprm-recipe-ingredient-amount">
                 3
                </span>
                <span class="wprm-recipe-ingredient-unit">
                 tbsp
                </span>
               </span>
               <span class="wprm-recipe-ingredient-unit-system wprm-recipe-ingredient-unit-system-2">
               </span>
               <span class="wprm-recipe-ingredient-name">
                pepitas
               </span>
               <span class="wprm-recipe-ingredient-notes wprm-recipe-ingredient-notes-faded">
                or use nuts such as pecans, walnuts
               </span>
              </li>
             </ul>
            </div>
           </div>
           <div class="wprm-recipe-instructions-container wprm-block-text-normal">
            <h3 class="wprm-recipe-header wprm-recipe-instructions-header wprm-block-text-bold">
             [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
            </h3>
            <div class="wprm-recipe-instruction-group">
             <ul class="wprm-recipe-instructions">
              <li class="wprm-recipe-instruction" id="wprm-recipe-31536-step-0-0" style="list-style-type: decimal;">
               <div class="wprm-recipe-instruction-text" style="margin-bottom: 5px">
                <strong>
                 Sun dried tomato dressing:
                </strong>
                Soak the sun dried tomato for 15 mins. Transfer to a blender along with the soaking water and the rest of the ingredients. Blend. Add more water if needed.
               </div>
              </li>
              <li class="wprm-recipe-instruction" id="wprm-recipe-31536-step-0-1" style="list-style-type: decimal;">
               <div class="wprm-recipe-instruction-text" style="margin-bottom: 5px">
                <strong>
                 Salad:
                </strong>
                Add the veggies to a bowl. Drizzle oil and mix and toss. Rub in if needed. Add salt, pepper and herbs and toss well. (You can add other herbs and spice blends for variation, such as cajun, curry, taco spice etc). Transfer to parchment lined baking dish. Cover with parchment and bake at 400 deg F (205 C) for 12 mins, then remove parchment and continue to bake for 20 mins.
               </div>
              </li>
              <li class="wprm-recipe-instruction" id="wprm-recipe-31536-step-0-2" style="list-style-type: decimal;">
               <div class="wprm-recipe-instruction-text" style="margin-bottom: 5px">
                Assemble greens of choice, Add sliced apple, roasted veggies, and pepitas. Drizzle generous dressing and serve.
                <div class="wprm-spacer">
                </div>
                <strong>
                 To Store:
                </strong>
                Store the dressing separately in the fridge for upto 3 days.
               </div>
              </li>
             </ul>
            </div>
           </div>
           <div class="wprm-recipe-notes-container wprm-block-text-normal">
            <h3 class="wprm-recipe-header wprm-recipe-notes-header wprm-block-text-bold">
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h3>
            <div class="wprm-recipe-notes">
             To make the dressing nut-free: Use silken tofu or pepitas or hemp seeds to make the dressing nut-free.
             <div class="wprm-spacer">
             </div>
             Use other veggies such as zucchini, mushroom, carrots, root vegetables,  and other fruit additions such as pear, citrus to the salad for variation
             <div class="wprm-spacer">
             </div>
             Nutrition is for 1 serve
            </div>
           </div>
           <h3 class="wprm-recipe-header wprm-recipe-nutrition-header wprm-block-text-bold">
            [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
           </h3>
           <div class="wprm-nutrition-label-container wprm-nutrition-label-container-label" style="text-align: left;">
            <div class="wprm-nutrition-label" style="background-color: #ffffff;color: #000000;">
             <div class="nutrition-title">
              Nutrition Facts
             </div>
             <div class="nutrition-recipe">
              Roasted Broccoli Cauliflower Salad with Sun dried Tomato Dressing
             </div>
             <[keywordx]>
             </[keywordx]>
             <div class="nutrition-serving">
              Amount Per Serving
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               <strong>
                Calories
               </strong>
               199
              </span>
              <span class="nutrition-percentage">
               Calories from Fat 90
              </span>
             </div>
             <div class="nutrition-line">
             </div>
             <div class="nutrition-item">
              <span class="nutrition-percentage">
               <strong>
                % Daily Value*
               </strong>
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               <strong>
                Total Fat
               </strong>
               10g
              </span>
              <span class="nutrition-percentage">
               <strong>
                15%
               </strong>
              </span>
             </div>
             <div class="nutrition-sub-item">
              <span class="nutrition-sub">
               Saturated Fat 2g
              </span>
              <span class="nutrition-percentage">
               <strong>
                10%
               </strong>
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               <strong>
                Sodium
               </strong>
               507mg
              </span>
              <span class="nutrition-percentage">
               <strong>
                21%
               </strong>
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               <strong>
                Potassium
               </strong>
               996mg
              </span>
              <span class="nutrition-percentage">
               <strong>
                28%
               </strong>
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               <strong>
                Total Carbohydrates
               </strong>
               25g
              </span>
              <span class="nutrition-percentage">
               <strong>
                8%
               </strong>
              </span>
             </div>
             <div class="nutrition-sub-item">
              <span class="nutrition-sub">
               Dietary Fiber 6g
              </span>
              <span class="nutrition-percentage">
               <strong>
                24%
               </strong>
              </span>
             </div>
             <div class="nutrition-sub-item">
              <span class="nutrition-sub">
               Sugars 12g
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               <strong>
                Protein
               </strong>
               9g
              </span>
              <span class="nutrition-percentage">
               <strong>
                18%
               </strong>
              </span>
             </div>
             <div class="nutrition-line nutrition-line-big">
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               Vitamin A
              </span>
              <span class="nutrition-percentage">
               18.2%
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               Vitamin C
              </span>
              <span class="nutrition-percentage">
               101.8%
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               Calcium
              </span>
              <span class="nutrition-percentage">
               7.2%
              </span>
             </div>
             <div class="nutrition-item">
              <span class="nutrition-main">
               Iron
              </span>
              <span class="nutrition-percentage">
               19.7%
              </span>
             </div>
             <div class="nutrition-warning">
              * Percent Daily Values are based on a 2000 calorie diet.
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div>
        </div>
        <div>
        </div>
       </div>
       <footer class="entry-footer">
        <p class="entry-meta">
         <span class="entry-categories">
          Filed Under:
          [ahref]
          
          ,
          [linkx]
          
          ,
          [ahref]
          
          ,
          [ahref]
          
          ,
          <a href="/category/summer" rel="category tag">
           summer
          </a>
         </span>
         <span class="entry-tags">
          Tagged With:
          [linkx]
          
          ,
          [ahref]
          
         </span>
        </p>
       </footer>
      </article>
      <div class="after-entry widget-area">
       <section class="widget user-profile" id="user-profile-3">
        <div class="widget-wrap">
         <h4 class="widget-title widgettitle">
          By Richa Hingle
         </h4>
         <p>
          <span class="alignleft">
           <noscript>
           </noscript>
          </span>
          Hi, I am Richa! I am a Recipe Creator, food photographer, videographer, Cookbook Author of
          [linkx]
          
          &amp;
          [ahref]
          
          .  Love flavor, easy, creative food? then do stop by &amp; try some!
          <br/>
          More about
          [linkx]
          
         </p>
        </div>
       </section>
       <section class="widget widget_text" id="text-29">
        <div class="widget-wrap">
         <div class="textwidget">
          <p>
           ⭐⭐⭐⭐
           <b>
            If you Love the Recipe, Please consider rating it using stars in comments! It helps readers and helps more people find the recipe online! I love hearing from you all!
           </b>
           ⭐⭐⭐⭐
          </p>
          <p>
           <i>
            Follow along on
            <strong>
             [linkx]
             
             ,
             [ahref]
             
             ,
             [ahref]
             
             ,
             [ahref]
             
             ,
             [linkx]
             
            </strong>
           </i>
          </p>
         </div>
        </div>
       </section>
       <section class="widget enews-widget" id="enews-ext-5">
        <div class="widget-wrap">
         <div class="enews">
          <h4 class="widget-title widgettitle">
           Get latest posts in your Inbox!
          </h4>
          <form action="/fb/a/mailverify" id="subscribe-enews-ext-5" method="post" name="enews-ext-5" onsubmit="window.open( 'http://feedburner.google.com/fb/a/mailverify?uri=blogspot/yPHzu', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true" target="popupwindow">
           <label class="screenread" for="subbox">
            E-Mail Address
           </label>
          </form>
         </div>
        </div>
       </section>
      </div>
      <div class="adjacent-entry-pagination pagination">
       <div class="pagination-previous alignleft">
        [ahref]
        
       </div>
       <div class="pagination-next alignright">
       </div>
      </div>
      <div class="entry-comments" id="comments">
       <h3>
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <ol class="comment-list">
        <li class="comment even thread-even depth-1" id="comment-499407">
         <article itemprop="comment" itemscope="" itemtype="https://schema.org/Comment">
          <header class="comment-header">
           <p class="comment-author" itemprop="author" itemscope="" itemtype="https://schema.org/Person">
            <noscript>
            </noscript>
            <span class="comment-author-name" itemprop="name">
             Emily
            </span>
            <span class="says">
             says[pkeyx]<li>[area1][mkey1]</li>[linkx]
            </span>
           </p>
           [ahref]
           
           <time class="comment-time" datetime="2019-08-12T22:46:29-07:00" itemprop="datePublished">
           </time>
           <p class="comment-meta">
           </p>
          </header>
          <div class="comment-content" itemprop="text">
           <p>
            <noscript>
            </noscript>
            <br/>
            Made the dressing! it was fab!
           </p>
          </div>
          <div class="comment-reply">
           [linkx]
           
          </div>
         </article>
         <ul class="children">
          <li class="comment byuser comment-author-richahinglegmail-com bypostauthor odd alt depth-2" id="comment-499417">
           <article itemprop="comment" itemscope="" itemtype="https://schema.org/Comment">
            <header class="comment-header">
             <p class="comment-author" itemprop="author" itemscope="" itemtype="https://schema.org/Person">
              <noscript>
              </noscript>
              <span class="comment-author-name" itemprop="name">
               [linkx]
               
              </span>
              <span class="says">
               says
              </span>
             </p>
             [linkx]
             
             <time class="comment-time" datetime="2019-08-12T23:43:26-07:00" itemprop="datePublished">
             </time>
             <p class="comment-meta">
             </p>
            </header>
            <div class="comment-content" itemprop="text">
             <p>
              yay
             </p>
            </div>
            <div class="comment-reply">
             [ahref]
             
            </div>
           </article>
          </li>
         </ul>
        </li>
       </ol>
      </div>
      <div class="comment-respond" id="respond">
       <h3 class="comment-reply-title" id="reply-title">
        [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </h3>
       <form action="/wp-comments-post.php?wpe-comment-post=veganricha" class="comment-form" id="commentform" method="post" novalidate="">
        <p class="comment-notes">
         <span id="email-notes">
          Your email address will not be published.
         </span>
         Required fields are marked
         <span class="required">
          *
         </span>
        </p>
        <p class="comment-form-wprm-rating" data-color="#343434">
         <label for="wprm-rating">
          Recipe Rating
         </label>
         <span class="wprm-rating-stars">
          <span class="wprm-rating-star" data-rating="1">
           <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
            <g transform="translate(0, 0)">
             <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
             </polygon>
            </g>
           </svg>
          </span>
          <span class="wprm-rating-star" data-rating="2">
           <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
            <g transform="translate(0, 0)">
             [area1][mkey1][pkeyx][pkeyx][area1][mkey1][area1][keywordx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx]
            </g>
           </svg>
          </span>
          <span class="wprm-rating-star" data-rating="3">
           <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
            <g transform="translate(0, 0)">
             <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
             </polygon>
            </g>
           </svg>
          </span>
          <span class="wprm-rating-star" data-rating="4">
           <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
            <g transform="translate(0, 0)">
             <polygon fill="none" points="12,2.6 15,9 21.4,9 16.7,13.9 18.6,21.4 12,17.6 5.4,21.4 7.3,13.9 2.6,9 9,9 " stroke="#343434" stroke-linecap="square" stroke-linejoin="miter" stroke-miterlimit="10" stroke-width="2">
             </polygon>
            </g>
           </svg>
          </span>
          <span class="wprm-rating-star" data-rating="5">
           <svg height="16px" viewbox="0 0 24 24" width="16px" x="0px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
            <li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][mkey1]<li>[area1][mkey1]</li>
           </svg>
          </span>
         </span>
        </p>
        <p class="comment-form-comment">
         Comment<li>[area1][mkey1]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx]</li>
        </p>
        <p class="comment-form-author">
         <label for="author">
          Name
          <span class="required">
           *
          </span>
         </label>
        </p>
        <p class="comment-form-email">
         <label for="email">
          Email
          <span class="required">
           *
          </span>
         </label>
        </p>
        <p class="comment-form-url">
         <label for="url">
          Website
         </label>
        </p>
        <p class="comment-form-subscriptions">
         <label for="subscribe-reloaded">
          <select id="subscribe-reloaded" name="subscribe-reloaded">
           <option value="none">
            Don't subscribe
           </option>
           <option value="yes">
            All
           </option>
           <option selected="selected" value="replies">
            Replies to my comments
           </option>
          </select>
          Notify me of followup comments via e-mail. You can also
          [ahref]
          
          without commenting.
         </label>
        </p>
        <p class="form-submit">
        </p>
        <p style="display: none;">
        </p>
        <p style="display: none;">
        </p>
       </form>
      </div>
      <p class="akismet_comment_form_privacy_notice">
       This site uses Akismet to reduce spam.
       [ahref]
       
       .
      </p>
     </main>
     <aside aria-label="Primary Sidebar" class="sidebar sidebar-primary widget-area" itemscope="" itemtype="https://schema.org/WPSideBar" role="complementary">
      <section class="widget widget_search" id="search-2">
       <div class="widget-wrap">
        <form action="/" class="search-form" itemprop="potentialAction" itemscope="" itemtype="https://schema.org/SearchAction" method="get" role="search">
         <meta content="https://www.veganricha.com/?s={s}" itemprop="target"/>
        </form>
       </div>
      </section>
      <section class="widget widget_text" id="text-19">
       <div class="widget-wrap">
        <h4 class="widget-title widgettitle">
         ORDER TODAY!
        </h4>
        <div class="textwidget">
         [linkx]
         
         <div style="text-align: center;">
          [linkx]
          
          <noscript>
          </noscript>
          //
          [ahref]
          
          //
          [ahref]
          
          //
          [ahref]
          
          //
          [linkx]
          
         </div>
        </div>
       </div>
      </section>
      <section class="widget user-profile" id="user-profile-2">
       <div class="widget-wrap">
        [linkx][ahref][pkeyx][pkeyx][ahref][area1][mkey1][ahref][area1][mkey1][area1][keywordx][linkx][area1][mkey1][area1][mkey1][ahref][linkx][linkx][pkeyx][pkeyx][area1][keywordx][area1][keywordx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][pkeyx]
       </div>
      </section>
      <section class="widget simple-social-icons" id="simple-social-icons-2">
       <div class="widget-wrap">
        <ul class="alignleft">
         <li class="ssi-bloglovin">
          [ahref]
          
         </li>
         <li class="ssi-facebook">
          [ahref]
          
         </li>
         <li class="ssi-gplus">
          [linkx]
          
         </li>
         <li class="ssi-instagram">
          [ahref]
          
         </li>
         <li class="ssi-pinterest">
          <a class="external" href="/veganricha" rel="noopener noreferrer nofollow" target="_blank">
           <svg aria-labelledby="social-pinterest-2" class="social-pinterest" role="img">
            <title id="social-pinterest-2">
             Pinterest
            </title>
            <use xlink:href="https://www.veganricha.com/wp-content/plugins/simple-social-icons/symbol-defs.svg#social-pinterest">
            </use>
           </svg>
          </a>
         </li>
         <li class="ssi-rss">
          [ahref]
          
         </li>
         <li class="ssi-twitter">
          [ahref]
          
         </li>
         <li class="ssi-youtube">
          [linkx]
          
         </li>
        </ul>
       </div>
      </section>
      <section class="widget enews-widget" id="enews-ext-4">
       <div class="widget-wrap">
        <div class="enews">
         <h4 class="widget-title widgettitle">
          Get Email Updates!
         </h4>
         <form action="/fb/a/mailverify" id="subscribe-enews-ext-4" method="post" name="enews-ext-4" onsubmit="window.open( 'http://feedburner.google.com/fb/a/mailverify?uri=blogspot/yPHzu', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true" target="popupwindow">
          <label class="screenread" for="subbox">
           E-Mail Address
          </label>
         </form>
        </div>
       </div>
      </section>
      <section class="widget widget_text" id="text-45">
       <div class="widget-wrap">
        <div class="textwidget">
         [linkx]
         
         <strong>
          <li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>[linkx]
         </strong>
        </div>
       </div>
      </section>
      <section class="widget widget_text" id="text-4">
       <div class="widget-wrap">
        <h4 class="widget-title widgettitle">
         Affiliate Links
        </h4>
        <div class="textwidget">
         <p>
          All content on this blog is owned by Vegan Richa LLC. Some product links on some posts are affiliate links. Vegan Richa is monetized in part through the use of affiliate links.
          [linkx]
          
         </p>
        </div>
       </div>
      </section>
     </aside>
    </div>
   </div>
   <div class="footer-widgets">
    <div class="wrap">
     <div class="widget-area footer-widgets-1 footer-widget-area">
      <section class="widget_text widget widget_custom_html" id="custom_html-4">
       <div class="widget_text widget-wrap">
        <div class="textwidget custom-html-widget">
         <table class="alignleft" style="width: 680px;">
          <tbody>
           <tr>
            <td style="width: 238px;">
             <strong>
              LINKS
             </strong>
            </td>
            <td style="width: 286px;">
             <strong>
              POPULAR POSTS
             </strong>
            </td>
            <td style="width: 134px;">
             <strong>
              KEEP IN TOUCH
             </strong>
            </td>
           </tr>
           <tr>
            <td style="width: 238px;">
             [ahref]
             
            </td>
            <td style="width: 286px;">
             [ahref]
             
            </td>
            <td style="width: 134px;">
             [ahref]
             
            </td>
           </tr>
           <tr>
            <td style="width: 238px;">
             [linkx]
             
            </td>
            <td style="width: 286px;">
             [linkx]
             
            </td>
            <td style="width: 134px;">
             [linkx]
             
            </td>
           </tr>
           <tr>
            <td style="width: 238px;">
             [ahref]
             
            </td>
            <td style="width: 286px;">
             <a href="/2013/04/caras-crispy-orange-cauliflower-vegan.html">
              Crispy Orange Cauliflower
             </a>
            </td>
            <td style="width: 134px;">
             [ahref]
             
            </td>
           </tr>
           <tr>
            <td style="width: 238px;">
             [pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][linkx][ahref][area1][mkey1][linkx][area1][mkey1][area1][keywordx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]
            </td>
            <td style="width: 286px;">
             <a href="/2014/10/vegan-pumpkin-cinnamon-rolls-recipe.html" rel="noopener noreferrer" target="_blank">
              Pumpkin Cinnamon Rolls[area1][keywordx][area1][keywordx][linkx]<li>[linkx]</li>
             </a>
            </td>
            <td style="width: 134px;">
             [linkx]
             
            </td>
           </tr>
           <tr>
            <td style="width: 238px;">
             [ahref]
             
            </td>
            <td style="width: 286px;">
             [linkx]
             
            </td>
            <td style="width: 134px;">
             [ahref]
             
            </td>
           </tr>
           <tr>
            <td style="width: 238px;">
             [ahref]
             
            </td>
           </tr>
          </tbody>
         </table>
        </div>
       </div>
      </section>
     </div>
    </div>
   </div>
   <footer class="site-footer" itemscope="" itemtype="https://schema.org/WPFooter">
    <div class="wrap">
     Copyright © 2019 Vegan Richa LLC
    </div>
   </footer>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0219
  </b>
 </body>
</html>|<---