--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <title>
   [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="always" name="referrer"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body id="tt-body-page">
  <div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0">
  </div>
  <body oncontextmenu="return false" ondragstart="return false" onselectstart="return false">
   <div class="jb-page jb-youtube-auto jb-typography-0 jb-post-title-show-line jb-another-category-0">
    <div class="jb-background jb-background-header">
     <div class="jb-container jb-container-header">
      <div class="jb-row jb-row-header">
       <div class="jb-line jb-line-header-top">
       </div>
       <div class="jb-column jb-column-header">
        <div class="jb-cell jb-cell-header">
         <div class="jb-header-table">
          <div class="jb-header-table-row">
           <div class="jb-header-table-cell jb-header-table-cell-site-title">
            <div class="jb-header-mobile-table">
             <div class="jb-header-mobile-table-row">
              <div class="jb-header-mobile-table-cell jb-header-mobile-table-cell-site-title">
               <header>
                <h1 class="jb-site-title">
                 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                </h1>
               </header>
              </div>
              <div class="jb-header-mobile-table-cell jb-header-mobile-table-cell-bars">
               <div class="jb-bars">
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="jb-header-table-cell jb-header-table-cell-sns">
            <div class="jb-form-search">
             <div class="jb-form-search-table">
              <div class="jb-form-search-table-row">
               <div class="jb-form-search-table-cell jb-form-search-table-cell-input">
               </div>
               <div class="jb-form-search-table-cell jb-form-search-table-cell-button">
                <button class="jb-form-button" onclick="try{window.location.href='/search/'+looseURIEncode(document.getElementsByName('search')[0].value);document.getElementsByName('search')[0].value='';return false;}catch(e){}" type="button">
                 <i class="fa fa-search fa-fw">
                 </i>
                </button>
               </div>
              </div>
             </div>
            </div>
            <ul class="jb-sns-list">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [linkx]
              
             </li>
             <li>
              [linkx]
              
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
        <div class="jb-cell jb-cell-navigation">
         <nav>
          <h2 class="jb-section-title jb-section-title-main-menu">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
          <div class="jb-navigation jb-navigation-blog-menu">
           <div class="jb-navigation-blog-menu-title">
            <ul>
             <li>
              블로그 메뉴
             </li>
            </ul>
           </div>
           <div class="jb-navigation-blog-menu-list">
            <ul>
             <li class="t_menu_home first">
              [linkx]
              
             </li>
             <li class="t_menu_category">
              [linkx]
              
             </li>
             <li class="t_menu_category">
              [linkx]
              
             </li>
             <li class="t_menu_category">
              [ahref]
              
             </li>
             <li class="t_menu_category">
              [ahref]
               [area1][mkey1]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[ahref]</li>
              
             </li>
             <li class="t_menu_category last">
              <a href="/category/%EA%B8%B0%ED%83%80%EC%9D%B4%EC%8A%88">
               기타이슈
              </a>
             </li>
            </ul>
           </div>
          </div>
         </nav>
        </div>
       </div>
       <div class="jb-line jb-line-header-bottom">
       </div>
      </div>
     </div>
    </div>
    <div class="jb-container jb-container-mt">
     <div class="jb-row jb-row-mt">
      <div class="jb-column jb-column-mt">
       <div class="jb-cell jb-cell-mt">
        <div class="jb-adsense jb-adsense-mt">
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="jb-background jb-background-main">
     <div class="jb-container jb-container-main">
      <div class="jb-row jb-row-main">
       <div class="jb-column jb-column-content">
        <div class="jb-cell jb-cell-content jb-cell-content-article">
         <article>
          <header>
           <div class="jb-content-title jb-content-title-article">
            <h2>
             <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
            </h2>
            <div class="jb-article-information">
             <ul>
              <li>
               <span class="jb-article-information-category">
                [ahref]
                 [linkx][ahref][area1][keywordx][pkeyx][linkx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref]
                
               </span>
              </li>
              <li>
               <span class="jb-article-information-date">
                2019.01.15 19:28
               </span>
              </li>
             </ul>
            </div>
           </div>
          </header>
          <div class="jb-adsense jb-adsense-ct">
          </div>
          <div class="jb-adsense jb-adsense-ctr">
          </div>
          <div class="jb-content jb-content-article">
           <div class="jb-article">
            <div itemprop="articleBody">
             <div class="tt_article_useless_p_margin">
              <div class="tt_adsense_top" style="margin-bottom:30px">
               <ins class="adsbygoogle" data-ad-client="ca-pub-9071395571766958" data-ad-format="auto" data-ad-slot="1822190359" data-full-width-responsive="true" style="display:block">
               </ins>
              </div>
              <p>
              </p>
              <p>
               <strong>
               </strong>
              </p>
              <p>
               <span style="COLOR: #ff0000">
                <span style="COLOR: #000000">
                 지난해 10월 중국에서는 아주 특별한 미술관 하나가 문을 열었습니다. 바로 모래언덕에 묻혀있는 미술관입니다. 오늘 [ahref][area1][keywordx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][area1][mkey1][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][mkey1][pkeyx][area1][mkey1][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                </span>
                <strong>
                 Red
                </strong>
               </span>
               <strong>
                Friday
               </strong>
               에서는 이 특별한 미술관에 대해 소개합니다.
              </p>
              <p>
              </p>
              <p>
               <strong>
                <span style="FONT-SIZE: 18pt">
                 1. 울렌스 부부를 아시나요?<li>[pkeyx]</li><li>[area1][mkey1]</li><li>[ahref]</li>[ahref][ahref]
                </span>
               </strong>
              </p>
              <p>
              </p>
              <hr/>
              울렌스 부부(Guy &amp; Myriam Ullens)는 벨기에 출신으로 세계적인 중국 미술 컬렉터이며 대부분은 중국의 변혁기(1980~1990) 작품을 사들였습니다. 울렌스는 베이징에 여행을 가는 사람이라면 한 번쯤은 들어본 베이징의 소호, 다산쯔789예술구에 울렌스현대예술센터(Ullens Center for Contemporary Art)를 세운 것으로도 유명합니다.
              <p style="FLOAT: none; TEXT-ALIGN: center; CLEAR: none">
               <span class="imageblock" style="display:inline-block;width:700px;HEIGHT: 466px; WIDTH: 700px;height:auto;max-width:100%">
                <span data-lightbox="lightbox" data-url="https://t1.daumcdn.net/cfile/tistory/99EA9C445C3C6AE218?download">
                </span>
               </span>
              </p>
              <p style="TEXT-ALIGN: right">
               <span style="FONT-SIZE: 8pt">
                <ins class="adsbygoogle" data-ad-client="ca-pub-9071395571766958" data-ad-format="auto" data-ad-slot="2536506227" data-full-width-responsive="true" style="DISPLAY: block">
                </ins>
                출처
               </span>
               <span style="FONT-SIZE: 8pt">
                : en.wikipedia.org
               </span>
              </p>
              <p>
              </p>
              <p style="TEXT-ALIGN: right">
              </p>
              <p>
              </p>
              <p style="TEXT-ALIGN: left">
               <strong>
                <span style="FONT-SIZE: 18pt">
                 2. 울렌스 센터 X OPEN Acchitecture
                </span>
               </strong>
              </p>
              <p>
              </p>
              <hr/>
              <p>
               OPEN Architecture는 울렌스 센터의 의뢰를 받아 Ullens Center for Contemporary Dune Art Museum이라는 이름을 가진 미술관을 지었습니다. 이 미술관은 베이징에서 서쪽으로 한 시간 거리에 있는 보하이만(Bohay Bay,
               <span class="word_txt" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0)">
                <span class="u_word_dic" data-hook="tip" data-lang="hj" data-type="arken">
                 渤
                </span>
                <span class="u_word_dic" data-hook="tip" data-lang="hj" data-type="arken">
                 海
                </span>
                <span class="u_word_dic" data-hook="tip" data-lang="hj" data-type="arken">
                 灣)
                </span>
               </span>
               에 위치하고 있으며 지난해 10월에 개장했습니다.
              </p>
              <p style="FLOAT: none; TEXT-ALIGN: center; CLEAR: none">
               <span class="imageblock" style="display:inline-block;width:700px;HEIGHT: 520px; WIDTH: 700px;height:auto;max-width:100%">
                <span data-lightbox="lightbox" data-url="https://t1.daumcdn.net/cfile/tistory/9970AD445C3C6B530D?download">
                </span>
               </span>
              </p>
              <p style="TEXT-ALIGN: right">
               <span style="FONT-SIZE: 8pt">
                UCCA Dune Art Museum 입구 / 출처 : OPEN Architecture
               </span>
              </p>
              <p>
              </p>
              <p style="TEXT-ALIGN: justify">
              </p>
              <p>
               [linkx]
                [area1][keywordx]<li>[area1][mkey1]</li>[linkx][area1][mkey1]<li>[pkeyx]</li>
               
              </p>
              <hr/>
              <p>
               이 미술관은 모래 언덕에 묻혀있습니다. 이유는 무엇일까요? 바다의 경관과 어우러지고 모래 언덕을 보존하기 위해서 OPEN Architecture에서 이렇게 설계했기 때문입니다. 이뿐만이 아니라 모래 언덕에 묻혀있어 여름에는 시원하고 겨울에는 따뜻하며 냉난방비가 비교적 적게 들어간다는 장점이 있습니다.
              </p>
              <p style="FLOAT: none; TEXT-ALIGN: center; CLEAR: none">
               <span class="imageblock" style="display:inline-block;width:700px;HEIGHT: 1407px; WIDTH: 700px;height:auto;max-width:100%">
                <span data-lightbox="lightbox" data-url="https://t1.daumcdn.net/cfile/tistory/99703F465C3C6CAC11?download">
                </span>
               </span>
              </p>
              <p style="FLOAT: none; TEXT-ALIGN: right; CLEAR: none">
               <font size="2">
                <span style="FONT-SIZE: 8pt">
                 <ins class="adsbygoogle" data-ad-client="ca-pub-9071395571766958" data-ad-format="auto" data-ad-slot="6040922374" data-full-width-responsive="true" style="DISPLAY: block">
                 </ins>
                 출처 : OPEN Architecture
                </span>
               </font>
               <span style="FONT-SIZE: 8pt">
               </span>
              </p>
              <p>
              </p>
              <p>
               <strong>
                <span style="FONT-SIZE: 18pt">
                 4. 동굴 형태의 미술관, 햇빛은 어떻게?
                </span>
               </strong>
              </p>
              <p>
              </p>
              <hr/>
              <p>
               모래 언덕에 파묻혀 있는 이 미술관은 동굴이 연결된 형태로 지어졌습니다. 지하에 있어서 자연광이 없으리라 생각하는 것은 큰 오산입니다. 태양궤적도를 통해 빛의 움직임을 계산한 후 자연광을 동굴 안으로 끌어들이기 위해 여러 개의 창을 모래 언덕 밖으로 냈습니다.
              </p>
              <p>
              </p>
              <p style="FLOAT: none; TEXT-ALIGN: center; CLEAR: none">
               <span class="imageblock" style="display:inline-block;width:700px;HEIGHT: 2415px; WIDTH: 700px;height:auto;max-width:100%">
                <span data-lightbox="lightbox" data-url="https://t1.daumcdn.net/cfile/tistory/991FC44D5C3C6FC71C?download">
                </span>
               </span>
              </p>
              <p style="FLOAT: none; TEXT-ALIGN: right; CLEAR: none">
               <span style="FONT-SIZE: 8pt">
                출처 : OPEN Architecture
               </span>
              </p>
              <p>
              </p>
              <p style="TEXT-ALIGN: right">
              </p>
              <p style="TEXT-ALIGN: justify">
              </p>
              <p>
               [area1][keywordx][area1][keywordx][area1][keywordx][ahref][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][ahref][pkeyx]
              </p>
              <p>
               <strong>
                <span style="FONT-SIZE: 18pt">
                 5. 바다가 보이는 카페
                </span>
               </strong>
              </p>
              <p>
              </p>
              <hr/>
              <p>
               미술관 내에는 바다를 조망할 수 있는 카페가 있습니다. 이 카페에의 테이블과 의자는 OPEN Architecture에서 직접 만들었는데, 테이블의 모양이 미술관의 각 전시관의 모양으로 디자인되어 있어 소소한 재미를 느끼게 해줍니다. 미술관 관람을 모두 마친 후 해변, 바다, 하늘을 바라보며 마시는 차 한 잔이 아주 운치 있을 것 같습니다.
              </p>
              <p style="TEXT-ALIGN: center">
               <span class="imageblock" style="display:inline-block;width:700px;HEIGHT: 1142px; WIDTH: 700px;height:auto;max-width:100%">
                <span data-lightbox="lightbox" data-url="https://t1.daumcdn.net/cfile/tistory/993EDE425C3DB31C2C?download">
                </span>
               </span>
              </p>
              <p style="TEXT-ALIGN: right">
               <span style="FONT-SIZE: 8pt">
                출처 : OPEN Architecture
                <div class="fb-like" data-action="like" data-href="https://www.facebook.com/goredfriday/" data-layout="button_count" data-share="true" data-show-faces="true" data-size="small">
                </div>
                <p>
                </p>
               </span>
              </p>
              <div data-widget_id="BoxPQDo8" id="dablewidget_BoxPQDo8">
              </div>
              <div data-widget_id="2o2456le" id="dablewidget_2o2456le">
              </div>
              <div class="tt_adsense_bottom" style="margin-top:30px">
               <div data-widget_id="WXprYW7Y" id="dablewidget_WXprYW7Y">
               </div>
               <ins class="adsbygoogle" data-ad-client="ca-pub-9071395571766958" data-ad-format="autorelaxed" data-ad-slot="2595211351" style="display:block">
               </ins>
              </div>
              <div class="container_postbtn #post_button_group">
               <div class="postbtn_like">
                <div class="wrap_btn">
                 <button class="btn_post like_btn uoc-icon" data-uoc-fetchurl="http://api.kakao.tistory.com/like/fetch?uid=2954030_202" data-uoc-pcurl="https://redfriday.co.kr/202" data-uoc-sc="202" data-uoc-svc="tistory" data-uoc-uid="2954030_202" type="button">
                  <div class="uoc-icon">
                   <li>[area1][mkey1]</li><li>[area1][mkey1]</li><li>[area1][keywordx]</li>
                  </div>
                 </button>
                </div>
                <div class="wrap_btn wrap_btn_share">
                 <button class="btn_post sns_btn btn_share" data-blog-title="RedFriday" data-description="지난해 10월 중국에서는 아주 특별한 미술관 하나가 문을 열었습니다. 바로 모래언덕에 묻혀있는 미술관입니다. 오늘 RedFriday에서는 이 특별한 미술관에 대해 소개합니다. 1. 울렌스 부부를 아시나요? 울렌스 부.." data-pc-url="https://redfriday.co.kr/202" data-profile-image="https://t1.daumcdn.net/cfile/tistory/99825D3A5C426E1D22" data-profile-name="Red-Friday" data-thumbnail-url="https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&amp;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F9970AD445C3C6B530D" data-title="건축학도가 알려주는 모래언덕에 묻혀있는 아주 특별한 미술관" type="button">
                  <span class="ico_postbtn ico_share">
                   공유하기
                  </span>
                 </button>
                </div>
                <div class="wrap_btn wrap_btn_etc" data-category-visibility="public" data-entry-id="202" data-entry-visibility="public">
                 <button class="btn_post btn_etc2" type="button">
                  <span class="ico_postbtn ico_etc">
                   글 요소
                  </span>
                 </button>
                </div>
               </div>
               <button class="btn_menu_toolbar btn_subscription #subscribe" data-blog-id="2954030" data-device="web_pc" data-url="https://redfriday.tistory.com/202" type="button">
                <em class="txt_state">
                 구독하기
                </em>
                <strong class="txt_tool_id">
                 RedFriday
                </strong>
                <span class="img_common_tistory ico_check_type1">
                </span>
               </button>
               <div class="postbtn_ccl" data-ccl-type="1">
                [linkx]
                
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="jb-adsense jb-adsense-cb">
           </div>
           <div class="jb-wrap-sns-share">
            <p>
             이 글을 공유하기
            </p>
            <div class="jb-sns-share jb-sns-share-facebook">
             [ahref]
             
            </div>
            <div class="jb-sns-share jb-sns-share-twitter">
             [ahref]
             
            </div>
            <div class="jb-sns-share jb-sns-share-google-plus">
             [linkx]
             
            </div>
            <div class="jb-sns-share jb-sns-share-kakaostory">
             [area1][mkey1][area1][mkey1][pkeyx][area1][keywordx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][ahref][area1][mkey1][ahref][ahref][pkeyx][area1][keywordx][pkeyx][linkx][linkx][pkeyx][linkx][pkeyx]
            </div>
            <div class="jb-sns-share jb-sns-share-naver">
             [linkx]
              <li>[linkx]</li><li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
             
            </div>
           </div>
           <div class="jb-related">
            <div class="jb-related-header-table">
             <div class="jb-related-header-table-row">
              <div class="jb-related-header-table-cell jb-related-header-table-cell-title">
               <h2>
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
              </div>
              <div class="jb-related-header-table-cell jb-related-header-table-cell-more">
               <div class="jb-related-more">
                <a href="/category/%EB%94%94%EC%9E%90%EC%9D%B8">
                 더 보기
                </a>
               </div>
              </div>
             </div>
            </div>
            <div class="jb-cell jb-cell-content jb-cell-index jb-cell-index-related thumb_type">
             <div class="jb-index-table jb-index-table-related">
              <div class="jb-index-table-row jb-index-table-row-related">
               <div class="jb-index-table-cell jb-index-table-cell-thumbnail jb-index-table-cell-related jb-index-table-cell-thumbnail-related">
                [ahref]
                
               </div>
               <div class="jb-index-table-cell jb-index-table-cell-information jb-index-table-cell-related jb-index-table-cell-information-related">
                <h3 class="jb-index-title jb-index-title-related">
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h3>
                <p class="jb-index-information jb-index-information-related">
                 <span class="jb-index-information-date jb-index-information-date-related">
                  2019.01.16
                 </span>
                </p>
                <p class="jb-index-read-more jb-index-read-more-related">
                 [ahref]
                 
                </p>
               </div>
              </div>
             </div>
            </div>
            <div class="jb-cell jb-cell-content jb-cell-index jb-cell-index-related thumb_type">
             <div class="jb-index-table jb-index-table-related">
              <div class="jb-index-table-row jb-index-table-row-related">
               <div class="jb-index-table-cell jb-index-table-cell-thumbnail jb-index-table-cell-related jb-index-table-cell-thumbnail-related">
                [linkx]
                
               </div>
               <div class="jb-index-table-cell jb-index-table-cell-information jb-index-table-cell-related jb-index-table-cell-information-related">
                <h3 class="jb-index-title jb-index-title-related">
                 <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
                </h3>
                <p class="jb-index-information jb-index-information-related">
                 <span class="jb-index-information-date jb-index-information-date-related">
                  2019.01.15
                 </span>
                </p>
                <p class="jb-index-read-more jb-index-read-more-related">
                 [linkx]
                 
                </p>
               </div>
              </div>
             </div>
            </div>
            <div class="jb-cell jb-cell-content jb-cell-index jb-cell-index-related thumb_type">
             [ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
            </div>
            <div class="jb-cell jb-cell-content jb-cell-index jb-cell-index-related thumb_type">
             <div class="jb-index-table jb-index-table-related">
              <div class="jb-index-table-row jb-index-table-row-related">
               <div class="jb-index-table-cell jb-index-table-cell-thumbnail jb-index-table-cell-related jb-index-table-cell-thumbnail-related">
                [ahref]
                
               </div>
               <div class="jb-index-table-cell jb-index-table-cell-information jb-index-table-cell-related jb-index-table-cell-information-related">
                <h3 class="jb-index-title jb-index-title-related">
                 [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
                </h3>
                <p class="jb-index-information jb-index-information-related">
                 <span class="jb-index-information-date jb-index-information-date-related">
                  2019.01.11
                 </span>
                </p>
                <p class="jb-index-read-more jb-index-read-more-related">
                 [ahref]
                 
                </p>
               </div>
              </div>
             </div>
            </div>
           </div>
           <p class="jb-discuss-count">
            <span class="jb-discuss-count-reply">
             <a href="p" onclick="alert('이 글에는 댓글을 달 수 없습니다\t'); return false">
              <span class="jb-discuss-count-label">
               댓글
              </span>
              <span id="commentCount202_0">
               <span class="jb-discuss-count-number">
                (0)
               </span>
              </span>
             </a>
            </span>
           </p>
           <div id="entry202Comment" style="display:block">
            <form action="/comment/add/202" method="post" onsubmit="return false" style="margin: 0">
            </form>
           </div>
          </div>
         </article>
        </div>
        <div class="jb-cell jb-cell-pagination">
         <div class="jb-pagination">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a>
             <span>
              ···
             </span>
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="/205">
             <span>
              508
             </span>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <a href="/200">
             <span>
              513
             </span>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [linkx]
            
           </li>
           <li>
            <li>[ahref]</li><li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1]<li>[ahref]</li>
           </li>
           <li>
            <a href="/5">
             <span>
              682
             </span>
            </a>
           </li>
           <li>
            [linkx]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class="jb-column jb-column-sidebar">
        <aside>
         <h2 class="jb-section-title jb-section-title-sidebar">
          [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
         </h2>
         <div class="module module_plugin">
          <div data-widget_id="Ql9je8X4" id="dablewidget_Ql9je8X4">
           <li>[area1][keywordx]</li><li>[linkx]</li>[pkeyx]<li>[ahref]</li><li>[ahref]</li>
          </div>
          <ins class="adsbygoogle" data-ad-client="ca-pub-9071395571766958" data-ad-format="autorelaxed" data-ad-slot="2595211351" style="display:block">
          </ins>
         </div>
        </aside>
        <p>
        </p>
       </div>
      </div>
     </div>
    </div>
    <div class="jb-background jb-background-mb">
     <div class="jb-container jb-container-mb">
      <div class="jb-row jb-row-mb">
       <div class="jb-column jb-column-mb">
        <div class="jb-cell jb-cell-mb">
         <div class="jb-adsense jb-adsense-mb">
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="jb-background jb-background-footer">
     <div class="jb-container jb-container-footer">
      <div class="jb-row jb-row-footer">
       [area1][keywordx][ahref][pkeyx]
      </div>
     </div>
    </div>
    <footer>
     <div data-widget_id="RoOPb67m" id="dablewidget_RoOPb67m">
     </div>
    </footer>
    <div class="jb-background jb-background-foot">
     <div class="jb-container jb-container-foot">
      <div class="jb-row jb-row-foot">
       <div class="jb-line jb-line-foot-top">
       </div>
       <div class="jb-column jb-column-foot jb-column-foot-1">
        <div class="jb-cell jb-cell-foot jb-cell-foot-1">
         <p style="TEXT-ALIGN: left">
          <span style="FONT-SIZE: 10pt">
           [linkx]
           
           <span style="COLOR: #5d5d5d">
            ｜
           </span>
           [linkx]
           
           <span style="COLOR: #5d5d5d">
           </span>
          </span>
          <span style="FONT-SIZE: 10pt">
           <span style="COLOR: #5d5d5d">
            ｜
           </span>
           [linkx]
           
           <span style="FONT-SIZE: 10pt">
            <span style="COLOR: #5d5d5d">
             ｜
            </span>
           </span>
          </span>
         </p>
         <p style="FLOAT: none; TEXT-ALIGN: center; CLEAR: none">
          <a class="tx-link" href="/_RpxkTj" target="_blank">
          </a>
         </p>
         <p>
         </p>
         <div class="jb-copyright">
          <h2>
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h2>
         </div>
        </div>
       </div>
       <div class="jb-column jb-column-foot jb-column-foot-2">
        <div class="jb-cell jb-cell-foot jb-cell-foot-2">
         <div class="jb-designed">
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   [linkx]
   
   <div id="fb-root">
    [area1][mkey1][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx]
   </div>
   <iframe id="editEntry" src="//redfriday.tistory.com/api" style="position:absolute;width:1px;height:1px;left:-100px;top:-100px">
   </iframe>
   <div class="#menubar menu_toolbar">
    <h2 class="screen_out">
     [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </h2>
    <div class="btn_tool">
     <button class="btn_menu_toolbar btn_subscription #subscribe" data-blog-id="2954030" data-device="web_pc" data-url="https://redfriday.tistory.com">
      <strong class="txt_tool_id">
       RedFriday
      </strong>
      <em class="txt_state">
       구독하기
      </em>
      <span class="img_common_tistory ico_check_type1">
      </span>
     </button>
    </div>
   </div>
   <div class="#menubar menu_toolbar">
   </div>
   <div class="layer_tooltip">
    <div class="inner_layer_tooltip">
     <p class="desc_g">
     </p>
    </div>
   </div>
   <div class="layer_post" id="tistoryEtcLayer">
   </div>
   <div class="layer_post" id="tistorySnsLayer">
   </div>
  </body>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0235
  </b>
 </body>
</html>
|<---