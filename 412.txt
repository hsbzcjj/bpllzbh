--->|<!DOCTYPE doctype html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="no" http-equiv="imagetoolbar"/>
  <meta content="IE=10,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="혹스베이 꿀 생산 공장, 250개 태양열 전지판 설치" name="title">
   <meta content="혹스베이 꿀 생산 공장, 250개 태양열 전지판 설치" name="subject">
    <meta content="뉴질랜드 코리아 포스트 :: 뉴질랜드 교민을 위한 커뮤니티" name="publisher">
     <meta content="노영례기자" name="author"/>
     <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
     <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="노영례기자" property="og:author"/>
     <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="https://www.nzkoreapost.com/data/editor/1908/f7752e4b691250d40861951b086114af_1565560689_1074.png" property="og:image"/>
     <title>
      [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </title>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="no-responsive is-pc">
  <div class="wrapper ko">
   <aside class="at-lnb">
    <div class="container">
     [ahref]
     
     <nav class="at-lnb-menu">
      <ul class="menu">
       <li class="second" onclick="window.location='/category.php?gr_id=news';" style="width:22px; background:url('/images/menu_text.png') no-repeat -70px -182px;" title="News">
       </li>
       <li class="second" onclick="window.location='/bbs/board.php?bo_table=news_column';" style="width:22px; background:url('/images/menu_text.png') no-repeat -70px -208px;" title="News Column">
       </li>
       <li class="second" onclick="window.location='/category.php?gr_id=community';" style="width:42px; background:url('/images/menu_text.png') no-repeat -70px -234px;" title="Community">
       </li>
       <li class="second" onclick="window.location='/category.php?gr_id=market';" style="width:42px; background:url('/images/menu_text.png') no-repeat -70px -260px;" title="Market">
       </li>
       <li class="second" onclick="window.location='/bbs/board.php?bo_table=market_car';" style="width:33px; background:url('/images/menu_text.png') no-repeat -70px -390px;" title="Car">
       </li>
       <li class="second" onclick="window.location='/category.php?gr_id=migration';" style="width:46px; background:url('/images/menu_text.png') no-repeat -70px -312px;" title="Migration">
       </li>
       <li class="second" onclick="window.location='/category.php?gr_id=travel';" style="width:22px; background:url('/images/menu_text.png') no-repeat -70px -338px;" title="Travel">
       </li>
       <li class="second" onclick="window.location='/zomato.php';" style="width:20px; background:url('/images/menu_text.png') no-repeat -70px -286px;" title="Zomato">
       </li>
       <li class="second" onclick="window.location='/category.php?gr_id=property';" style="width:31px; background:url('/images/menu_text.png') no-repeat -70px -364px;" title="Property">
       </li>
       <li class="second" onclick="window.open('https://kpop.nzkoreapost.com', '_blank');" style="width:36px; background:url('/images/menu_text.png') no-repeat -70px -156px;">
       </li>
       <li class="second" onclick="window.location='/yellowpage.php?bo_table=yellowpage_companies';" style="width:33px; background:url('/images/menu_text.png') no-repeat -70px -416px;" title="Yellowpage">
       </li>
       <li class="second" style="width:30px; background:url('/images/menu_text.png') no-repeat -70px -442px;">
        <a class="pointer asideButton" title="Login">
        </a>
       </li>
       <li class="second" onclick="window.location='https://www.nzkoreapost.com/bbs/register.php';" style="width:42px; background:url('/images/menu_text.png') no-repeat -70px -468px;" title="Register">
       </li>
      </ul>
     </nav>
    </div>
   </aside>
   <header>
    <div class="at-header">
     <div class="container">
      <div class="header-wrap text-center">
       <div class="clearfix">
       </div>
      </div>
     </div>
    </div>
    <div class="clearfix">
    </div>
   </header>
   <nav class="collapse at-menu-all" id="menu_all">
    <div class="container">
     [linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][ahref][pkeyx][pkeyx][area1][keywordx][area1][mkey1][pkeyx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][ahref][linkx][linkx][ahref][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
    </div>
   </nav>
   <div class="at-container">
    <div class="at-content">
     <div class="container">
      <div class="row at-row">
       <div class="col-md-1">
       </div>
       <div class="col-md-8 at-col">
        <div class="at-content-main">
         <div class="view-wrap">
          <div class="div-tab tabs miso-tab swipe-tab" id="cat-header">
           <div class="main-tab bg-light">
            <ul class="nav nav-green nav-tabs">
             <li class="menu">
              <a href="/category.php?gr_id=news" title="News Home">
               <div style="width:38px; background:url(/images/menu_text.png) no-repeat -140px -182px;">
               </div>
              </a>
             </li>
             <li class="menu active">
              [linkx]
              
             </li>
             <li class="menu">
              [linkx]
              
             </li>
             <li class="menu">
              [linkx]
              
             </li>
             <li class="menu">
              <a href="/bbs/board.php?bo_table=news_general" title="International/Entertainment">
               <div style="width:54px; background:url(/images/menu_text.png) no-repeat -140px -312px;">
               </div>
              </a>
             </li>
             <li class="menu">
              [linkx]
              
             </li>
             <li class="menu">
              [ahref]
              
             </li>
             <li class="menu">
              [ahref]
              
             </li>
             <li class="menu">
              [ahref]
              
             </li>
             <li id="cat-search" style="float:right;">
              <div class="header-search">
               <form class="form" method="get" name="fsearch" role="form">
                <div class="input-group input-group-sm" style="width:180px;padding:4px 2px 4px;">
                 <span class="input-group-btn">
                  <button class="btn btn-color btn-block button-green" type="submit">
                   검색
                  </button>
                 </span>
                </div>
               </form>
              </div>
             </li>
            </ul>
           </div>
          </div>
          <div class="agnb-bottom" style="height:0px;border-bottom:none;max-width:100%;width:752px;">
          </div>
          <h1>
           <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
          </h1>
          <div class="panel panel-default view-head no-attach">
           <div class="panel-heading">
            <div class="font-12 text-muted">
             <i class="fa fa-user">
             </i>
             [ahref]
             
             <span class="hidden-xs">
              (125.♡.255.129)
             </span>
             <span class="hidden-xs">
              <span class="sp">
              </span>
              <i class="fa fa-tag">
              </i>
              뉴질랜드
             </span>
             <span class="sp">
             </span>
             <i class="fa fa-comment">
             </i>
             0
             <span class="sp">
             </span>
             <i class="fa fa-eye">
             </i>
             721
             <span class="pull-right">
              <i class="fa fa-clock-o">
              </i>
              2019.08.12 09:58
             </span>
            </div>
           </div>
          </div>
          <div class="view-img noselect">
          </div>
          <div class="view-content noselect">
           <p>
            <span style="font-size:12pt;font-family:'굴림', gulim;">
             <a href="/one-news/new-zealand/hawkes-bay-honey-producer-installs-250-solar-panels-in-bid-help-environment" target="_blank">
              국내 최대 벌꿀 생산 공장 중 하나인 혹스베이 꿀 생산 공장에 환경을 위해 250개의 태양열 전지판이 설치되었다.
             </a>
            </span>
           </p>
           <p>
           </p>
           <p>
            <span style="font-size:12pt;font-family:'굴림', gulim;">
             혹스베이 지역은 1년에 2,000시간 이상의 일광을 받고 있으며, 아라타키 허니는 15만 달러를 들여 태양열 전지판을 설치해, 7년 안에 전력 요금을 절반으로 줄일 계획을 가지고 있다. 이 회사는 이러한 노력으로 탄소 배출 또한 줄일 것으로 기대하고 있다.
            </span>
           </p>
           <p>
           </p>
           <p>
            <span style="font-size:12pt;font-family:'굴림', gulim;">
             이 공장의 태양열 전지판은 혹스베이에서 가장 큰 규모로 알려져 있으며, Ecoefficient Solutions에서는 이같은 태양열 전지 패널 규모는 18,000평방미터에 나무를 심는 것과 같은 환경적 효과를 거둔다고 말했다.
            </span>
           </p>
           <p>
           </p>
           <p>
            <span style="font-size:12pt;font-family:'굴림', gulim;">
             매년 1,000톤 이상의 꿀을 생산하는 이 회사는, 환경보호를 위해 태양열 전지판을 설치하는 것 이외에도 플라스틱 포장재에 대한 문제도 관심을 가지고 있다.
            </span>
            <span style="font-size:12pt;font-family:'굴림', gulim;">
             ​
            </span>
           </p>
           <p>
            [area1][mkey1]<li>[pkeyx]</li>[pkeyx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>
           </p>
           <p>
            <span style="font-size:12pt;font-family:'굴림', gulim;">
             [ahref]
             
             <br style="clear:both;"/>
            </span>
           </p>
          </div>
          <div class="view-icon">
           <div class="pull-right">
            <div class="form-group">
            </div>
           </div>
           <div class="pull-left">
            <div class="form-group">
             <ul id="bo_v_sns">
              <li>
               [linkx]
               
              </li>
              <li>
               <a href="/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=twitter" onclick="apms_sns('twitter','https://www.nzkoreapost.com/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=twitter'); return false;" target="_blank">
               </a>
              </li>
              <li>
               <a href="/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=gplus" onclick="apms_sns('googleplus','https://www.nzkoreapost.com/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=gplus'); return false;" target="_blank">
               </a>
              </li>
              <li>
               <a href="/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=kakaostory" onclick="apms_sns('kakaostory','https://www.nzkoreapost.com/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=kakaostory'); return false;" target="_blank">
               </a>
              </li>
              <li>
               <a href="/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=naverband" onclick="apms_sns('naverband','https://www.nzkoreapost.com/bbs/sns_send.php?longurl=http%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26wr_id%3D32616&amp;title=%ED%98%B9%EC%8A%A4%EB%B2%A0%EC%9D%B4+%EA%BF%80+%EC%83%9D%EC%82%B0+%EA%B3%B5%EC%9E%A5%2C+250%EA%B0%9C+%ED%83%9C%EC%96%91%EC%97%B4+%EC%A0%84%EC%A7%80%ED%8C%90+%EC%84%A4%EC%B9%98&amp;sns=naverband'); return false;" target="_blank">
               </a>
              </li>
             </ul>
            </div>
           </div>
           <div class="clearfix">
           </div>
          </div>
          <h3 class="view-comment">
           [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
          </h3>
          <section class="comment-media" id="bo_vc">
          </section>
          <div class="well text-center">
           <a href="/login.php?wr_id=32616&amp;url=https%3A%2F%2Fwww.nzkoreapost.com%2Fbbs%2Fboard.php%3Fbo_table%3Dnews_all%26amp%3Bwr_id%3D32616">
            로그인한 회원만 댓글 등록이 가능합니다.
           </a>
          </div>
          <div class="clearfix">
          </div>
          <div class="view-btn text-right">
           <div class="btn-group">
            [linkx]
            
           </div>
           <div class="clearfix">
           </div>
          </div>
         </div>
         <div class="" id="ads_plus">
          <h4 class="header">
           <i class="fa fa-thumbs-up">
           </i>
           플러스 광고
          </h4>
          <div class="box">
           <div class="company">
            <h5 class="title">
             <a href="z" target="_blank">
              MIK - 화장품 전문 쇼핑몰
             </a>
            </h5>
            <h5>
             mik,buymik,화장품,한국,라네즈,설화수,헤라,이니스프리,마몽드,잇츠스킨,후,마스크팩,믹,바이믹 T.
             <a href="0">
              097777110
             </a>
            </h5>
           </div>
           <div class="company">
            <h5 class="title">
             [linkx]
             
            </h5>
            <h5>
             한 번의 만남으로 후회없는 선택을 하세요.이민 T.
             [linkx]
             
            </h5>
           </div>
           <div class="company">
            <h5 class="title">
             [ahref]
             
            </h5>
            <h5>
             전자 제어, 컴퓨터스캔, 사고수리(판넬페인트, 보험수리), 타이어, WOF , 일반정비

   T.
             <a href="7">
              09 825 0007
             </a>
            </h5>
           </div>
          </div>
         </div>
         <section class="board-list">
          <div class="panel panel-default list-notice">
           <div class="panel-heading">
            <h4 class="panel-title">
             Notice
            </h4>
           </div>
           <div class="list-group">
           </div>
          </div>
          <aside class="list-category">
           <div class="div-tab tabs trans-top">
            <ul class="nav nav-tabs">
             <li class="active">
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/board.php?bo_table=news_all&amp;sca=%ED%95%9C%EC%9D%B8%EB%89%B4%EC%8A%A4">
               한인뉴스
              </a>
             </li>
            </ul>
           </div>
           <div class="dropdown visible-xs">
            <a aria-expanded="false" aria-haspopup="true" class="btn btn-color btn-block" data-target="#" data-toggle="dropdown" href="#" id="categoryLabel">
             전체(28,681)
            </a>
            <ul aria-labelledby="categoryLabel" class="dropdown-menu" role="menu">
             <li class="selected">
              <a href="/board.php?bo_table=news_all">
               전체
              </a>
             </li>
             <li>
              <a href="/board.php?bo_table=news_all&amp;sca=%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C">
               뉴질랜드
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </aside>
          <div class="list-wrap">
           <form action="/board_list_update.php" class="form" id="fboardlist" method="post" name="fboardlist" onsubmit="return fboardlist_submit(this);" role="form">
            <div class="media list-media">
             <div class="list-item wr-premium">
              <div class="img img-left pull-left">
               <div class="imgframe">
                [area1][keywordx][ahref][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][pkeyx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'director', 'KoreaPost', 'ZGlyZWN0b3JAa29yZWFwb3N0LmNvLm56', '');" style="display:inline-block;">
                  <span class="member">
                   KoreaPost
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					15,106
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.02.22
                </span>
               </div>
               <div class="list-cont text-muted">
                영어가 모국어가 아닌 한인들은 뉴질랜드에서 태어나지 않은 이상 끊임없이 제 2외국어인 영어 공부를 하며 자신이 원하는 목표를 향해 달려간다. 2019년, 영어 공부는 어디에서 어떻…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item wr-premium">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, '휴람', '휴람', '', '');" style="display:inline-block;">
                  <span class="member">
                   휴람
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 한인뉴스
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					5,198
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.03.12
                </span>
               </div>
               <div class="list-cont text-muted">
                해외교민을 위해 드리는 건강선물 종합검진!!선택의 폭이 더 넓어졌습니다!한 차원 높은 고국방분 의료서비스 이제 휴람을 이용해 보세요!!
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item wr-premium">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 한인뉴스
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					1,014
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.02
                </span>
               </div>
               <div class="list-cont text-muted">
                "내 힘이 닿는 데까지 끝까지..."94세의 김복동 할머니는 자신의 힘이 닿는 데까지 평화,인권운동의 길을 걸어가겠노라고 했었다.김복동 할머니. 그녀는 갔지만, 사람들 마음에 남아…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             [linkx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]<li>[area1][keywordx]</li><li>[area1][mkey1]</li>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [ahref]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [ahref]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					490
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 4시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                오클랜드 도심에서 스쿨버스와 밴이 충돌해 부상자가 다수 발생했으나 큰 부상자는 없는 것으로 전해졌다.사고는 8월 13일(화) 오후 2시 30분이 되기 직전에 도심의 퀸(Queen)…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32629">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [ahref]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |[ahref][area1][keywordx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][ahref][linkx][pkeyx]
                </span>
                조회
					269
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 4시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                10대 초반 소년이 3일째 귀가하지 않아 경찰이 주민들에게 협조를 요청했다.북섬 노스랜드의 케리케리(Kerikeri)에 사는 잔 루이프록-파머(Zane Ruifrok-Palmer,…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32628">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'hantan', '서현', 'amFtZXNoc0BoYW5tYWlsLm5ldA==', '');" style="display:inline-block;">
                  <span class="member">
                   서현
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					295
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 5시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                크라이스트처치 지역에서 경찰이 며칠 동안 3명의 위험한 범죄 용의자들을 뒤쫒는 가운데 용의자 중 한 명이 자수했다.경찰 관계자는 애런 하위(Aaron Howie,47, 사진)가 1…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'hantan', '서현', 'amFtZXNoc0BoYW5tYWlsLm5ldA==', '');" style="display:inline-block;">
                  <span class="member">
                   서현
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					388
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 5시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                지역사회에 잘 알려진 한 마오리 노인이 숨진 채 발견돼 경찰이 조사에 나섰다.8월 11일(일) 밤에 오클랜드 오네훙가(Onehunga)의 펠릭스(Felix) 스트리트의 공영주택 단…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'director', 'KoreaPost', 'ZGlyZWN0b3JAa29yZWFwb3N0LmNvLm56', '');" style="display:inline-block;">
                  <span class="member">
                   KoreaPost
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 한인뉴스
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					1,304
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 10시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32625">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'imnews320', '노영례기자', '', '');" style="display:inline-block;">
                  <span class="member">
                   노영례기자
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |[pkeyx]<li>[area1][mkey1]</li><li>[ahref]</li>
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					288
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 10시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                말보로에서 음주 운전 반복 운전자가 의무적으로 알코올 인터락이 있는 차량을 운전해야 함에도 불구하고 다른 차를 운전하다 음주 단속에 걸렸다.알코올 인터락 장치가 점화 장치에 장착된…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32623">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					614
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 11시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                앤드류 리틀 정부통신보안국 장관 앤드류 리틀은 화웨이가 5G 업그레이드 작업이 차단되는 경우 뉴질랜드를 떠날 수 있다고 위협한 것에 대해 경고했다.지난해 뉴질랜드 정부통신보안국(G…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32622">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					176
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 12시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 수혈이 필요한 사람들의 수가 최고치를 보이고 있지만, 헌혈을 하는 사람들의 수가 급격하게 줄어들고 있는 것으로 알려졌다.매년 ¼ 정도의 헌혈자들이 줄어들고 …
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32621">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [ahref]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					399
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 12시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 어제 오전 넬슨 지역에서의 지진에 이어, 남섬 하단 지역에서도 강한 지진이 일어났다.지오넷은 어제 밤 10시 35분에 밀포드 사운드 북쪽 15Km, 지하 1…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32620">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'director', 'KoreaPost', 'ZGlyZWN0b3JAa29yZWFwb3N0LmNvLm56', '');" style="display:inline-block;">
                  <span class="member">
                   KoreaPost
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					252
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 12시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 어제 TVNZ 뉴스에서는 기차 건널목을 건너는 사람들이 기차가 다가오는 상황에서 간신히 피했던 장면들이 공개되었으며, 관계 당국은 시민들에게 건널목을 건너기…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32619">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [ahref]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					343
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 12시간전
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 어제 밤 오클랜드 시내 지역에 강한 바람이 불어오면서, 대형 보트들이 선착장에서 뒤집히거나 떠밀려 다니고 있으며, 쌓아놓은 콘테이너들이 쓰러지기도 하였다.오…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32618">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'imnews320', '노영례기자', 'aW1uZXdzMzJAaGFubWFpbC5uZXQ=', '');" style="display:inline-block;">
                  <span class="member">
                   노영례기자
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					764
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                월요일 뉴 플리머스에서 토네이도가 강타해 한 사람이 다쳤다.화재 및 긴급 뉴질랜드에서는 토네이도가 뉴 플리머스의 Paraite Road에 있는 건물을 강타했고, 이로 인해 한 사람…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'imnews320', '노영례기자', '', '');" style="display:inline-block;">
                  <span class="member">
                   노영례기자
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					410
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                남섬 북부 지역의 넬슨 근처에서 5.2 지진이 발생했다.쿡 해협을 가로지르는 울퉁불퉁한 느낌의 지진 흔들림은 많은 사람들이 느낀 것으로 Geonet 사이트에 보고되었다.월요일 오전…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <div class="label-cap bg-blue">
                   Now
                  </div>
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32616">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					722
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                국내 최대 벌꿀 생산 공장 중 하나인 혹스베이 꿀 생산 공장에 환경을 위해 250개의 태양열 전지판이 설치되었다.혹스베이 지역은 1년에 2,000시간 이상의 일광을 받고 있으며, …
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32615">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'imnews320', '노영례기자', '', '');" style="display:inline-block;">
                  <span class="member">
                   노영례기자
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |<li>[area1][keywordx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[linkx]
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					1,769
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                오클랜드 교통국에서는 도시 전역에 더많은 CCTV카메라를 설치해 네트워크에 추가할 수 있는 방법을 찾고 있으며, 이는 공공 안전 개선의 핵심이라고 밝혔다.그러나, CCTV전문가는 …
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'director', 'KoreaPost', '', '');" style="display:inline-block;">
                  <span class="member">
                   KoreaPost
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					796
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 한 전기 공사 회사에게 수습 기사를 감독하지 않고 작업을 한 두 차례의 작업 사유로 만 달러가 넘는 벌금이 부과된 것으로 알려졌다.2017년에 있었던 일로,…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32613">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [ahref]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					791
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 법률 협회와 같은 The New Zealand Law Society는 최근 법률 회사들에서의 성 희롱과 추문으로 논란의 대상이 되고 있는 가운데, 파티에 여…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32612">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'director', 'KoreaPost', 'ZGlyZWN0b3JAa29yZWFwb3N0LmNvLm56', '');" style="display:inline-block;">
                  <span class="member">
                   KoreaPost
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					702
                <span class="">
                 [ahref]<li>[area1][mkey1]</li><li>[pkeyx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 웰링턴 열차 서비스 종업원은 다른 승객에게 인종 차별적인 욕설을 한 십대 소녀를 강제로 내리게 하고, 인종 차별에 대하여 다른 모든 사람들도 용납하지 말아야…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][mkey1][ahref][ahref][area1][keywordx][ahref][pkeyx][ahref][area1][keywordx][area1][mkey1][area1][mkey1][pkeyx]
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'director', 'KoreaPost', 'ZGlyZWN0b3JAa29yZWFwb3N0LmNvLm56', '');" style="display:inline-block;">
                  <span class="member">
                   KoreaPost
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					798
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.12
                </span>
               </div>
               <div class="list-cont text-muted">
                (KCR방송=뉴질랜드) 어제 전국적으로 강한 바람과 함께 많은 피해를 일으켰던 날씨를 보였으며, 오클랜드 지역에서도 강한 바람이 불면서 시내 중심 이벤트 센터의 지붕이 뜯겨졌으며,…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32610">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					1,423
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.11
                </span>
               </div>
               <div class="list-cont text-muted">
                캔터베리 경찰이 가석방 조건을 어긴 살인범과 은행강도, 사람을 치어 사망하게 만든 뺑소니 수배범 등 모두 3명의 위험 인물들을 한꺼번에 추적 중이다.경찰에 따르면 이들 중 애런 호…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32609">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					789
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.11
                </span>
               </div>
               <div class="list-cont text-muted">
                고객이 주문하면 '짧은 읽을거리(short stories)'가 자판기처럼 즉시 인쇄돼 나오는 '벤딩 머신(vending machine)'이 등장했다.화제의 기계는 이번 주에 남섬 …
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [linkx]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 <a href=";" onclick="showSideView(this, 'hantan', '서현', 'amFtZXNoc0BoYW5tYWlsLm5ldA==', '');" style="display:inline-block;">
                  <span class="member">
                   서현
                  </span>
                 </a>
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |[ahref]<li>[ahref]</li>[pkeyx]
                </span>
                조회
					486
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.11
                </span>
               </div>
               <div class="list-cont text-muted">
                홍수로 인한 강의 범람으로 남섬 동해안을 잇는 국도 1호선 중 일부 구간을 운전자들이 피해주도록 경찰과 도로관리 당국이 요청하고 있다.8월 11일(일) 오후 4시 54분에 경찰 웹…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  [ahref]
                  
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [linkx]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					795
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.11
                </span>
               </div>
               <div class="list-cont text-muted">
                뉴질랜드 공군이 남태평양의 한 외딴 섬에 물품 공수작전을 펼쳤다.이번 주 초에 약 3톤에 달하는 각종 물품이 낙하산으로 투하된 곳은 뉴질랜드 본토에서 북쪽으로 1000km가량 떨어…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="media list-media">
             <div class="list-item">
              <div class="img img-left pull-left">
               <div class="imgframe">
                <div class="img-wrap" style="padding-bottom:71.26%;">
                 <div class="img-item">
                  <a href="/bbs/board.php?bo_table=news_all&amp;wr_id=32606">
                  </a>
                 </div>
                </div>
               </div>
              </div>
              <div class="media-body">
               <h2 class="media-heading">
                [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
               </h2>
               <div class="list-details text-muted">
                <span class="hidden-xs">
                 [ahref]
                 
                 <span class="list-sp">
                  |
                 </span>
                </span>
                <span class="hidden-xs">
                 뉴질랜드
                 <span class="list-sp">
                  |
                 </span>
                </span>
                댓글
					0
                <span class="list-sp">
                 |
                </span>
                조회
					1,435
                <span class="">
                 <span class="list-sp">
                  |
                 </span>
                 2019.08.11
                </span>
               </div>
               <div class="list-cont text-muted">
                에어 뉴질랜드는 10만 이상의 에어포인트 회원(Airpoints members)의 데이터가 사이버 공격에 노출되었다고 밝혔다.이 항공사는 지난 8월 9일, 피싱 이메일을 통한 고객…
                <span class="font-11 text-muted">
                 더보기
                </span>
               </div>
              </div>
              <div class="clearfix">
              </div>
             </div>
            </div>
            <div class="list-btn-box">
             <div class="form-group list-btn font-12">
              <div class="btn-group">
               [linkx]
               
               <a class="btn btn-color btn-sm" href="/rss.php?bo_table=news_all">
                <i class="fa fa-rss">
                </i>
               </a>
              </div>
             </div>
             <div class="clearfix">
             </div>
            </div>
           </form>
           <div class="list-page text-center">
            [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[ahref]</li><li>[ahref]</li>[pkeyx]
           </div>
           <div class="clearfix">
           </div>
           <div aria-hidden="true" aria-labelledby="myModalLabel" class="modal fade" id="searchModal" role="dialog" tabindex="-1">
            <div class="modal-dialog modal-sm">
             <div class="modal-content">
              <div class="modal-body">
               <div class="text-center">
                <h4 id="myModalLabel">
                 <i class="fa fa-search fa-lg">
                 </i>
                 Search
                </h4>
               </div>
               <form class="form" method="get" name="fsearch" role="form" style="margin-top:20px;">
                <div class="form-group">
                 <label class="sound_only" for="sfl">
                  검색대상
                 </label>
                 <select class="form-control input-sm" id="sfl" name="sfl">
                  <option value="wr_subject">
                   제목
                  </option>
                  <option value="wr_content">
                   내용
                  </option>
                  <option value="wr_subject||wr_content">
                   제목+내용
                  </option>
                  <option value="mb_id,1">
                   회원아이디
                  </option>
                  <option value="mb_id,0">
                   회원아이디(코)
                  </option>
                  <option value="wr_name,1">
                   글쓴이
                  </option>
                  <option value="wr_name,0">
                   글쓴이(코)
                  </option>
                 </select>
                </div>
                <div class="form-group">
                 <label class="sound_only" for="stx">
                  검색어
                  <strong class="sound_only">
                   필수
                  </strong>
                 </label>
                </div>
                <div class="btn-group btn-group-justified">
                 <div class="btn-group">
                  <button class="btn btn-color" type="submit">
                   <i class="fa fa-check">
                   </i>
                  </button>
                 </div>
                 <div class="btn-group">
                  <button class="btn btn-black" data-dismiss="modal" type="button">
                   <i class="fa fa-times">
                   </i>
                  </button>
                 </div>
                </div>
               </form>
              </div>
             </div>
            </div>
           </div>
          </div>
         </section>
        </div>
       </div>
       <div class="col-md-3 at-col">
        <div class="at-content-side">
         <div class="side-wrap">
          <div class="row side-row">
           <div class="col-md-12 col-sm-6 side-col">
            <div class="side-ad">
             <div class="side-ad-70 first">
              [ahref]
              
             </div>
             <div class="side-ad-70">
              [linkx]
              
             </div>
             <div class="right-ad-203">
              <li>[area1][mkey1]</li>[area1][keywordx][linkx]<li>[pkeyx]</li>
             </div>
             <div class="right-ad-203">
              <a href="/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=1334" onclick="click_ad('122', 'http://www.nzkoreapost.com/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=1334', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              <a href="/hanllove88" onclick="click_ad('146', 'http://blog.naver.com/hanllove88', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              <a href="/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=1318" onclick="click_ad('644', 'http://www.nzkoreapost.com/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=1318', 'banner');" target="_blank">
               <li>[linkx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[area1][keywordx]<li>[area1][keywordx]</li>
              </a>
             </div>
             <div class="right-ad-203">
              [linkx]
              
             </div>
             <div class="right-ad-203">
              <a href="/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=171" onclick="click_ad('150', 'http://www.nzkoreapost.com/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=171', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              <a href="/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=538" onclick="click_ad('786', 'https://www.nzkoreapost.com/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=538', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              [ahref]
              
             </div>
             <div class="right-ad-203">
              [linkx]
              
             </div>
             <div class="right-ad-203">
              <a href="/hannaconsultant " onclick="click_ad('94', 'http://vivian213.wix.com/hannaconsultant ', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              <a href="/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=1328" onclick="click_ad('145', 'http://www.nzkoreapost.com/yellowpage.php?bo_table=yellowpage_companies&amp;yp=d&amp;wr_id=1328', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              <a href="/bbs/board.php?bo_table=market_sale&amp;wr_id=10244" onclick="click_ad('293', 'http://www.nzkoreapost.com/bbs/board.php?bo_table=market_sale&amp;wr_id=10244', 'banner');" target="_blank">
              </a>
             </div>
             <div class="right-ad-203">
              [ahref]
              
             </div>
             <div class="right-ad-203">
              [linkx]
              
             </div>
            </div>
            <div class="text-center hidden-xs">
             <div class="h15">
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="sidebar-left">
      <div class="visible-lg">
       <div style="width:100px; height:600px">
        <ul class="topleft" style="list-style-type:none;padding:0;margin:0;">
         <li>
          <li>
           <div class="left-ad-207">
            [linkx]
            
           </div>
           <div class="left-ad-336">
            [ahref]
            
           </div>
           <div class="left-ad-142">
            [linkx]
            
           </div>
          </li>
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
   <footer>
    <div class="at-footer">
     <div class="container">
      <div class="row col">
       <div class="col-md-3 col-sm-6">
        <h4>
         About
        </h4>
        <p>
         The Korea Post was established in June 1992. Being the first of its kind available for Korean community in New Zealand, we have continued to deliver quality information and current affairs about both Korea and New Zealand.
        </p>
        <div class="sns-share-icon">
         [ahref]
         
         [ahref]
         
         [linkx]
         
         <a href="/bbs/sns_send.php?longurl=https%3A%2F%2Fwww.nzkoreapost.com&amp;title=%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EC%BD%94%EB%A6%AC%EC%95%84+%ED%8F%AC%EC%8A%A4%ED%8A%B8+%3A%3A+%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EA%B5%90%EB%AF%BC%EC%9D%84+%EC%9C%84%ED%95%9C+%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0&amp;sns=kakaostory" onclick="apms_sns('kakaostory', 'https://www.nzkoreapost.com/bbs/sns_send.php?longurl=https%3A%2F%2Fwww.nzkoreapost.com&amp;title=%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EC%BD%94%EB%A6%AC%EC%95%84+%ED%8F%AC%EC%8A%A4%ED%8A%B8+%3A%3A+%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EA%B5%90%EB%AF%BC%EC%9D%84+%EC%9C%84%ED%95%9C+%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0&amp;sns=kakaostory'); return false;" target="_blank">
         </a>
         <a href="/bbs/sns_send.php?longurl=https%3A%2F%2Fwww.nzkoreapost.com&amp;title=%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EC%BD%94%EB%A6%AC%EC%95%84+%ED%8F%AC%EC%8A%A4%ED%8A%B8+%3A%3A+%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EA%B5%90%EB%AF%BC%EC%9D%84+%EC%9C%84%ED%95%9C+%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0&amp;sns=naverband" onclick="apms_sns('naverband', 'https://www.nzkoreapost.com/bbs/sns_send.php?longurl=https%3A%2F%2Fwww.nzkoreapost.com&amp;title=%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EC%BD%94%EB%A6%AC%EC%95%84+%ED%8F%AC%EC%8A%A4%ED%8A%B8+%3A%3A+%EB%89%B4%EC%A7%88%EB%9E%9C%EB%93%9C+%EA%B5%90%EB%AF%BC%EC%9D%84+%EC%9C%84%ED%95%9C+%EC%BB%A4%EB%AE%A4%EB%8B%88%ED%8B%B0&amp;sns=naverband'); return false;" target="_blank">
         </a>
        </div>
       </div>
       <div class="col-md-3 col-sm-6">
        <h4>
         Information
        </h4>
        <ul>
         <li>
          <a href="/bbs/page.php?hid=intro">
           사이트 소개
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          <a href="/bbs/page.php?hid=privacy">
           개인정보 취급방침
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/bbs/page.php?hid=disclaimer">
           책임의 한계와 법적고지
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
       </div>
       <div class="col-md-3 col-sm-6" style="word-wrap: normal !important;">
        <h4>
         Contacts
        </h4>
        <p>
         Address : Unit 9-30 Upper Queen St, Auckland, New Zealand
         <br/>
         P.O.Box 68340 Newton, Auckland, New Zealand
         <br/>
         Phone : 64-9-379-3435
         <br/>
         Email : support@koreapost.co.nz
        </p>
       </div>
       <div class="col-md-3 col-sm-6">
        <h4>
         Statistics
         <span style="font-size:80%;">
          [ Unique Daily IP Visits ]
         </span>
        </h4>
        <ul>
         <li>
          Current
          <span class="pull-right">
           611(24)
          </span>
         </li>
         <li>
          Today
          <span class="pull-right">
           11,244
          </span>
         </li>
         <li>
          Yesterday
          <span class="pull-right">
           12,575
          </span>
         </li>
         <li>
          Max Visits
          <span class="pull-right">
           23,737
          </span>
         </li>
         <li>
          Total Visits
          <span class="pull-right">
           20,807,289
          </span>
         </li>
         <li>
          Registered Members
          <span class="pull-right at-tip" data-html="true" data-original-title="<nobr>Today 10 / Yesterday 17</nobr>" data-placement="top" data-toggle="tooltip">
           73,490
          </span>
         </li>
         <li>
          Total Articles
          <span class="pull-right at-tip" data-html="true" data-original-title="<nobr>글 158,257 개/ 댓글 109,377 개</nobr>" data-placement="top" data-toggle="tooltip">
           267,634
          </span>
         </li>
        </ul>
       </div>
      </div>
      <div class="container" style="background:#fff;height:60px; padding:0;width:1053px !important;">
       <a href="k" target="_blank">
       </a>
       [ahref]
       
       [linkx]
       
       [ahref]
       
       [linkx]
       
       <a href="r" target="_blank">
       </a>
       <a href="u" target="_blank">
       </a>
      </div>
      <div class="copyright text-center">
       [area1][mkey1][area1][mkey1][pkeyx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][ahref][linkx][pkeyx][area1][keywordx][linkx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][pkeyx][ahref][linkx][ahref][ahref][area1][keywordx][area1][keywordx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][ahref]
      </div>
     </div>
    </div>
   </footer>
  </div>
  <aside class="at-sidebar en" id="asideMenu">
   <div class="close-box asideButton" style="background:#ffffff;color:#222222;border:none;margin:0;left:auto;right:8px;top:10px;" title="닫기">
    <i class="fa fa-times">
    </i>
   </div>
   <div class="sidebar-wrap no-scrollbar">
    <div class="sidebar-box" style="margin-top:27px;">
     <form action="/bbs/login_check.php" autocomplete="off" class="form" method="post" name="loginbox" role="form">
      <div class="form-group">
       <div class="input-group">
        <span class="input-group-addon">
         <i class="fa fa-user gray">
         </i>
        </span>
       </div>
      </div>
      <div class="form-group">
       <div class="input-group">
        <span class="input-group-addon">
         <i class="fa fa-lock gray">
         </i>
        </span>
       </div>
      </div>
      <div class="form-group">
       <button class="btn btn-color btn-block" type="submit">
        로그인
       </button>
      </div>
      <label>
       로그인 상태 유지
      </label>
     </form>
    </div>
    <div class="sidebar-nav">
     <ul>
      <li>
       <a href="/bbs/register.php">
        <i class="fa fa-sign-in">
        </i>
        회원가입
       </a>
      </li>
      <li>
       <a class="win_password_lost" href="/bbs/password_lost.php">
        <i class="fa fa-key">
        </i>
        비밀번호 찾기
       </a>
      </li>
     </ul>
    </div>
    <div class="sidebar-nav">
     <ul>
      <li>
       <a href="/category.php?gr_id=news">
        <i class="fa fa-file-text">
        </i>
        뉴스
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/category.php?gr_id=market">
        <i class="fa fa-shopping-cart">
        </i>
        벼룩시장
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [linkx]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="m" target="_blank">
        <i class="fa fa-music">
        </i>
        K-POP
       </a>
      </li>
      <li>
       [linkx]
       
      </li>
     </ul>
    </div>
    <div class="sidebar-nav">
     <ul>
     </ul>
    </div>
    <div style="padding:15px 20px 0px;">
     <button class="asideButton btn btn-dark btn-block" type="button">
      닫기
     </button>
    </div>
    <br/>
   </div>
  </aside>
  <aside>
   <div id="search-mask" onclick="tsearch_form();">
   </div>
   <div id="search-window">
    <h4>
     <i class="fa fa-search fa-lg">
     </i>
     Search
    </h4>
    <form class="form" method="get" name="allsearch" onsubmit="return tsearch_submit(this);" role="form">
     <div class="form-group">
      <label class="sound_only" for="url">
       검색대상
      </label>
      <select class="form-control input-sm" name="url">
       <option value="https://www.nzkoreapost.com/bbs/search.php">
        포스트
       </option>
       <option value="https://www.nzkoreapost.com/bbs/tag.php">
        태그
       </option>
      </select>
     </div>
     <div class="form-group">
      <label class="sound_only" for="stx">
       검색어
       <strong class="sound_only">
        필수
       </strong>
      </label>
     </div>
     <div class="btn-group btn-group-justified">
      <div class="btn-group">
       <button class="btn btn-color" type="submit">
        <i class="fa fa-check">
        </i>
       </button>
      </div>
      <div class="btn-group">
       <button class="btn btn-black" onclick="tsearch_form();" type="button">
        <i class="fa fa-times">
        </i>
       </button>
      </div>
     </div>
    </form>
   </div>
  </aside>
  <aside id="at-rc">
   <ul class="at-rc" style="">
    <li>
     [linkx]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     <a class="rspButton" title="알림">
      <span class="rc-box bg-yellow">
       <span class="rc-icon">
        <i class="fa fa-bell">
        </i>
       </span>
      </span>
     </a>
    </li>
    <li>
     <a class="go-top" href="#" title="상단">
      <span class="rc-box bg-violet">
       <span class="rc-icon">
        <i class="fa fa-arrow-up">
        </i>
       </span>
      </span>
     </a>
    </li>
   </ul>
  </aside>
  <aside class="at-slist" id="sideList">
   <div class="slist-close slistClose" title="닫기">
    <i class="fa fa-chevron-right">
    </i>
   </div>
   <div class="slist-wrap no-scrollbar">
    <div id="slistItem">
    </div>
    <p class="text-center">
     <i class="fa fa-times-circle fa-3x slistClose lightgray cursor">
     </i>
    </p>
    <br/>
   </div>
  </aside>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0454
  </b>
 </body>
</html>
|<---