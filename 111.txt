--->|<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="13e990e40359b9694dc5f227c71e2c827b9b51ce" name="naver-site-verification"/>
  <meta content="lmcCe7x76Zk-9kBjPqjd2qLvBVPQrgR7TnDhszOYBbM" name="google-site-verification"/>
  <meta content="no-cache" http-equiv="Cache-Control"/>
  <meta content="0" http-equiv="Expires"/>
  <meta content="no-cache" http-equiv="Pragma"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="website" property="og:type"/>
  <meta content="[area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="[area1][mkey1][symbolx][pkey4][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="http://ssomuch.com/web/upload/0127onimages.png" property="og:image"/>
  <meta content="http://ssomuch.com/category/pants/26/" property="og:url">
   <meta content="PANTS - PANTS" property="og:title">
    <meta content="PANTS" property="og:description">
     <meta content="SSOMUCH" property="og:site_name">
      <meta content="product.group" property="og:type">
       <meta content="No" http-equiv="ImageToolbar"/>
       <title>
        [area1][mkey1][symbolx][pkey1][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </title>
       <meta content="PRODUCT_LIST" name="path_role">
        <meta content="쏘머치" name="author"/>
        <meta content="[area1][mkey1][symbolx][pkey2][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
        <meta content="[area1][mkey1][symbolx][pkey3][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
        <meta content="/product/list.html" name="design_html_path"/>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <span itemscope="" itemtype="http://schema.org/Organization">
   <a href="/ssomuch" itemprop="sameAs">
   </a>
   [ahref]
   
   [linkx]
   
   <a href="/ssomuch0809" itemprop="sameAs">
   </a>
   <a href="/kr/app/id968232562" itemprop="sameAs">
   </a>
   <a href="/store/apps/details?id=com.naver.ssomuch1118" itemprop="sameAs">
   </a>
  </span>
  <div id="SML_DESC_GROBAL" style="display:none;">
  </div>
  <div id="right_cookie_slide">
   <p class="right_sliding_btn">
    <a href=";" id="right_sliding_open">
    </a>
    [ahref]
    
   </p>
   <div class="right_slide_tab">
    <ul>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
   <div class="right_contents" id="right_contents_1" style="display:block;">
    <ul class="board_list right_moving_down">
     <li>
      <a href="/member/join.html">
       회원가입혜택
      </a>
     </li>
     <li>
      <a href="/product/list.html?cate_no=30">
       개인결제창
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/ssomuch1118" target="_blank">
       블로그
      </a>
     </li>
     <li>
      [linkx]
      
     </li>
     <li>
      <a href="/ssomuch_eun/" target="_blank">
       인스타그램
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      <a href="/link/bookmark.html" onclick="winPop(this.href); return false;">
       즐겨찾기
      </a>
     </li>
     <li>
      <a href="/link/shortcut.html" onclick="winPop(this.href); return false;">
       바로가기설치
      </a>
     </li>
    </ul>
    <div class="right_snsM">
     <ul>
      <li>
      </li>
      <li>
      </li>
     </ul>
    </div>
    <div class="right_cs_info">
     <h4>
      CS CENTER
     </h4>
     <p class="tel_num">
      1577-4369
     </p>
     <p>
      AM 10:00 ~ PM 05:00
      <br/>
      LUNCH PM 01:00 ~ 02:00
     </p>
     <p>
      공휴일,일요일은 휴무
      <br/>
      토요일은 배송업무만 진행
      <br/>
      (게시판,전화업무 중단)
      <br/>
      업무시간 외 문의는
      <br/>
      게시판을 이용해 주세요.
     </p>
     <h4>
      BANK INFO
     </h4>
     <ul>
      <li>
       국민 207101 -04- 342454
      </li>
      <li>
       농협 355 - 0044- 3542-23
      </li>
      <li>
       우리 1005 - 003 - 038897[linkx]<li>[area1][keywordx]</li><li>[linkx]</li>[pkeyx][ahref]
      </li>
     </ul>
     <p class="name">
      예금주 : (주)쏘머치
     </p>
    </div>
    <div class="right_cs_info">
     <select onchange="if(this.value) window.open(this.value);">
      [area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl7][area1][keywordx][bracketr7][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl8][area1][keywordx][bracketr8][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][mkey1][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl9][area1][keywordx][bracketr9][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][pkeyx][area1][mkey1][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl10][area1][keywordx][bracketr10][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref]
     </select>
    </div>
   </div>
   <div class="right_contents" id="right_contents_2" style="display:none;">
    <div class="xans-element- xans-layout xans-layout-productrecent today_view">
     <h4>
      TODAY VIEW
     </h4>
     <ul>
      <li class="displaynone xans-record-">
       <a href="/product/detail.html##param##">
       </a>
      </li>
      <li class="displaynone xans-record-">
       [linkx]
       
      </li>
     </ul>
     <p>
     </p>
    </div>
   </div>
  </div>
  <div id="header_top">
   <div id="romi_top">
    <div class="xans-element- xans-layout xans-layout-statelogoff img_on">
     [ahref]
     
     <a href="/member/join.html" style="position:absolute; left:7px; top:18px; background:none;">
     </a>
     <a href="/member/login.html">
     </a>
     <a href="/myshop/index.html">
      [area1][mkey1]<li>[area1][mkey1]</li>[area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
     </a>
     <a class="cart" href="/order/basket.html">
     </a>
     [linkx]
     
     [ahref]
     
    </div>
    <div class="xans-element- xans-layout xans-layout-boardinfo">
     <ul>
      <li class="xans-record-">
       [linkx]
       
      </li>
      <li class="xans-record-">
       [linkx]
       
      </li>
      <li class="xans-record-">
       [linkx]
       
      </li>
      <li class="xans-record-">
       [linkx]
       
      </li>
      <li class="xans-record-">
       <a href="/board/gallery/CElist.html?board_no=12">
       </a>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <div id="romi_all">
   <div id="wrap">
    <div id="header">
     <div class="header_sh">
      <form action="/product/search.html" enctype="multipart/form-data" id="searchBarForm" method="get" name="" target="_self">
       <div class="xans-element- xans-layout xans-layout-searchheader">
        <fieldset>
        </fieldset>
       </div>
      </form>
     </div>
     <div class="xans-element- xans-layout xans-layout-logotop">
      <a class="" href="/index.html">
      </a>
     </div>
    </div>
    <hr class="layout"/>
    <div id="container">
     <div id="snb">
      <div class="xans-element- xans-layout xans-layout-category">
       <div class="postion">
        <ul>
         <li class="xans-record-">
          [linkx]
          
         </li>
         <li class="xans-record-">
          [ahref]
          
         </li>
         <li class="xans-record-">
          [area1][keywordx][linkx][area1][mkey1][area1][mkey1][pkeyx][pkeyx][linkx][ahref][pkeyx][linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl1][area1][keywordx][bracketr1][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][mkey1][area1][keywordx][area1][keywordx][area1][mkey1][area1][mkey1][area1][mkey1][pkeyx][ahref][area1][mkey1]
         </li>
         <li class="xans-record-">
          [ahref]
          
         </li>
         <li class="xans-record-">
          <a href="/product/list.html?cate_no=24">
          </a>
         </li>
         <li class="xans-record-">
          <a href="/product/list.html?cate_no=25">
          </a>
         </li>
         <li class="xans-record-">
          <a href="/product/list.html?cate_no=26">
          </a>
         </li>
         <li class="xans-record-">
          [ahref]
          
         </li>
         <li class="xans-record-">
          <a href="/product/list.html?cate_no=99">
          </a>
         </li>
         <li class="xans-record-">
          [linkx]
          
         </li>
         <li class="xans-record-">
          [ahref]
          
         </li>
         <li class="xans-record-">
          <a href="/product/list.html?cate_no=75">
          </a>
         </li>
         <li class="xans-record-">
          [ahref]
          
         </li>
         <li class="xans-record-">
          <a href="/product/list.html?cate_no=29">
          </a>
         </li>
        </ul>
       </div>
      </div>
     </div>
     <hr class="layout"/>
     <div id="contents">
      <div class="xans-element- xans-product xans-product-menupackage">
       <div class="xans-element- xans-product xans-product-headcategory title">
        <h1>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <h1>
         <b>[area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]</b>
        </h1>
        <h1>
         [area1][mkey1][symbolx][pkeyx][symbolx][area1][keyword1][bracketl1][area1][keywordx][bracketr1][symbolx][bracketl2][area1][keywordx][bracketr2][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
        </h1>
       </div>
       <ul class="menuCategory">
        <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
         <a href="/product/list.html?cate_no=203">
          반바지
          <span class="count displaynone">
           ()
          </span>
         </a>
        </li>
        <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
         [linkx]
         
        </li>
        <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
         [ahref]
         
        </li>
        <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
         [linkx]
         
        </li>
        <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
         <a href="/product/list.html?cate_no=199">
          통팬츠
          <span class="count displaynone">
           ()
          </span>
         </a>
        </li>
        <li class="xans-element- xans-product xans-product-displaycategory xans-record-" style="display:;">
         <a href="/product/list.html?cate_no=200">
          배기핏
          <span class="count displaynone">
           ()
          </span>
         </a>
        </li>
       </ul>
      </div>
      <br/>
      <br/>
      <div class="xans-element- xans-product xans-product-listrecommend" style="margin:0px auto">
       <ul class="romi_prdList itemline3">
        <li class="item xans-record-" id="anchorBoxId_9231">
         <div class="best_top">
          <span>
           Best.1
          </span>
         </div>
         <div class="box">
          <div class="thumbnail">
           [linkx]
           
          </div>
          <p class="name">
           <a href="/product/detail.html?product_no=9231&amp;cate_no=26&amp;display_group=2">
            <span style="font-size:12px;color:#555555;">
             엄지척일자팬츠
            </span>
           </a>
          </p>
          <p class="icon">
          </p>
          <ul class="xans-element- xans-product xans-product-listitem">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:13px;color:#222222;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:13px;color:#222222;font-weight:bold;">
             28,900원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:11px;color:AEAEAE;">
              상품요약정보
             </span>
             :
            </strong>
            <span style="font-size:11px;color:AEAEAE;">
             쏘머치 자체제작! 언제나 사랑받는 반밴딩 일자팬츠~ 한여름에도 입기 좋은 가벼운 소재로 출시했어요~ 어떤 상의와도 굿매치 할수 있는 블랙색상에 쭉쭉 늘어나는 신축성과 허리 반밴딩으로 편안함과 스타일 모두 잡았어요
            </span>
           </li>
          </ul>
          <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9231" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
          </p>
          <span class="btns">
           <span class="option">
           </span>
          </span>
         </div>
        </li>
        <li class="item xans-record-" id="anchorBoxId_9354">
         <div class="best_top">
          <span>
           Best.2
          </span>
         </div>
         <div class="box">
          <div class="thumbnail">
           <a href="/product/detail.html?product_no=9354&amp;cate_no=26&amp;display_group=2" name="anchorBoxName_9354">
           </a>
          </div>
          <p class="name">
           [linkx]
           
          </p>
          <p class="icon">
          </p>
          <ul class="xans-element- xans-product xans-product-listitem">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:13px;color:#222222;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:13px;color:#222222;font-weight:bold;">
             32,600원
            </span>
            <span id="span_product_tax_type_text" style="">
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:11px;color:AEAEAE;">
              상품요약정보
             </span>
             :
            </strong>
            <span style="font-size:11px;color:AEAEAE;">
             이름 그대로 인생팬츠! 누가 입어도 예쁜 일자 오버핏을 연출할수 있는 와이드 일자팬츠에요~ 지금껏 본적없는 탄탄하면서도 신축성까지 좋은 은근 독특한 소재에 와이드한 핏이라 그야말로 편안함 끝판왕! 무조건 챙기세요
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;">
              상품색상
             </span>
             :
            </strong>
            <div class="color">
             <span class="chips" color_no="" displaygroup="2" style="background-color:#000000" title="#000000">
             </span>
             <span class="chips" color_no="" displaygroup="2" style="background-color:#F7EBCD" title="#F7EBCD">
             </span>
            </div>
           </li>
          </ul>
          <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9354" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
          </p>
          <span class="btns">
           <span class="option">
           </span>
          </span>
         </div>
        </li>
        <li class="item xans-record-" id="anchorBoxId_9345">
         <div class="best_top">
          <span>
           Best.3
          </span>
         </div>
         <div class="box">
          <div class="thumbnail">
           <a href="/product/detail.html?product_no=9345&amp;cate_no=26&amp;display_group=2" name="anchorBoxName_9345">
           </a>
          </div>
          <p class="name">
           <a href="/product/detail.html?product_no=9345&amp;cate_no=26&amp;display_group=2">
            <span style="font-size:12px;color:#555555;">
             챠르륵통슬랙스(2color)
            </span>
           </a>
          </p>
          <p class="icon">
          </p>
          <ul class="xans-element- xans-product xans-product-listitem">
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:13px;color:#222222;font-weight:bold;">
              판매가
             </span>
             :
            </strong>
            <span style="font-size:13px;color:#222222;font-weight:bold;">
             34,400원
            </span>
            <span id="span_product_tax_type_text" style="">
             <li>[pkeyx]</li><li>[ahref]</li>[area1][keywordx][area1][keywordx]
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:11px;color:AEAEAE;">
              상품요약정보
             </span>
             :
            </strong>
            <span style="font-size:11px;color:AEAEAE;">
             챠르륵하게 떨어지는 가볍고 시원한 슬랙스 챙겨가세요! 와이드한 통스타일이라 하체통통 분들도 부담없이 편안하게 입으실수 있구요~ 캐쥬얼한 티셔츠는 물론 깔끔한 남방이나 블라우스와도 굿매치 할수 있어요
            </span>
           </li>
           <li class="xans-record-">
            <strong class="title displaynone">
             <span style="font-size:12px;color:#555555;">
              상품색상
             </span>
             :
            </strong>
            <div class="color">
             <span class="chips" color_no="" displaygroup="2" style="background-color:#000000" title="#000000">
             </span>
             <span class="chips" color_no="" displaygroup="2" style="background-color:#85A3C7" title="#85A3C7">
             </span>
            </div>
           </li>
          </ul>
          <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9345" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
          </p>
          <span class="btns">
           <span class="option">
           </span>
          </span>
         </div>
        </li>
       </ul>
      </div>
      <div class="xans-element- xans-product xans-product-normalpackage">
       <div class="xans-element- xans-product xans-product-normalmenu">
        <ul id="type">
         <li>
          <a href="u">
           low price
          </a>
         </li>
         <li>
          <a href="u">
           high price
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="u">
           new
          </a>
         </li>
         <li>
          [linkx]
          
         </li>
        </ul>
        <p class="prdCount">
         TOTAL
         <strong>
          324
         </strong>
         ITEMS
        </p>
       </div>
       <div class="xans-element- xans-product xans-product-listnormal">
        <ul class="romi_prdList itemline4">
         <li class="item xans-record-" id="anchorBoxId_9387">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9387&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9387">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9387&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              깔끔컷팅일자팬츠
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#878787;">
               소비자가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#878787;text-decoration:line-through;">
              38,000원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              36,100원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              유행타지 않아 몇해이고 다양한 스타일에 굿매치 하기 좋은 깔끔한 데님일자팬츠에요! 쫀쫀한 신축성과 허리안쪽 시크릿밴딩으로 편안함을 챙겨줬구요~ 깔끔한 밑단컷팅으로 살짝 접어줘도 핏감 정말 예뻐요!
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#3152A6" title="#3152A6">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9387" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9379">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              28,100원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              찰랑거리는듯 기분좋은 소재와 은근 독특한 디테일로 편안함과 스타일 모두 챙겨준 밴딩팬츠에요! 넉넉한 배기핏이라 하체통통 분들도 부담없구요~ 밑단 앞쪽은 밴딩! 뒤쪽은 깔끔하게 언발란스한 느낌이라 더욱 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#D7B170" title="#D7B170">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9379" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9380">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9380&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              서프랍빠3부팬츠(4color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              18,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              넉넉한 핏과 부담없는 기장으로 매일매일 입고 싶은 데일리한 밴딩 3부팬츠에요! 탄탄하고 신축성 좋은 밴딩이라 더욱 편안하구요~ 깔끔한 랍빠 마감처리로 심플하면서도 허전함 없이 어떤 상의에나 굿매치 할수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#FFFFFF" title="#FFFFFF">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#BBF53F" title="#BBF53F">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#81C3E6" title="#81C3E6">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9380" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9369">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9369&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9369">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9369&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              주름트랙통팬츠(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              22,800원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              입은듯 입지 않은듯한 가벼움과 허리밴딩으로 편안함을 챙겨주고 스포티한 배색으로 스타일까지 챙겨준 흔하지 않은 밴딩통팬츠에요! 그냥 밋밋한 소재가 아닌 과하지 않은 주름소재라 더욱 특별하고 멋스럽게 입으실수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              18,300원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#C20F0A" title="#C20F0A">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9369" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
             <li>[linkx]</li><li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl15][area1][keywordx][bracketr15][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[ahref]
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9354">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              32,600원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              이름 그대로 인생팬츠! 누가 입어도 예쁜 일자 오버핏을 연출할수 있는 와이드 일자팬츠에요~ 지금껏 본적없는 탄탄하면서도 신축성까지 좋은 은근 독특한 소재에 와이드한 핏이라 그야말로 편안함 끝판왕! 무조건 챙기세요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#F7EBCD" title="#F7EBCD">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9354" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9370">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9370&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9370">
            </a>
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              27,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              신축성 최고! 쭉쭉 늘어나는 신축성과 과하지 않은 4부기장으로 편안함 끝판왕인 반바지에요~ 여유있는 핏으로 어떤 체형이든 부담없이 함께할수 있구요! 허리부분 자연스러운 주름밴딩으로 편안함과 스타일 모두 챙겨줬어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#FFFFFF" title="#FFFFFF">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#D1C198" title="#D1C198">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9370" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9366">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9366&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9366">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9366&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              롤업스크래치일자팬츠
              <b>
               <br/>
               [입고지연 - 20일 이후 순차적 발송 예정]
              </b>
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              35,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              쭉쭉 늘어나는 신축성으로 편안함을 챙기고 빈티지한 스크래치와 밑단 롤업으로 스타일까지 챙긴 데님일자팬츠에요! 은은한 워싱이라 어떤 상의와도 찰떡매치! 밑단은 취향껏 롤업하지 않고 입을수 있어서 더욱 유용해요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#4D7DB8" title="#4D7DB8">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9366" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_8951">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=8951&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_8951">
             <span class="xans-element- xans-product xans-product-imagestyle xans-record-">
              <span class="prdIcon ec-product-bgLB" style="background-image:url('/web/upload/image_custom_315498506708280.png');">
              </span>
             </span>
            </a>
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              28,100원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              트레이닝 팬츠도 스타일리쉬하게! 핏과 스타일,흔하지 않은 컬러, 편안함 모두 챙긴 밴딩통팬츠에요~ 넉넉한 일자핏은 물론 넓은 밴딩으로 온종일 편안하게 함께하실수 있구요~ 밑단 컷팅처리로 더욱 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              14,400원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#B85D18" title="#B85D18">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#953AE0" title="#953AE0">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="8951" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_8930">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=8930&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              데일리일자슬랙스(3color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              34,400원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              완벽한 핏과 편안함까지 모두 갖춘 반밴딩 슬랙스에요! 밑단까지 넉넉하게 떨어지는 일자핏이라 체형커버는 물론 보다 세련된 스타일을 느낄수 있구요~ 허리 앞쪽은 뱃살을 싹 잡아주고 뒤쪽은 밴딩으로 편안함까지 갖췄어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              16,200원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#D7B170" title="#D7B170">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000082" title="#000082">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="8930" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9360">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              33,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              언제나 인기만점인 오버핏 점프슈트에요! 넉넉한 암홀과 전체적으로 완전 박시한 핏이라 체형 부담없이 누구나 편안하게 입으실수 있구요! 7~8부정도 기장이라 여름내내 시원한 느낌으로 기본티나 셔츠와 함께할수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9360" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9365">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9365&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9365">
            </a>
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              31,500원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              퀄리티 좋은 소재로 몇해이고 깔끔하게 함께하기 좋은 주름 밴딩 통팬츠에요! 쫀쫀하고 넓은 밴딩으로 뱃살을 안정적으로 잡아줘 더욱 편안하구요~ 고급스러운 주름디테일 덕분에 그냥 무지티 하나랑만 매치해도 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
               <li>[ahref]</li>[linkx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl18][area1][keywordx][bracketr18][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[pkeyx]</li><li>[pkeyx]</li>
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#A9A9A9" title="#A9A9A9">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000082" title="#000082">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9365" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9359">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9359&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              사각컷팅일자팬츠<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl16][area1][keywordx][bracketr16][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl17][area1][keywordx][bracketr17][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]<li>[area1][keywordx]</li>[ahref]
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              38,100원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              깔끔한 워싱에 밑단 사각컷팅으로 포인트를 준 은근 흔하지 않은 일자핏 데님팬츠에요! 쭉쭉 늘어나는 신축성과 허리 시크릿밴딩으로 편안함을 챙겨줬구요~ 밑단 컷팅 덕분에 발목 답답함 없이 더욱 예쁜핏으로 입기 좋아요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#5A7AA1" title="#5A7AA1">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9359" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_8859">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              34,400원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              이런 컬러감 흔하지 않아요! 블루인듯~ 검정인듯! 오묘한 딥네이비 컬러로 편안함과 스타일 모두 챙겨준 넉넉한 오버일자핏 팬츠에요! 밑단 언발란스한 기장으로 싹뚝 컷팅해줘 독특함까지 느낄수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              17,200원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#0A1E52" title="#0A1E52">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="8859" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9355">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9355&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9355">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9355&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              사슬아이스통팬츠(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              22,800원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              한여름철 빠질수 없는 아이스 통팬츠에요! 스커트처럼 와이드한 핏에 챠르륵한 소재라 부한감 없이 깔끔한 핏으로 입으실수 있구요~ 허리밴딩과 다리를 감싸는 쿨~한 느낌 덕분에 올여름 내내 편안하게 데일리팬츠로 제격이에요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              18,300원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#60A2DB" title="#60A2DB">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9355" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9345">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9345&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9345">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9345&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              챠르륵통슬랙스(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              34,400원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              챠르륵하게 떨어지는 가볍고 시원한 슬랙스 챙겨가세요! 와이드한 통스타일이라 하체통통 분들도 부담없이 편안하게 입으실수 있구요~ 캐쥬얼한 티셔츠는 물론 깔끔한 남방이나 블라우스와도 굿매치 할수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#85A3C7" title="#85A3C7">
               [pkeyx][linkx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl12][area1][keywordx][bracketr12][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][pkeyx][area1][mkey1][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl13][area1][keywordx][bracketr13][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][ahref][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl14][area1][keywordx][bracketr14][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9345" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9346">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              39,800원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              군더더기 없이 깔끔한 스타일로 어디에나 멋스럽고 편안하게 함께하기 좋은 일자핏 스키니에요! 안정적인 워싱처리로 과한 느낌이 아니라서 어떤 상의에나 굿매치 할수 있구요~ 깔끔한 밑단 컷팅으로 더욱 편안하고 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#7995B8" title="#7995B8">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9346" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9338">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              27,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              어떤 상의에나 척척 굿매치 할수 있는 데일리한 슬림핏 일자팬츠에요! 깨끗한 블루컬러에 과하지 않은 스크래치 디테일로 은은한 빈티지함을 느낄수 있구요~ 밑단 싹뚝 컷팅해줘 답답함 없이 더욱 깔끔한 핏으로 입기 좋아요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#5A96D6" title="#5A96D6">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9338" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9332">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9332&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              쿨배기슬랙스(3color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              34,400원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              지금까지 이런 슬랙스는 없었다! 레깅스보다 편하다! 극강의 편안함과 놀랍도록 시원함을 느낄수 있는 슬림배기핏 슬랙스에요! 내몸과 한몸같은 가벼운 소재와 깔끔한 허리밴딩 여기에 신축성까지 최고에요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#6C8DC7" title="#6C8DC7">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#E8DECA" title="#E8DECA">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9332" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9331">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9331&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9331">
            </a>
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              27,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              살짝쿵 A라인이라 허벅지 부담없이 더욱 예쁜핏으로 입기 좋은 데님 3부팬츠에요! 너무 짧지도 길지도 않은 안정적인 기장이라 더욱 부담없구요~ 은은한 연청이라 시원한 느낌 물씬! 루즈한 핏이라 하체통통 분들에게 추천해요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#C5D9E8" title="#C5D9E8">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9331" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
            [area1][mkey1][pkeyx][pkeyx][area1][keywordx][linkx][linkx][ahref][linkx][pkeyx][linkx][area1][keywordx][area1][mkey1][pkeyx][area1][mkey1][ahref][ahref][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl3][area1][keywordx][bracketr3][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl4][area1][keywordx][bracketr4][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl5][area1][keywordx][bracketr5][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][pkeyx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl6][area1][keywordx][bracketr6][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9325">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              29,100원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              너무 짧지도 길지도 않은 딱 적당한 기장에 고급스러운 소재라 더욱 깔끔하고 멋스럽게 입기 좋은 3부팬츠에요! 넉넉한 밑위기장이라 더욱 편안하구요~ 미니멀한 투버튼으로 포인트를 줘 상의를 넣어서 입으면 더욱 예뻐요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#F5E9D2" title="#F5E9D2">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000082" title="#000082">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9325" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9324">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9324&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              핫썸머밴딩통팬츠(4color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              22,800원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              여름느낌 물씬~ 올여름 내내 시원하고 멋스럽게 입기 좋은 밴딩통팬츠에요! 그냥 무지티 하나에만 매치해도 굿~ 누구나 좋아하는 깔끔한 도트패턴과 시원함이 느껴지는 플라워패턴 두가지 종류로 준비했어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              18,300원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#153D8C" title="#153D8C">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#C70000" title="#C70000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#3D3D3D" title="#3D3D3D">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9324" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9315">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9315&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9315">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9315&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              데님왕통팬츠(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              28,800원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              그야말로 왕박시! 빈티지한 워싱과 와이드한 핏으로 스타일을 살려주고 넉넉한 밑위와 허리밴딩으로 편안함까지 챙겨준 밴딩 데님통팬츠에요~ 답답함 없는 소프트한 워싱데님이라 더욱 편안하구요! 어디에나 굿매치 할수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              23,100원
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#01008C" title="#01008C">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#7AA1E6" title="#7AA1E6">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9315" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9310">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              29,100원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              한번 입어보면 컬러별로 욕심나는 중독 밴딩통팬츠! 놀랍도록 가볍고 시원한 소재라 한여름 내내 편안하게 함께하실수 있구요~ 고급스럽고 네츄럴한 소재라 티셔츠는 물론이고 블라우스와 매치해도 정말 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              23,300원
             </span>
            </li>
            <li class="xans-record-">
             [area1][mkey1][ahref][linkx][area1][keywordx][area1][mkey1][ahref][ahref][linkx][area1][mkey1][area1][keywordx][area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl11][area1][keywordx][bracketr11][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][linkx][pkeyx][ahref][pkeyx][pkeyx][linkx][area1][mkey1]
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9310" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9312">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9312&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              와이드밴딩3부팬츠(3color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              23,600원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              넉넉한 루즈핏으로 허벅지와 힙 부담없이 깔끔하고 편안하게 입기 좋은 밴딩3부팬츠에요! 너무 짧지도 길지도 않은 안정적인 기장이라 누구나 부담없구요~ 뱃살을 딱 잡아주는 넓은 밴딩이라 한층 더 편안하게 입기 좋아요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#FDFF6D" title="#FDFF6D">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#79A1D1" title="#79A1D1">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9312" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9311">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              47,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              심플한 무지스타일이지만 은근 찾아보기 힘든 스타일이라 소장가치는 물론 멋스럽게 입기 좋은 점프슈트에요! 입은듯 입지 않은듯 가벼운 소재라 한여름 내내 입기 좋구요~ 전체적으로 박시한 핏이라 체형커버에 제격이에요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#F0DCBD" title="#F0DCBD">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9311" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9285">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              21,800원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              무조건 강력추천! 넉넉한 와이드핏과 가장 안정적인 5부기장으로 하체통통 분들에게 제격인 반밴딩 팬츠에요! 허리 앞쪽은 깔끔하게 잡아주고 뒤쪽은 넓은밴딩으로 딱 잡아줘 더욱 편안하구요~ 와이드한 핏이라 더욱 부담없어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#DBA63D" title="#DBA63D">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#854222" title="#854222">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9285" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9286">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9286&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              아리데님일자팬츠
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              34,400원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              군더더기 없이 깔끔한 스타일이라 어떤 상의에나 손쉽게 척척 굿매치 할수 있는 일자핏 데님팬츠에요! 은은한 블루워싱이라 어디에나 부담없구요~ 가벼운 데님소재라 여름에도 굿~ 허리 안쪽 시크릿밴딩이라 더욱 편안해요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#5389B8" title="#5389B8">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9286" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9284">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9284&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9284">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9284&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              로프라벨3부팬츠(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              17,500원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              유니크하면서도 시원한 느낌으로 한여름 내내 어디에나 함께하기 좋은 밴딩팬츠에요! 전체적으로 넉넉한 핏이라 하체통통 분들도 부담없이 함께할수 있구요~ 허리 스트링과 라벨로 포인트를 넣어줘 더욱 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#D7E600" title="#D7E600">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9284" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9272">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9272&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9272">
            </a>
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              36,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              여름내내 함께하게 될 여름 데일리 데님통팬츠! 가벼운 데님소재라 답답함 없이 여름내내 시원하고 편안하게 함께 하실수 있구요~ 넉넉한 밑위와 허리뒤쪽 반밴딩 여기에 밑단까지 완벽한 와이드핏이라 더욱 멋스럽고 편안해요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#5374A6" title="#5374A6">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9272" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9230">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9230&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              트임밴딩통팬츠(3color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;text-decoration:line-through;">
              26,300원
             </span>
             <span id="span_product_tax_type_text" style="text-decoration:line-through;">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              스타일과 편안함 모두 챙겨준 와이드한 밴딩통팬츠에요! 찌는듯한 더위도 걱정없는 가볍고 시원한 소재라 온종일 편안하게 함께할수 있구요~ 밑단 슬릿 디테일로 그냥 통팬츠보다 한층 더 센스있게 입기 좋아요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title">
              <span style="font-size:12px;color:#e63333;font-weight:bold;">
               할인판매가
              </span>
              :
             </strong>
             <span style="font-size:12px;color:#e63333;font-weight:bold;">
              21,100원
             </span>
            </li>
            <li class="xans-record-">
             [pkeyx]<li>[ahref]</li>[area1][keywordx][linkx][area1][keywordx]
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9230" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9253">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9253&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              자켓인듯점프슈트(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              49,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              마치 자켓을 입은듯한 효과~ 제대로 갖춰 입은듯 멋스럽게 함께하기 좋은 점프슈트에요! 지금껏 본적없던 스타일~ 마치 반팔자켓을 입은듯 하지만 넉넉한 반바지 점프슈트로 편안함은 물론 스타일까지 챙겼어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#998261" title="#998261">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9253" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9054">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9054&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9054">
            </a>
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              17,500원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              언제나 인기만점 밴딩통팬츠~ 쭉쭉 신축성을 겸비한 찰랑이는듯한 가벼운 소재와 하체를 제대로 커버해주는 와이드한 핏으로 편안함과 스타일 모두 잡아준 밴딩팬츠에요! 세로 골지패턴이라 더욱 날씬해보여요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#FFFFFF" title="#FFFFFF">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9054" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_8991">
          <div class="box">
           [area1][keywordx]<li>[linkx]</li><li>[area1][mkey1]</li>[pkeyx]<li>[ahref]</li>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9242">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9242&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9242">
            </a>
           </div>
           <p class="name">
            [linkx]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              12,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              언제나 인기있는 밴딩팬츠~ 이번에는 조금 더 유니크한 느낌으로 준비했어요! 과하지 않은 딱 적당한 기장과 넉넉한 핏으로 누구나 부담없이 입기 좋구요~ 꼬임없는 편안한 밴딩과 두께감이 다른 옆라인 포인트로 더욱 멋스러워요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#A9A9A9" title="#A9A9A9">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#C20F0A" title="#C20F0A">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9242" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9241">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [ahref]
            
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9241&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              레디셋업(2color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              28,100원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              누구나 좋아할만한 알찬구성! 박시한 티셔츠와 편안함 끝판왕 밴딩3부팬츠가 한세트~ 심플하면서도 유니크한 느낌이라 매일매일 편안하게 함께하기 좋은 세트에요! 각각 따로따로 다른 아이템과 코디하기에도 좋아 활용도 최고에요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9241" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9231">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9231&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9231">
            </a>
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              28,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              쏘머치 자체제작! 언제나 사랑받는 반밴딩 일자팬츠~ 한여름에도 입기 좋은 가벼운 소재로 출시했어요~ 어떤 상의와도 굿매치 할수 있는 블랙색상에 쭉쭉 늘어나는 신축성과 허리 반밴딩으로 편안함과 스타일 모두 잡았어요
             </span>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9231" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9030">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9030&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9030">
            </a>
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              21,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              안정적으로 뱃살까지 싹 잡아줘 체형커버는 물론 스타일까지 챙겨준 밴딩통팬츠에요! 허리밴딩 안쪽으로 숨겨준 시크릿밴딩이라 상의를 살짝 넣어서 입어도 깔끔하구요~ 밑단까지 와이드한 통팬츠라 하체통통 분들에게 제격이에요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#FFFFFF" title="#FFFFFF">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000082" title="#000082">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#DBC6A7" title="#DBC6A7">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9030" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9150">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9150&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9150">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9150&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              루즈핏슬릿일자팬츠
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              30,800원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              누가 입어도 핏 예쁜 넉넉한 일자팬츠에요! 한톤 다운된 은은한 워싱에 깔끔한 스타일이라 어떤 하의에나 굿매치 할수 있구요~ 밑단 양옆 슬릿 디테일 덕분에 답답함 없이 더욱 편안하게 함께할수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#678CA8" title="#678CA8">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9150" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9190">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            <a href="/product/detail.html?product_no=9190&amp;cate_no=26&amp;display_group=1" name="anchorBoxName_9190">
            </a>
           </div>
           <p class="name">
            <a href="/product/detail.html?product_no=9190&amp;cate_no=26&amp;display_group=1">
             <span style="font-size:12px;color:#555555;">
              썸머랍빠밴딩팬츠(5color)
             </span>
            </a>
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              11,900원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              매해 사랑받고 있는 랍빠 3부밴딩팬츠! 이번에도 다양한 컬러로 준비했어요~ 넉넉한 핏은 물론 과하지 않은 기장과 꼬임 없는 편안함 밴딩까지~ 1년 365일 언제 어디서나 함께할수 있으니 컬러별로 소장하시면 활용도 최고에요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#E0FF33" title="#E0FF33">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#C20F0A" title="#C20F0A">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#A9A9A9" title="#A9A9A9">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#311CD6" title="#311CD6">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9190" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
         <li class="item xans-record-" id="anchorBoxId_9229">
          <div class="box">
           <div class="thumbnail">
            <span class="chk">
            </span>
            [linkx]
            
           </div>
           <p class="name">
            [ahref]
            
           </p>
           <p class="icon">
           </p>
           <ul class="xans-element- xans-product xans-product-listitem">
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:13px;color:#000000;font-weight:bold;">
               판매가
              </span>
              :
             </strong>
             <span style="font-size:13px;color:#000000;font-weight:bold;">
              27,200원
             </span>
             <span id="span_product_tax_type_text" style="">
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:11px;color:#adadad;">
               상품요약정보
              </span>
              :
             </strong>
             <span style="font-size:11px;color:#adadad;">
              넉넉한 루즈핏에 4부정도 기장이라 하체통통 분들도 부담없는 롤업팬츠에요! 허벅지 부담없는 넉넉한 사이즈에 안정적인 기장이라 누구나 편안하게 함께할수 있구요~ 심플한 스타일이라 어떤 상의와도 굿매치 할수 있어요
             </span>
            </li>
            <li class="xans-record-">
             <strong class="title displaynone">
              <span style="font-size:12px;color:#555555;">
              </span>
              :
             </strong>
             <div class="color">
              <span class="chips" color_no="" displaygroup="1" style="background-color:#000000" title="#000000">
              </span>
              <span class="chips" color_no="" displaygroup="1" style="background-color:#FFFDE5" title="#FFFDE5">
              </span>
             </div>
            </li>
           </ul>
           <p class="crema-product-reviews-count" data-format="Review {{{count}}}" data-hide-if-zero="1" data-product-code="9229" style="margin-bottom: 15px; font-size: 11px; font-weight: normal; text-align: left;">
           </p>
           <span class="btns">
            <span class="option">
            </span>
           </span>
          </div>
         </li>
        </ul>
       </div>
      </div>
      <div class="xans-element- xans-product xans-product-normalpaging romi_paging">
       <p>
        [linkx]
        
       </p>
       <p>
        [linkx]
        
       </p>
       <ol>
        <li class="xans-record-">
         <a class="this" href="1">
          1
         </a>
        </li>
        <li class="xans-record-">
         [linkx]
         
        </li>
        <li class="xans-record-">
         <a class="other" href="3">
          3
         </a>
        </li>
        <li class="xans-record-">
         <a class="other" href="4">
          4
         </a>
        </li>
        <li class="xans-record-">
         <a class="other" href="5">
          5
         </a>
        </li>
       </ol>
       <p>
        [ahref]
        
       </p>
       <p>
        [ahref]
        
       </p>
      </div>
      <div class="tb_tagManager" hidden="" style="display:none">
       <div class="xans-element- xans-product xans-product-menupackage" hidden="" style="display:none">
        <div class="xans-element- xans-product xans-product-headcategory title" hidden="" style="display:none">
         <div class="categoryName1" hidden="">
          PANTS
         </div>
         <div class="categoryName2" hidden="">
         </div>
         <div class="categoryName3" hidden="">
         </div>
         <div class="categoryCode1" hidden="">
          ?cate_no=26
         </div>
         <div class="categoryCode2" hidden="">
         </div>
         <div class="categoryCode3" hidden="">
         </div>
        </div>
       </div>
      </div>
      <div id="snackbe_main">
      </div>
      <span id="snackbe_store_id" style="display:none">
       ssomuch
      </span>
     </div>
    </div>
    <div id="quick">
     <div class="xans-element- xans-layout xans-layout-orderbasketcount">
     </div>
    </div>
    <hr class="layout"/>
   </div>
   <div id="footer">
    <div class="xans-element- xans-layout xans-layout-bottom">
     <div class="bottom_info">
      <ul>
       <li class="info">
       </li>
       <li class="mypage img_on">
        [linkx]
        
        [linkx]
        
        <a href="/myshop/mileage/historyList.html">
        </a>
        <a href="/myshop/order/list.html">
        </a>
       </li>
       <li class="board img_on">
        <a href="/board/free/list.html?board_no=1">
        </a>
        <a href="/board/product/list.html?board_no=6">
        </a>
        [ahref]
        
        [linkx]
        
       </li>
       <li class="del">
        [linkx][area1][keywordx]<li>[area1][keywordx][symbolx][area1][keywordx][symbolx][bracketl2][area1][keywordx][bracketr2][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx]</li><li>[linkx]</li><li>[ahref]</li>
       </li>
      </ul>
     </div>
    </div>
    <br>
     <div style="text-align:center;">
      <p>
      </p>
     </div>
     <div class="xans-element- xans-layout xans-layout-footer">
      <div class="address">
       <p>
        <span>
         Company :
         <strong>
          (주)쏘머치
         </strong>
        </span>
        |
        <span>
         대표 :
         <strong>
          최은철
         </strong>
        </span>
        |
        <span>
         <strong>
          대표번호 : 1577-4369
         </strong>
        </span>
        |
        <span>
         <strong>
          팩스 : 031-8015-4611
         </strong>
        </span>
        |
        <span>
         <strong>
          주소 : 경기도 화성시 남여울1길 5-15(능동) 1층
         </strong>
        </span>
        <br>
         <span>
          개인정보관리책임자 :
          <strong>
           이은정(eun@ssomuch.com)<li>[pkeyx]</li><li>[ahref]</li><li>[ahref]</li><li>[pkeyx]</li>
          </strong>
         </span>
         |
         <span>
          <strong>
           사업자등록번호 :
          </strong>
          347-88-00566
         </span>
         |
         <span>
          <strong>
           통신판매업신고 :
          </strong>
          제2016-화성동부-0388호
         </span>
         <br>
          <span>
           <strong>
            건강기능식품판매업 신고번호 :
           </strong>
           제2014-0308139호
          </span>
          <span>
           [linkx]
           
          </span>
          <br/>
         </br>
        </br>
       </p>
       <p>
       </p>
      </div>
      <div class="utilcompany">
       <span class="copy">
        copyright (c) ssomuch.com
       </span>
       [ahref]
       
       <span class="romi">
        design by. romidesign
       </span>
      </div>
     </div>
    </br>
   </div>
  </div>
  <div id="progressPaybar" style="display:none;">
   <div class="layerProgress" id="progressPaybarBackground">
   </div>
   <div id="progressPaybarView">
    <div class="box">
     <p class="graph">
      <span>
      </span>
      <span>
      </span>
     </p>
     <p class="txt">
      본 결제 창은 결제완료 후 자동으로 닫히며,결제 진행 중에 본 결제 창을 닫으시면
      <br/>
      주문이 되지 않으니 결제 완료 될 때 까지 닫지 마시기 바랍니다.
     </p>
    </div>
   </div>
  </div>
  <div id="crt_product_list_script" style="display:none;">
  </div>
  <div id="etc_common_top_script" style="display:none;">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice08-ipp13-wa-za-0122
  </b>
 </body>
</html>
|<---